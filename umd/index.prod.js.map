{"version":3,"file":"index.prod.js","mappings":"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","sources":["webpack://tinode-webapp/external var \"React\"","webpack://tinode-webapp/external var \"ReactDOM\"","webpack://tinode-webapp/external var \"ReactIntl\"","webpack://tinode-webapp/external var \"firebase\"","webpack://tinode-webapp/external var \"Tinode\"","webpack://tinode-webapp/external var [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/lazy-image.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/lib/formatters.js","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/widgets/forward-menu.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/badge-list.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/cropper.jsx","webpack://tinode-webapp/./src/widgets/avatar-crop.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/widgets/topic-desc-edit.jsx","webpack://tinode-webapp/./src/widgets/topic-common.jsx","webpack://tinode-webapp/./src/widgets/topic-security.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/account-settings-view.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.18.0-alpha1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: when image dimensions are greater or the image is not square, it's resized to\n// a square of this size or less.\nexport const AVATAR_SIZE = 384;\n\n// Maximum size of an avatar in bytes for sending in-band. Bigger avatars will be sent out of band (as uploads).\nexport const MAX_AVATAR_BYTES = 4096;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Linear dimensions of image thumbnail: shrink image under this size for thumbnails in reply quote previews.\nexport const IMAGE_THUMBNAIL_DIM = 36;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n// Maximum length of topic description.\nexport const MAX_TOPIC_DESCRIPTION_LENGTH = 360;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Length of a quote in quoted reply (for outgoing messages).\nexport const QUOTED_REPLY_LENGTH = 30;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  reply: {\n    id: 'menu_item_reply',\n    defaultMessage: 'Reply',\n    description: 'Reply to message'\n  },\n  forward: {\n    id: 'menu_item_forward',\n    defaultMessage: 'Forward',\n    description: 'Forward message'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  unarchive: {\n    id: 'menu_item_restore_topic',\n    defaultMessage: 'Restore',\n    description: 'Restore topic from archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'menu_item_reply': {\n        id: 'menu_item_reply',\n        title: formatMessage(messages.reply),\n        handler: (params, errorHandler) => {\n          return this.replyToMessage(params, errorHandler);\n        }\n      },\n      'menu_item_forward': {\n        id: 'menu_item_forward',\n        title: formatMessage(messages.forward),\n        handler: (params, errorHandler) => {\n          return this.forwardMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'topic_restore': {\n        id: 'topic_restore',\n        title: formatMessage(messages.unarchive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(false).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (this.selfRef.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.error(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  replyToMessage(params, errorHandler) {\n    console.log(\"Reply to message\", params);\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  replyToMessage(params, errorHandler) {\n    params.pickReply(params.seq, params.content, params.userFrom, params.userName, errorHandler);\n  }\n\n  forwardMessage(params, errorHandler) {\n    //params.pickReply({ seq: params.seq, content: params.content });\n    //this.props.\n    console.log('forwarding msg ', params);\n  }\n\n  render() {\n    const menu = [];\n    let count = 0;\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position} ref={this.selfRef}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block', 'staff': 'verified_user'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n  render() {\n    let badges = null;\n    if (this.props.badges && this.props.badges.length > 0) {\n      badges = [];\n      this.props.badges.map((b) => {\n        const color = (b.color ? ' ' + b.color : '');\n        if (b.icon) {\n          badges.push(<i className={'material-icons as-badge' + color} key={b.key || b.icon}>{icon_mapping[b.icon] || b.icon}</i>);\n        } else {\n          badges.push(<span className={'badge' + color} key={b.key || b.name}>{b.name}</span>);\n        }\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Shorten a file name to be under maxLength by clipping out the middle.\nexport function shortenFileName(filename, maxLength) {\n  if (typeof filename != 'string') {\n    return filename;\n  }\n  return filename.length > maxLength ?\n    filename.slice(0, maxLength/2 - 1) + '…' + filename.slice(1 - maxLength/2) : filename;\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nfunction stringToColorHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n\n// User avatar letter color id.\nexport function letterTileColorId(userId) {\n  return Math.abs(stringToColorHash(userId)) % 16;\n}\n\n// Converts user or topic ID to a CSS color class. Ideally it should produce the same color value as Java version.\n// params:\n// - {string} id: user or topic ID\n// - {boolean} light: light or dark version of the color.\n// - {boolean} fg: foreground (text) or background color.\nexport function idToColorClass(id, light, fg) {\n  return (light ? 'lt-' : 'dk-') + (fg ? 'fg-' : 'bg-') + letterTileColorId(id);\n}\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType, note) {\n  let card = null;\n  fn = fn && fn.trim();\n  note = note && note.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (typeof note == 'string') {\n    card = card || {};\n    card.note = note ? note : Tinode.DEL_CHAR;\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1),\n        ref: Tinode.DEL_CHAR\n      };\n    } else {\n      card.photo = {\n        data: Tinode.DEL_CHAR,\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (typeof url != 'string') {\n    return url;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'danger-color' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { idToColorClass } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = idToColorClass(this.props.topic, isGroup);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      const url = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={url}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"../img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// Image with a placeholder which is replaced when the promise is resolved.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class LazyImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      src: 'img/placeholder.png',\n      style: Object.assign({padding: '4px'}, this.props.style),\n      className: this.props.className,\n      alt: this.props.alt,\n      onClick: this.props.onClick,\n    };\n  }\n\n  componentDidMount() {\n    this.props.whenDone\n      .then(data => this.setState({src: data.src, style: {...this.state.style, padding: 0}}))\n      .catch(() => this.setState({src: 'img/broken_image.png'}));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.whenDone != this.props.whenDone) {\n      this.setState({src: 'img/placeholder.png', style: {...this.state.style, padding: '4px'}});\n      this.props.whenDone\n        .then(data => this.setState({src: data.src, style: {...this.state.style, padding: 0}}))\n        .catch(() => this.setState({src: 'img/broken_image.png'}));\n    }\n  }\n\n  render() {\n    return React.createElement('img', this.state);\n  }\n};\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Get an URL from a theCard photo: either create a data: URL or return reference URL.\nexport function makeImageUrl(photo) {\n  if (photo && typeof photo == 'object') {\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n    return photo.ref;\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// Returns a promise which is resolven on success or rejected on failure.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.onerror = function(err) {\n      reject(new Error(\"Image format unrecognized\"));\n    }\n    img.onload = async function() {\n      // Once the image is loaded, the URL is no longer needed.\n      URL.revokeObjectURL(img.src);\n\n      // Calculate the desired image dimensions.\n      const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n      if (!dim) {\n        reject(new Error(\"Invalid image\"));\n        return;\n      }\n      let canvas = document.createElement('canvas');\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      let ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n\n      const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n      // Generate blob to check size of the image.\n      let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n      if (!blob) {\n        reject(new Error(\"Unsupported image format\"));\n        return;\n      }\n\n      // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n      // Do nothing if maxsize is <= 0.\n      while (maxSize > 0 && blob.length > maxSize) {\n        dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n        dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n        canvas.width = dim.dstWidth;\n        canvas.height = dim.dstHeight;\n        ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n          0, 0, dim.dstWidth, dim.dstHeight);\n        blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n      }\n\n      canvas = null;\n      resolve({mime: mime, blob: blob, width: dim.dstWidth, height: dim.dstHeight, name: fileNameForMime(fileOrBlob.name, mime)});\n    };\n    img.src = URL.createObjectURL(fileOrBlob);\n  });\n}\n\n// Scale and crop image according to specified dimensions.\n// The coordinates are in unscaled image pixels, i.e. cut the rectangle first then scale it.\n// returns a promise.\nexport function imageCrop(mime, objURL, left, top, width, height, scale) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.onerror = (err) => {\n      reject(new Error(\"Image format unrecognized\"));\n    };\n    img.onload = () => {\n      // Once the image is loaded, the URL is no longer needed.\n      URL.revokeObjectURL(img.src);\n\n      let canvas = document.createElement('canvas');\n      canvas.width = width * scale;\n      canvas.height = height * scale;\n      let ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n      ctx.drawImage(this, left, top, width, height, 0, 0, canvas.width, canvas.height);\n\n      mime = SUPPORTED_IMAGE_FORMATS.includes(mime) ? mime : 'image/jpeg';\n      // Generate blob to check size of the image.\n      canvas.toBlob((blob) => {\n        // Allow GC.\n        canvas = null;\n        if (blob) {\n          resolve({mime: mime, blob: blob, width: width, height: height});\n        } else {\n          reject(new Error(\"Unsupported image format\"));\n        }\n      }, mime);\n    };\n    img.src = objURL;\n  });\n}\n\n// Convert file to base64 string.\nexport function fileToBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = (evt) => {\n      reject(reader.error);\n    };\n    reader.onload = () => {\n      resolve({mime: file.type, bits: reader.result.split(',')[1], name: file.name});\n    };\n    reader.readAsDataURL(file);\n  });\n}\n\n// Convert Blob to base64 string. Returns a promise resolved with the base64 string and mime.\nexport function blobToBase64(blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = (evt) => {\n      reject(reader.error);\n    };\n    reader.onload = () => {\n      resolve({mime: blob.type, bits: reader.result.split(',')[1]});\n    };\n    reader.readAsDataURL(blob);\n  });\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  const items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  if (!Array.isArray(items)) {\n    return false;\n  }\n\n  for (let i in items) {\n    const item = items[i];\n    if (item.kind === 'file') {\n      const file = item.getAsFile();\n      if (!file) {\n        console.error(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        onError(\"Failed to get file object from pasted file item\");\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        onImageSuccess(file);\n      } else {\n        onAttachmentSuccess(file);\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.error(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n\n// Convert a base64 encoded string with the provided mime type into a Blob.\nexport function base64ToBlob(str, mime) {\n  if (!str) {\n    return null;\n  }\n\n  try {\n    // Make blob.\n    const bin = atob(str);\n    const length = bin.length;\n    const buf = new ArrayBuffer(length);\n    const arr = new Uint8Array(buf);\n    for (let i = 0; i < length; i++) {\n      arr[i] = bin.charCodeAt(i);\n    }\n\n    return new Blob([buf], { type: mime });\n  } catch(err) {\n    console.error(\"Failed to convert base64 to blob: \", err);\n  }\n\n  return null;\n}\n","import React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport LazyImage from '../widgets/lazy-image.jsx'\nimport UploadingImage from '../widgets/uploading-image.jsx'\n\nimport { IMAGE_THUMBNAIL_DIM, BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { base64ToBlob, blobToBase64, fitImageSize, imageScaled } from './blob-helpers.js';\nimport { idToColorClass, shortenFileName } from './strformat.js';\nimport { sanitizeImageUrl } from './utils.js';\n\nconst messages = defineMessages({\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  },\n});\n\n// Size the already scaled image.\nfunction handleImageData(el, data, attr) {\n  if (!data) {\n    attr.src = 'img/broken_image.png';\n    attr.style = {\n      width: IMAGE_THUMBNAIL_DIM + 'px',\n      height: IMAGE_THUMBNAIL_DIM + 'px',\n    };\n    return el;\n  }\n\n  attr.className = 'inline-image';\n  const dim = fitImageSize(data.width, data.height,\n    this.viewportWidth > 0 ? Math.min(this.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5) :\n      REM_SIZE * 34.5, REM_SIZE * 24, false) ||\n      {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n  attr.style = {\n    width: dim.dstWidth + 'px',\n    height: dim.dstHeight + 'px',\n    // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n    minWidth: dim.dstWidth + 'px',\n    minHeight: dim.dstHeight + 'px'\n  };\n  if (!Drafty.isProcessing(data)) {\n    attr.src = this.authorizeURL(sanitizeImageUrl(attr.src));\n    attr.alt = data.name;\n    if (attr.src) {\n      if (Math.max(data.width || 0, data.height || 0) > IMAGE_THUMBNAIL_DIM) {\n        // Allow previews for large enough images.\n        attr.onClick = this.onImagePreview;\n        attr.className += ' image-clickable';\n      }\n      attr.loading = 'lazy';\n    } else {\n      attr.src = 'img/broken_image.png';\n    }\n  } else {\n    // Use custom element instead of <img>.\n    el = UploadingImage;\n  }\n\n  return el;\n}\n\nfunction quotedImage(data) {\n  let promise;\n  // Get the blob from the image data.\n  if (data.val) {\n    const blob = base64ToBlob(data.val, data.mime);\n    promise = blob ? Promise.resolve(blob) : Prmise.reject(new Error(\"Invalid image\"));\n  } else {\n    promise = fetch(this.authorizeURL(sanitizeImageUrl(data.ref))).then(evt => {\n      if (evt.ok) {\n        return evt.blob();\n      } else {\n        throw new Error(`Image fetch unsuccessful: ${evt.status} ${evt.statusText}`);\n      }\n    });\n  }\n\n  // Scale the blob.\n  return promise\n    .then(blob => {\n      return imageScaled(blob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, true)\n    }).then(scaled => {\n      data.mime = scaled.mime;\n      data.size = scaled.blob.size;\n      data.width = scaled.width;\n      data.height = scaled.height;\n      delete data.ref;\n      // Keeping the original file name, if provided: ex.data.name;\n\n      return blobToBase64(scaled.blob);\n    }).then(b64 => {\n      data.val = b64.bits;\n      return data;\n    }).catch(err => {\n      delete data.val;\n      delete data.name;\n      data.width = IMAGE_THUMBNAIL_DIM;\n      data.height = IMAGE_THUMBNAIL_DIM;\n      data.maxWidth = IMAGE_THUMBNAIL_DIM;\n      data.maxHeight = IMAGE_THUMBNAIL_DIM;\n      // Rethrow.\n      throw err;\n    });\n}\n\n// The main Drafty formatter: converts Drafty elements into React classes. 'this' is set by the caller.\n// 'this' must contain:\n//    viewportWidth: this.props.viewportWidth;\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onImagePreview: this.handleImagePreview\n//    onFormButtonClick: this.handleFormButtonClick\n//    onQuoteClick: this.handleQuoteClick (optional)\nexport function fullFormatter(style, data, values, key) {\n  if (!style) {\n    // Unformatted.\n    return values;\n  }\n\n  if (style == 'HD') {\n    // Hidden.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  const attr = Drafty.attrValue(style, data) || {};\n  attr.key = key;\n  switch (style) {\n    case 'HL':\n      // Highlighted text. Assign class name.\n      attr.className = 'highlight';\n      break;\n    case 'IM':\n      // Additional processing for images\n      el = handleImageData.call(this, el, data, attr);\n      // Image element cannot have content.\n      values = null;\n      break;\n    case 'BN':\n      // Button\n      attr.onClick = this.onFormButtonClick;\n      let inner = React.Children.map(values, (child) => {\n        return typeof child == 'string' ? child : undefined;\n      });\n      if (!inner || inner.length == 0) {\n        inner = [attr.name]\n      }\n      // Get text which will be sent back when the button is clicked.\n      attr['data-title'] = inner.join('');\n      break;\n    case 'MN':\n      // Mention\n      attr.className = 'mention'\n      if (data) {\n        attr.className += ' ' + idToColorClass(data.val, false, true);\n      }\n      break;\n    case 'FM':\n      // Form\n      attr.className = 'bot-form';\n      break;\n    case 'RW':\n      // Form element formatting is dependent on element content.\n      break;\n    case 'QQ':\n      // Quote/citation.\n      attr.className = 'reply-quote'\n      attr.onClick = this.onQuoteClick;\n      break;\n    default:\n      if (el == '_UNKN') {\n        // Unknown element.\n        el = React.Fragment;\n        values = [<i className=\"material-icons gray\">extension</i>, ' '].concat(values || []);\n      }\n      break;\n  }\n  if (!el) {\n    return values;\n  }\n  return React.createElement(el, attr, values);\n};\n\n// Converts Drafty object into a one-line preview. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\nexport function previewFormatter(style, data, values, key) {\n  if (!style) {\n    // Unformatted.\n    return values;\n  }\n\n  if (style == 'HD') {\n    // Hidden.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  switch (style) {\n    case 'BR':\n      // Replace new line with a space.\n      el = React.Fragment;\n      values = [' '];\n      break;\n    case 'HL':\n      // Make highlight less prominent in preview.\n      attr.className = 'highlight preview';\n      break;\n    case 'LN':\n    case 'MN':\n      // Disable links in previews.\n      el = 'span';\n      break;\n    case 'IM':\n      // Replace image with '[icon] Image'.\n      el = React.Fragment;\n      values = [<i key=\"im\" className=\"material-icons\">photo</i>, this.formatMessage(messages.drafty_image)];\n      break;\n    case 'BN':\n      el = 'span';\n      attr.className = 'flat-button faux';\n      break;\n    case 'FM':\n      el = React.Fragment;\n      values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n        this.formatMessage(messages.drafty_form)].concat(' ', values || []);\n      break;\n    case 'RW':\n      el = React.Fragment;\n      break;\n    case 'EX':\n      if (data) {\n        if (data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        // Clear payload.\n        delete data.val;\n        delete data.ref;\n      }\n      el = React.Fragment;\n      values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, this.formatMessage(messages.drafty_attachment)];\n      break;\n    default:\n      if (el == '_UNKN') {\n        el = React.Fragment;\n        values = [<i key=\"unkn\" className=\"material-icons\">extension</i>, ' '].concat(values || []);\n      }\n      break;\n  }\n  if (!el) {\n    return values;\n  }\n  return React.createElement(el, attr, values);\n};\n\n// Converts Drafty object into a quoted reply. 'this' is set by the caller.\nfunction inlineImageAttr(attr, data) {\n  attr.style = {\n    width: IMAGE_THUMBNAIL_DIM + 'px',\n    height: IMAGE_THUMBNAIL_DIM + 'px',\n    maxWidth: IMAGE_THUMBNAIL_DIM + 'px',\n    maxHeight: IMAGE_THUMBNAIL_DIM + 'px',\n  }\n  attr.className = 'inline-image';\n  attr.alt = this.formatMessage(messages.drafty_image);\n  if (!data) {\n    attr.src = 'img/broken_image.png';\n  }\n  attr.title = attr.alt;\n  return attr;\n}\n\n// Displays a portion of Drafty within 'QQ' quotes. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onQuoteClick: this.handleQuoteClick (optional)\nexport function quoteFormatter(style, data, values, key) {\n  if (['BR', 'EX', 'IM', 'MN', 'QQ'].includes(style)) {\n    let el = Drafty.tagName(style);\n    let attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch(style) {\n      case 'IM':\n        attr = inlineImageAttr.call(this, attr, data);\n        values = [React.createElement('img', attr, null), ' ', attr.alt];\n        el = React.Fragment;\n        // Fragment attributes.\n        attr = {key: key};\n        break;\n      case 'MN':\n        el = 'span';\n        attr.className = 'mention'\n        if (data) {\n          attr.className += ' ' + idToColorClass(data.val, false, true);\n        }\n        break;\n      case 'QQ':\n        attr.className = 'reply-quote';\n        attr.onClick = this.onQuoteClick;\n        break;\n      case 'EX':\n        let fname;\n        if (data) {\n          if (data.mime == 'application/json') {\n            // Ignore JSON attachments: they are form response payloads.\n            return null;\n          }\n          fname = data.name;\n          // Clear payload.\n          delete data.val;\n          delete data.ref;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>,\n          shortenFileName(fname, 16) || this.formatMessage(messages.drafty_attachment)];\n        break;\n    }\n    return React.createElement(el, attr, values);\n  }\n  return previewFormatter.call(this, style, data, values, key);\n}\n\n// Create image thumbnail suitable for inclusion in a quote.\nfunction quoteImage(data) {\n  let promise;\n  // Get the blob from the image data.\n  if (data.val) {\n    const blob = base64ToBlob(data.val, data.mime);\n    promise = blob ? Promise.resolve(blob) : Promise.reject(new Error(\"Invalid image\"));\n  } else {\n    promise = fetch(this.authorizeURL(sanitizeImageUrl(data.ref))).then(evt => {\n      if (evt.ok) {\n        return evt.blob();\n      } else {\n        throw new Error(`Image fetch unsuccessful: ${evt.status} ${evt.statusText}`);\n      }\n    });\n  }\n\n  // Scale the blob.\n  return promise\n    .then(blob => {\n      // Cut the square from the center of the image and shrink it.\n      return imageScaled(blob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, true)\n    }).then(scaled => {\n      data.mime = scaled.mime;\n      data.size = scaled.blob.size;\n      data.width = scaled.width;\n      data.height = scaled.height;\n      delete data.ref;\n      // Keeping the original file name, if provided: ex.data.name;\n\n      data.src = URL.createObjectURL(scaled.blob);\n      return blobToBase64(scaled.blob);\n    }).then(b64 => {\n      data.val = b64.bits;\n      return data;\n    }).catch(err => {\n      delete data.val;\n      delete data.src;\n      data.width = IMAGE_THUMBNAIL_DIM;\n      data.height = IMAGE_THUMBNAIL_DIM;\n      // Rethrow.\n      throw err;\n    });\n}\n\n// Create a preview of a reply.\nexport function replyFormatter(style, data, values, key) {\n  if (style != 'IM') {\n    return quoteFormatter.call(this, style, data, values, key);\n  }\n  const attr = inlineImageAttr.call(this, {key: key}, data);\n  attr.whenDone = quoteImage.call(this, data);\n  values = [React.createElement(LazyImage, attr, null), ' ', attr.alt];\n  return React.createElement(React.Fragment, {key: key}, values);\n}\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { previewFormatter } from '../lib/formatters.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.isVerified) {\n      icon_badges.push({icon: 'verified', color: 'verified-color'});\n    }\n    if (this.props.isStaff) {\n      icon_badges.push({icon: 'staff', color: 'staff-color'});\n    }\n    if (this.props.isDangerous) {\n      icon_badges.push({icon: 'dangerous', color: 'danger-color'});\n    }\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        Drafty.isValid(this.props.preview) ?\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, previewFormatter,\n          {formatMessage: this.props.intl.formatMessage})) :\n        <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n          <FormattedMessage id=\"invalid_content\"\n            defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i>\n        </>\n      ) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            tinode={this.props.tinode}\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <ContactBadges badges={icon_badges} /><UnreadBadge count={this.props.unread} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            this.props.small ? null : <div className=\"contact-comment\">{marker}<span>{subtitle || '\\u00A0'}</span></div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              tinode={this.props.tinode}\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              isVerified={c.trusted && c.trusted.verified}\n              isStaff={c.trusted && c.trusted.staff}\n              isDangerous={c.trusted && c.trusted.danger}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Forward Menu: message forwarding popup/dropdown menu.\nimport React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from './contact-list.jsx';\nimport SearchContacts from './search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { REM_SIZE } from '../config.js';\n\nexport default class ForwardMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n\n    this.props.onInitFind();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (this.selfRef.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    // Not forwarding the message.\n    this.props.hide(false);\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      // Not forwarding the message.\n      this.props.hide(false);\n    }\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n  }\n\n  handleContactSelected(uid) {\n    this.props.onCreateTopic(uid);\n    this.props.hide(true);\n  }\n\n  render() {\n    // Ensure that menu is inside the app-container.\n    const hSize = 20 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + this.props.contacts.length * 3);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const style = {\n      left: left + 'px',\n      top: top + 'px',\n      maxWidth: hSize + 'px'\n    };\n\n    return (\n      <div className=\"forward-menu\" style={style} ref={this.selfRef}>\n        <div className=\"flex-column\">\n          <SearchContacts\n            onSearchContacts={this.handleSearchContacts} />\n          <ContactList\n            tinode={this.props.tinode}\n            contacts={this.props.searchResults}\n            myUserId={this.props.myUserId}\n            emptyListMessage={null}\n            showOnline={false}\n            showUnread={false}\n            showContextMenu={false}\n            onTopicSelected={this.handleContactSelected} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    const className = 'load-spinner-box' + (this.props.large ? ' large' : '')\n      + (this.props.clear ? ' clear' : '') + (this.props.centered ? ' centered' : '');\n    return (this.props.show ?\n      <div className={className}><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport LoadSpinner from './load-spinner.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nimport { AVATAR_SIZE } from '../config.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      source: props.avatar\n    };\n\n    this.handleFileReceived = this.handleFileReceived.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({source: this.props.avatar});\n    }\n  }\n\n  handleFileReceived(e) {\n    const image = e.target.files[0];\n    this.props.onImageUpdated(image.type, URL.createObjectURL(image), image.name);\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.source ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageUpdated();}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.source ?\n          <img src={this.props.tinode.authorizeURL(sanitizeImageUrl(this.state.source))} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                tinode={this.props.tinode}\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileReceived} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n        <LoadSpinner show={this.props.uploading} large={true} clear={true} centered={true} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst icon_mapping = {'staff': 'verified_user'};\n\nconst messages = defineMessages({\n  badge_verified: {\n    id: 'badge_verified',\n    defaultMessage: 'Verified/official',\n    description: 'Explanation of a verified account or topic badge'\n  },\n  badge_staff: {\n    id: 'badge_staff',\n    defaultMessage: 'Staff-managed',\n    description: 'Explanation of a staff-managed account or topic badge'\n  },\n  badge_danger: {\n    id: 'badge_danger',\n    defaultMessage: 'Untrustworthy',\n    description: 'Suspicious or untrustworthy account or topic badge'\n  },\n});\n\n\n/* Trusted badges with labels: verified, staff, danger */\nclass BadgeList extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let badges = null;\n    if (this.props.trustedBadges && this.props.trustedBadges.length > 0) {\n      badges = [];\n      this.props.trustedBadges.map((b) => {\n        const comment = formatMessage(messages['badge_' + b]);\n        const style = 'material-icons ' + b + '-color';\n        badges.push(<div className=\"trusted-badge\" key={b}><i className={style}>{icon_mapping[b] || b}</i> {comment}</div>);\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n\nexport default injectIntl(BadgeList);\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked === true ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n        this.props.checked === false ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i> :\n          <i className=\"material-icons lt-blue\">indeterminate_check_box</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          tinode={this.props.tinode}\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    const autoFocus = !(this.props.tabIndex > 0);\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          tabIndex={this.props.tabIndex}\n          autoFocus={autoFocus} />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            tinode={this.props.tinode}\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          tinode={this.props.tinode}\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    const idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    const mode = (this.state.mode || 'N').split('').sort().join('');\n    const before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box small\"><Contact\n            tinode={this.props.tinode}\n            item={this.props.item}\n            title={this.props.userTitle}\n            small={true}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Image zoom and crop widget.\n\nimport React from 'react';\n\nconst DEFAULT_MAX_ZOOM = 2.5;\n\nexport default class Cropper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Coordinates of the top left corner of the image in container coordinates.\n      panX: 0,\n      panY: 0,\n      // Origin of the zoom in image coordinates.\n      originX: 0,\n      originY: 0,\n      // Zoom scale.\n      zoom: 1,\n      // Zoom min and max.\n      minZoom: 0,\n      maxZoom: DEFAULT_MAX_ZOOM,\n    };\n\n    // References to DOM elements for hooking up events and getting screen dimensions.\n    // The transparent element which captures mouse moves (moves with the image).\n    this.overlay = React.createRef();\n    // The image cutout window or view port (static).\n    this.cutout = React.createRef();\n    // Scaled and translated image preview.\n    this.preview = React.createRef();\n    // The main container (static).\n    this.boundingBox = React.createRef();\n\n    // The original image width and height before any scaling.\n    this.imageWidth = 0;\n    this.imageHeight = 0;\n\n    // Mouse position when dragging.\n    this.mouseX = 0\n    this.mouseY = 0;\n    // Length of the previous mouse move when dragging.\n    this.prevDistance = 0;\n\n    // Bounding rectangles of static elements.\n    this.cutoutRect = {};\n    this.bBoxRect = {};\n    // Center of the bounding box.\n    this.originX = 0;\n    this.originY = 0;\n\n    this.initScaling = this.initScaling.bind(this);\n    this.onZoom = this.onZoom.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseTouch = this.mouseTouch.bind(this);\n    this.positionAll = this.positionAll.bind(this);\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.overlay.current.addEventListener('mousedown', this.mouseDown, { passive: true });\n    this.overlay.current.addEventListener('touchstart', this.mouseDown, { passive: true });\n\n    // The rectangle position is in viewport coordinates.\n    this.bBoxRect = this.boundingBox.current.getBoundingClientRect();\n    // Center of the bounding box in container coordinates.\n    this.originX = this.bBoxRect.width / 2;\n    this.originY = this.bBoxRect.height / 2;\n\n    // The rectangle position is in viewport coordinates.\n    this.cutoutRect = this.cutout.current.getBoundingClientRect();\n  }\n\n  componentWillUnmount() {\n    this.overlay.current.removeEventListener('mousedown', this.mouseDown);\n    this.overlay.current.removeEventListener('touchstart', this.mouseDown);\n  }\n\n  // Position all elements.\n  positionAll(panX, panY, zoom) {\n    // Zoom origin in image preview coordinates.\n    this.setState({\n      panX: panX,\n      panY: panY,\n      zoom: zoom,\n      originX: this.originX - panX,\n      originY: this.originY - panY,\n    });\n\n    // Pass cut out coordinates to caller.\n    const left = (this.originX - panX) * zoom - this.originX;\n    const top = (this.originY - panY) * zoom - this.originY;\n    this.props.onChange(\n      (left + this.cutoutRect.left - this.bBoxRect.left) / zoom,\n      (top + this.cutoutRect.top - this.bBoxRect.top) / zoom,\n      this.cutoutRect.width / zoom,\n      this.cutoutRect.height / zoom,\n      zoom);\n  }\n\n  // Check if new location is within the limits.\n  static checkBound(currPan, img, cutout, delta) {\n    let nextDiff = Math.min(0, cutout[0] - img[0] - delta, img[1] - cutout[1] + delta);\n    if (nextDiff == 0) {\n      // Cutout is completely within the image.\n      currPan += delta;\n    } else if (Math.min(0, cutout[0] - img[0], img[1] - cutout[1]) < nextDiff) {\n      // Cutout is outside of the range but closer to the bound.\n      currPan += delta;\n    }\n    return currPan;\n  }\n\n  initScaling() {\n    // Initialize components.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    this.imageWidth = imgRect.width;\n    this.imageHeight = imgRect.height;\n\n    // Set zoom slider's min and max values. Make sure the scaled image cannot be smaller than the cutout.\n    const minZoom = Math.max(this.cutoutRect.width / imgRect.width, this.cutoutRect.height / imgRect.height);\n    this.setState({\n      minZoom: minZoom,\n      maxZoom: Math.max(DEFAULT_MAX_ZOOM, minZoom + 1)\n    });\n\n    // Initial zoom level fills the bounding box at the smallest image dimension and overflows the largest, i.e. \"fill\" not \"fit\".\n    const zoom = Math.max(this.bBoxRect.width / imgRect.width, this.bBoxRect.height / imgRect.height);\n    // Converting from viewport coordinates to container, then panning.\n    const panX = this.cutoutRect.left - this.bBoxRect.left -\n      (imgRect.width - this.cutoutRect.width) / 2;\n    const panY = this.cutoutRect.top - this.bBoxRect.top -\n      (imgRect.height - this.cutoutRect.height) / 2;\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  onZoom(e) {\n    this.handleZoom(e.target.value);\n  }\n\n  handleZoom(zoom) {\n    let panX = this.state.panX;\n    let panY = this.state.panY;\n\n    // Ensure that the image at the new zoom is not outside of the cutout boundaries.\n    // Calculate image coordinates at the new zoom.\n    const imgLeft = this.originX - (this.originX - panX) * zoom;\n    const imgRight = imgLeft + this.imageWidth * zoom;\n    // Cutout in the same coordinates as the image.\n    const coLeft = this.cutoutRect.left - this.bBoxRect.left;\n    const coRight = coLeft + this.cutoutRect.width;\n    if (coLeft < imgLeft) {\n      panX -= imgLeft - coLeft;\n    } else if (coRight > imgRight) {\n      panX += coRight - imgRight;\n    }\n    const imgTop = this.originY - (this.originY - panY) * zoom;\n    const imgBottom = imgTop + this.imageHeight * zoom;\n    const coTop = this.cutoutRect.top - this.bBoxRect.top;\n    const coBottom = coTop + this.cutoutRect.height;\n    if (coTop < imgTop) {\n      panY -= imgTop - coTop;\n    } else if (coBottom > imgBottom) {\n      panY += coBottom - imgBottom;\n    }\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  mouseDown(e) {\n    if (e.touches) {\n      this.mouseX = e.touches[0].pageX;\n      this.mouseY = e.touches[0].pageY;\n    } else {\n      this.mouseX = e.pageX;\n      this.mouseY = e.pageY;\n    }\n\n    window.addEventListener('mousemove', this.mouseMove, { passive: false });\n    window.addEventListener('touchmove', this.mouseTouch, { passive: false });\n    window.addEventListener('mouseup', this.mouseUp, { passive: true });\n    window.addEventListener('touchend', this.mouseUp, { passive: true });\n    // Disable text selection in the entire document.\n    document.body.style['userSelect'] = 'none';\n  }\n\n  // Perform image panning.\n  translate(pageX, pageY) {\n    const dX = pageX - this.mouseX;\n    const dY = pageY - this.mouseY;\n\n    this.mouseX = pageX;\n    this.mouseY = pageY;\n\n    // Make sure the image is within the cutout window.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    // Check if the new position is within the boundaries, and if not if it's closer to them.\n    let panX = Cropper.checkBound(this.state.panX, [imgRect.left, imgRect.right],\n      [this.cutoutRect.left, this.cutoutRect.right], dX);\n    let panY = Cropper.checkBound(this.state.panY, [imgRect.top, imgRect.bottom],\n      [this.cutoutRect.top, this.cutoutRect.bottom], dY);\n\n    this.positionAll(panX, panY, this.state.zoom);\n  }\n\n  // Image panning.\n  mouseMove(e) {\n    e.preventDefault();\n    this.translate(e.pageX, e.pageY);\n  }\n\n  mouseTouch(e) {\n    e.preventDefault();\n\n    if (e.touches.length == 1) {\n      this.translate(e.touches[0].pageX, e.touches[0].pageY);\n      return;\n    }\n\n    // Image zooming by pinching.\n    const [touch0, touch1] = e.touches;\n    const distance = Math.sqrt((touch0.pageX - touch1.pageX) * (touch0.pageX - touch1.pageX) +\n      (touch0.pageY - touch1.pageY) * (touch0.pageY - touch1.pageY));\n\n    if (!this.prevDistance) {\n        this.prevDistance = distance / this.state.zoom;\n    }\n\n    let scale = (distance / this.prevDistance);\n    this.handleZoom(Math.max(this.minZoom, Math.min(this.maxZoom, scale)));\n  }\n\n  mouseUp(e) {\n    window.removeEventListener('mousemove', this.mouseMove);\n    window.removeEventListener('touchmove', this.mouseTouch);\n    window.removeEventListener('mouseup', this.mouseUp);\n    window.removeEventListener('touchend', this.mouseUp);\n    // Re-enable text selection.\n    document.body.style['userSelect'] = '';\n\n    this.positionAll(this.state.panX, this.state.panY, this.state.zoom);\n  }\n\n  render() {\n    // transform3d: position and scale.\n    const t3d = `translate3d(${this.state.panX}px, ${this.state.panY}px, 0) scale(${this.state.zoom})`;\n    // transformOrigin: zoom origin.\n    const orig = `${this.state.originX}px ${this.state.originY}px`;\n\n    // Overlay position and size are exactly equal to the position and size of the transformed image\n    // except it uses different coordinates.\n    const overlay = {\n      top: `${this.originY - this.state.originY * this.state.zoom}px`,\n      left: `${this.originX - this.state.originX * this.state.zoom}px`,\n      width: `${this.imageWidth * this.state.zoom}px`,\n      height: `${this.imageHeight * this.state.zoom}px`\n    };\n    return (\n      <div className=\"cropper\">\n        <div className=\"bounding-box\" ref={this.boundingBox}>\n          <img src={this.props.source} className=\"preview\" alt=\"\"\n            style={{transform: t3d, transformOrigin: orig}} ref={this.preview} onLoad={this.initScaling} />\n          <div className=\"cutout circle\" ref={this.cutout} />\n          <div className=\"overlay\" style={overlay} ref={this.overlay} />\n        </div>\n        <div className=\"zoom-wrapper\">\n          <input type=\"range\" className=\"zoomer\"\n            step=\"0.001\" min={this.state.minZoom} max={this.state.maxZoom} value={this.state.zoom} onChange={this.onZoom} />\n        </div>\n      </div>\n    );\n  }\n}\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Cropper from './cropper.jsx';\nimport { imageCrop } from '../lib/blob-helpers.js';\n\nexport default class AvatarCrop extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n      scale: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Cut out in image coordinates and desired scale factor.\n  handleChange(left, top, width, height, scale) {\n    this.setState({\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      scale: scale\n    });\n  }\n\n  handleSubmit() {\n    imageCrop(this.props.mime, this.props.avatar,\n      this.state.left, this.state.top, this.state.width, this.state.height,\n      this.state.scale)\n      .then(img => {\n        this.props.onSubmit(img.mime, img.blob, img.width, img.height);\n      })\n      .catch(err => {\n        this.props.onError(err);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <Cropper\n            source={this.props.avatar}\n            onChange={this.handleChange} />\n        </div>\n        <div className=\"dialog-buttons\">\n          {this.props.onCancel ?\n            <button className=\"secondary\" onClick={this.props.onCancel}>\n              <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n            </button>\n            : null}\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value || ''});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n   handleStartEditing() {\n    if (!this.props.readOnly) {\n      this.setState({active: true}, () => {\n        if (this.selfRef.current) {\n          this.selfRef.current.focus();\n        }\n      });\n    }\n  }\n\n  handleEditingFinished(event) {\n    const value = this.state.value.trim();\n    if (this.props.required && (!event.target.checkValidity() || !value)) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (!this.state.active) {\n      let spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      let spanClass = 'in-place-edit' + (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (!this.props.multiline || this.props.multiline == 1) {\n        spanClass += ' short';\n      }\n\n      return (<span className={spanClass} onClick={this.handleStartEditing}>\n        <span>{spanText}</span>\n      </span>);\n    }\n\n    let element;\n    const attr = {};\n    if (this.props.type == 'password') {\n      element = VisiblePassword;\n      attr.onFinished = this.handlePasswordFinished;\n    } else {\n      if (this.props.multiline > 1) {\n        element = 'textarea';\n        attr.rows = this.props.multiline;\n        attr.className = 'inplace-edit';\n      } else {\n        element = 'input';\n        attr.type = this.props.type || 'text';\n      }\n      attr.value = this.state.value;\n      attr.onChange = this.handeTextChange;\n      attr.onKeyDown = this.handleKeyDown;\n      attr.onBlur = this.handleEditingFinished;\n    }\n    attr.placeholder = this.props.placeholder;\n    attr.required = this.props.required ? 'required' : '';\n    attr.autoComplete = this.props.autoComplete;\n    attr.autoFocus = true;\n    attr.ref = this.selfRef;\n\n    return React.createElement(element, attr, null);\n  }\n};\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags || [],\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const tags = nextProps.tags || [];\n    if (!arrayEqual(tags, prevState.tags) && !prevState.activated) {\n      return {tags: tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags || []});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags || []});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              tinode={this.props.tinode}\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              tabIndex={this.props.tabIndex}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// Widget for editing topic description.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarCrop from './avatar-crop.jsx';\nimport AvatarUpload from './avatar-upload.jsx';\nimport InPlaceEdit from './in-place-edit.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { AVATAR_SIZE, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE,\n  MAX_INBAND_ATTACHMENT_SIZE, MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nexport default class TopicDescEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: Tinode.isMeTopicName(this.props.topic),\n      owner: acs && acs.isOwner(),\n      fullName: topic.public ? topic.public.fn : undefined,\n      private: topic.private ? topic.private.comment : null,\n      description: topic.public ? topic.public.note : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      tags: topic.tags() || [],\n      newAvatar: null,\n      newAvatarMime: null\n    };\n\n    this.previousOnTags = null;\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageUpdated = this.handleImageUpdated.bind(this);\n    this.handleAvatarCropped = this.handleAvatarCropped.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleDescriptionUpdate = this.handleDescriptionUpdate.bind(this);\n    this.uploadAvatar = this.uploadAvatar.bind(this);\n    this.handleAvatarCropCancel = this.handleAvatarCropCancel.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    this.previousOnTags = topic.onTagsUpdated;\n    topic.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onTagsUpdated = this.previousOnTags;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn && this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(fn, null));\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onUpdateTopicDesc(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleDescriptionUpdate(desc) {\n    desc = desc.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (desc) {\n      this.setState({description: desc});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, null, null, desc));\n    }\n  }\n\n  // AvatarUpload widget has changed the avatar: received a new file or deleted the avatar.\n  handleImageUpdated(mime, img) {\n    // This will show the AvatarCropView is img is not null.\n    this.setState({newAvatar: img, newAvatarMime: mime});\n    if (!img) {\n      // Deleting the avatar.\n      this.setState({avatar: null});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, Tinode.DEL_CHAR));\n    }\n  }\n\n  // AvatarCropView calls this method when the user has cropped the image.\n  handleAvatarCropped(mime, blob, width, height) {\n    const url = blob ? URL.createObjectURL(blob) : null;\n    this.setState({avatar: url, newAvatar: null, newAvatarMime: null});\n    if (blob) {\n      this.uploadAvatar(mime, blob, width, height);\n    }\n  }\n\n  // Utility method for converting cropped avatar blob to bytes for sending inband or\n  // for uploading it to the server out of band.\n  uploadAvatar(mime, blob, width, height) {\n    const readyToUpload = (image) => {\n      let {mime, blob, width, height} = image;\n      if (blob.size > MAX_AVATAR_BYTES) {\n        // Too large to send inband - uploading out of band and sending as a link.\n        const uploader = this.props.tinode.getLargeFileHelper();\n\n        this.setState({uploading: true});\n        uploader.upload(blob)\n          .then((url) => {\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, url));\n          })\n          .catch((err) => {\n            this.props.onError(err, 'err');\n          })\n          .finally(() => {\n            this.setState({uploading: false});\n          });\n      } else {\n        this.setState({uploading: true});\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob)\n          .then(b64 => {\n            const du = makeImageUrl({data: b64.bits, type: mime});\n            this.setState({source: du});\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, du));\n            this.setState({uploading: false});\n          });\n      }\n    };\n\n    if (width > AVATAR_SIZE || height > AVATAR_SIZE || width != height) {\n      // Avatar is not square or too large even after cropping. Shrink it and make square.\n      imageScaled(blob, AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true)\n        .then(scaled => readyToUpload)\n        .catch(err => {\n          this.props.onError(err, 'err');\n        });\n    } else {\n      readyToUpload({mime: mime, blob: blob, width: width, height: height});\n    }\n  }\n\n  handleAvatarCropCancel(img) {\n    this.setState({newAvatar: null, newAvatarMime: null});\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    if (this.state.newAvatar) {\n      return (\n        <AvatarCrop\n          avatar={this.state.newAvatar}\n          mime={this.state.newAvatarMime}\n          onSubmit={this.handleAvatarCropped}\n          onCancel={this.handleAvatarCropCancel}\n          onError={this.props.onError} />\n      );\n    }\n\n    const editable = this.state.isMe || this.state.owner;\n\n    return (\n      <>\n      <div className=\"panel-form-column\">\n        <center>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            readOnly={!editable}\n            uid={this.props.topic}\n            title={this.state.fullName}\n            onImageUpdated={this.handleImageUpdated}\n            onError={this.props.onError} />\n        </center>\n        {this.state.isMe ?\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n                description=\"Input placeholder for person's full name\">{\n                (full_name_placeholder) => <InPlaceEdit\n                  placeholder={full_name_placeholder}\n                  value={this.state.fullName}\n                  required={true}\n                  onFinished={this.handleFullNameUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n        :\n          <>\n            <div className=\"group\">\n              <div><label className=\"small\">\n                <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                  description=\"Label for editing topic name\" />\n              </label></div>\n              <div>\n                <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n                  description=\"Prompt for entering topic name\">{\n                  (group_name_placeholder) => <InPlaceEdit\n                    placeholder={group_name_placeholder}\n                    readOnly={!editable}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                    description=\"Label for editing 'private'\" />\n                </label>\n              </div>\n              <div>\n                <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n                  description=\"Placeholder for editing 'private'\">{\n                  (private_placeholder) => <InPlaceEdit\n                    placeholder={private_placeholder}\n                    value={this.state.private}\n                    onFinished={this.handlePrivateUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n          </>\n        }\n        {editable || this.state.description ?\n          <div className=\"group\">\n            <div><label className=\"small\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label></div>\n            <div>\n              <FormattedMessage id=\"description_editing_placeholder\"\n                defaultMessage=\"Description (optional)\"\n                description=\"Placeholder for editing topic description\">{\n                (private_placeholder) => <InPlaceEdit\n                  placeholder={private_placeholder}\n                  readOnly={!editable}\n                  value={this.state.description}\n                  multiline={2}\n                  onFinished={this.handleDescriptionUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          : null\n        }\n      </div>\n      {editable ?\n        <>\n          <div className=\"hr\" />\n          <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n            description=\"Section title for TagManager\">{\n              (title_tag_manager) => <TagManager\n                tinode={this.props.tinode}\n                title={title_tag_manager}\n                activated={false}\n                tags={this.state.tags}\n                onSubmit={this.handleTagsUpdated} />\n          }</FormattedMessage>\n        </>\n        : null\n      }\n      </>\n    );\n  }\n};\n","// View for editing topic (including 'me' topic) parameters.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport TopicDescEdit from '../widgets/topic-desc-edit.jsx';\n\nimport { arrayEqual, asEmail, asPhone } from '../lib/utils.js';\n\nexport default class TopicCommon extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: this.props.topic == 'me',\n      owner: acs && acs.isOwner(),\n      credentials: (topic.getCredentials ? topic.getCredentials() : null) || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      tags: []\n    };\n\n    this.previousTagsUpdated = undefined;\n\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    topic.onCredsUpdated = this.tnCredsUpdated;\n\n    if (topic.onTagsUpdated != this.onTagsUpdated) {\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onCredsUpdated = undefined;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    const value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  // Server informs that the tags have been updated.\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated(tags);\n    }\n  }\n\n  // Request server to change tags.\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdateRequest(this.props.topic, tags);\n    }\n  }\n\n  render() {\n    const credentials = [];\n    if (this.state.isMe) {\n      this.state.credentials.map((cred) => {\n        credentials.push(\n          <div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n            <span> {!cred.done ?\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n                <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                  description=\"Validate credentail call to action\" />\n              </a>\n            : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n              className=\"material-icons gray\">delete_outline</i></a></span>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className=\"scrollable-panel\">\n        <TopicDescEdit\n          tinode={this.props.tinode}\n          topic={this.props.topic}\n          onUpdateTopicDesc={this.props.onUpdateTopicDesc}\n          onUpdateTags={this.handleTagsUpdated}\n          onError={this.props.onError} />\n        {this.state.isMe ?\n          <>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n                description=\"Label for user contacts\" />\n              </label>\n              <div className=\"quoted\">\n                {credentials}\n                {this.state.addCredActive ?\n                  <input type=\"text\" value={this.state.value}\n                    className={this.state.addCredInvalid ? 'invalid' : null}\n                    placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                    onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n                  : null}\n                <div>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                    <i className=\"material-icons\">add</i>\n                    <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n                  </a></div>\n              </div>\n            </div>\n          </>\n        : null\n      }\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from './in-place-edit.jsx';\n\nimport { NO_ACCESS_MODE } from '../config.js';\n\nconst messages = defineMessages({\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  topic_delete: {\n    id: 'topic_delete',\n    defaultMessage: 'Delete Conversation',\n    description: 'Alert title when deleting the topic.'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n});\n\nclass TopicSecurity extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleDeleteTopic = this.handleDeleteTopic.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n  }\n\n  handleDeleteTopic(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.topic_delete), // title\n      formatMessage(messages.topic_delete_warning), // content\n      (() => { this.props.onDeleteTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.props.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          {!this.props.channel ?\n            <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n              <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages)\n              }\n            </a>\n            :\n            null\n          }\n          {this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleDeleteTopic}>\n              <i className=\"material-icons\">delete</i> &nbsp;{formatMessage(messages.topic_delete)}\n            </a>\n            :\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n            </a>\n          }\n          {!this.props.groupTopic ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n              <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n            </a>\n            :\n            null\n          }\n          {!this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n              <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n            </a>\n            :\n            null\n          }\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          {this.props.groupTopic ?\n            <>\n              <div className=\"group\">\n                <label>\n                  <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                    description=\"Label for current user permissions\" />\n                </label> <tt className=\"clickable\"\n                  onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                  {this.props.access}\n                </tt>\n              </div>\n              <div className=\"group\">\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                    description=\"Label for default access mode\" />\n                  </label>\n                </div>\n                <div className=\"quoted\">\n                  <div>Auth: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('auth')}}>{this.props.auth}</tt>\n                  </div>\n                  <div>Anon: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('anon')}}>{this.props.anon}</tt>\n                  </div>\n                </div>\n              </div>\n            </>\n            :\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                    description=\"Section title\" />\n                </label>\n              </div>\n              <div className=\"quoted\">\n                <div>\n                  <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                    description=\"Label for the current user\" /> <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                    {this.props.access}\n                  </tt>\n                </div>\n                <div>{this.props.fullName ? this.props.fullName : formatMessage(messages.other_user)}:\n                  &nbsp;<tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('given')}}>\n                    {this.props.modeGiven2}\n                  </tt>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TopicSecurity);\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\nimport TopicSecurity from '../widgets/topic-security.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'panel_title_info',\n    description: 'Title for InfoView',\n    defaultMessage: 'Info'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  members: {\n    id: 'panel_title_members',\n    description: 'Title for managing group members view.',\n    defaultMessage: 'Members'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  perm_want: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  perm_given: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  perm_auth: {\n    id: 'permissions_authenticated',\n    defaultMessage: 'Authenticated',\n    description: 'Title for editing default authenticated permissions'\n  },\n  perm_anon: {\n    id: 'permissions_anonymous',\n    defaultMessage: 'Anonymous',\n    description: 'Title for editing default anonymous permissions'\n  },\n  perm_user: {\n    id: 'permissions_user',\n    defaultMessage: 'User\\'s Permissions',\n    description: 'Title for editing user\\'s permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n});\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      description: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      trustedBadges: [],\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.resetTags = this.resetTags.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n    this.handleBackNavigate = this.handleBackNavigate.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n      this.resetTags(topic);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    const badges = [];\n    if (topic.trusted) {\n      for (const [key, val] of Object.entries(topic.trusted)) {\n        if (val) {\n          badges.push(key);\n        }\n      }\n    }\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: _clip(topic.public ? topic.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(topic.public ? topic.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      trustedBadges: badges,\n      private: _clip(topic.private ? topic.private.comment : null, MAX_TITLE_LENGTH),\n      archived: topic.isArchived(),\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType() || topic.chan,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n  }\n\n  resetTags(topic) {\n    if (topic.getType() != 'grp') {\n      return;\n    }\n\n    const acs = topic.getAccessMode();\n    if (acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handleUnarchive(ignored, ignored2) {\n    this.props.onTopicUnArchive(this.props.topic);\n  }\n\n  handlePermissionsChanged(which, perm) {\n    switch (which) {\n      case 'auth':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.handleBackNavigate();\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.perm_want);\n        titleCompare = formatMessage(messages.perm_given);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.error(\"Unknown permission editing mode '\" + which + \"'\");\n        return;\n    }\n    this.setState({\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n    this.props.onNavigate(`perm/${which}`);\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.props.onNavigate('members');\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.props.onNavigate('info');\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleBackNavigate() {\n    const args = (this.props.panel || 'info').split('/');\n    if (args[0] == 'info') {\n      this.props.onNavigate(null);\n    } else if (args[0] == 'perm') {\n      if (args[1] == 'user') {\n        this.props.onNavigate('info');\n      } else {\n        this.props.onNavigate('security');\n      }\n    } else {\n      this.props.onNavigate('info');\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const isMe = this.props.tinode.isMe(params.topicName);\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: () => {\n        this.handleLaunchPermissionsEditor(isMe ? 'want' : 'user', params.topicName);\n      }}\n    ];\n    if (!isMe) {\n      menuItems.push('member_delete');\n    }\n    menuItems.push(user.acs.isMuted() ? 'member_unmute' : 'member_mute');\n    if (!isMe) {\n      menuItems.push(user.acs.isJoiner() ? 'member_block' : 'member_unblock');\n    }\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const args = (this.props.panel || 'info').split('/');\n    const view = args[0];\n    args.shift();\n\n    const {formatMessage} = this.props.intl;\n    const panelTitle = formatMessage((view == 'perm' ? messages['perm_' + args[0]] : messages[view])\n      || messages['info']);\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">{panelTitle}</div>\n          <div>\n            <MenuCancel onCancel={this.handleBackNavigate} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {view == 'members' ?\n          <GroupManager\n            tinode={this.props.tinode}\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleBackNavigate}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        view == 'perm' && args.length > 0 ?\n          <PermissionsEditor\n            tinode={this.props.tinode}\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={(mode) => this.handlePermissionsChanged(args[0], mode)}\n            onCancel={this.handleBackNavigate} />\n          :\n        view == 'general' ?\n          <TopicCommon\n            tinode={this.props.tinode}\n            topic={this.props.topic}\n            onCredAdd={this.props.onCredAdd}\n            onTopicTagsUpdateRequest={this.props.onTopicTagsUpdateRequest}\n            onCredConfirm={this.props.onCredConfirm}\n            onCredDelete={this.props.onCredDelete}\n            onUpdateTopicDesc={this.props.onTopicDescUpdateRequest}\n            onError={this.props.onError} />\n          :\n        view == 'security' ?\n          <TopicSecurity\n            topic={this.props.topic}\n            owner={this.state.owner}\n            admin={this.state.admin}\n            sharer={this.state.sharer}\n            deleter={this.state.deleter}\n            muted={this.state.muted}\n\n            groupTopic={this.state.groupTopic}\n            channel={this.state.channel}\n            access={this.state.access}\n            modeGiven={this.state.modeGiven}\n            modeWant={this.state.modeWant}\n            modeGiven2={this.state.modeGiven2}\n            modeWant2={this.state.modeWant2}\n            auth={this.state.auth}\n            anon={this.state.anon}\n\n            onShowAlert={this.props.onShowAlert}\n            onDeleteMessages={this.props.onDeleteMessages}\n            onLeaveTopic={this.props.onLeaveTopic}\n            onBlockTopic={this.props.onBlockTopic}\n            onReportTopic={this.props.onReportTopic}\n            onLaunchPermissionsEditor={this.handleLaunchPermissionsEditor}\n            onNavigate={this.props.onNavigate} />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-column\">\n              <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n                <i className=\"material-icons\">edit</i>&nbsp;\n                <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n              </a>\n              <center>\n                <AvatarUpload\n                  tinode={this.props.tinode}\n                  avatar={this.state.avatar}\n                  readOnly={true}\n                  uid={this.props.topic}\n                  title={this.state.fullName} />\n              </center>\n              <div className=\"group\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div className=\"large ellipsized\">{this.state.fullName}\n                {this.state.channel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}</div>\n              </div>\n              {this.state.private ?\n                <div className=\"group\">\n                  <div><label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label></div>\n                  <div className=\"large ellipsized\">{this.state.private}</div>\n                </div>\n                : null\n              }\n              <div className=\"group\">\n                <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                  description=\"Label for user address (ID)\" /></label>&nbsp;\n                <tt>{this.state.address}</tt>\n              </div>\n              <div className=\"group\">\n                <BadgeList trustedBadges={this.state.trustedBadges} />\n              </div>\n              {this.state.description ?\n                <div className=\"group\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                      description=\"Label for editing topic description\" />\n                  </label>\n                  <div>{this.state.description}</div>\n                </div> : null}\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <label>\n                <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                  description=\"Label for Muting/unmuting the topic\" />\n              </label>\n              <CheckBox name=\"P\" checked={this.state.muted} onChange={this.handleMuted} />\n            </div>\n            {this.state.archived ?\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_unarchive_topic\" defaultMessage=\"Archived:\"\n                    description=\"Label for unarchiving the topic\" />\n                </label>\n                <CheckBox name=\"archived\" checked={true} onChange={this.handleUnarchive} />\n              </div>\n              :\n              null\n            }\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n                <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n                  defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n              </a>\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-row\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                      description=\"Section title or label\" />\n                  </label>\n                </div>\n                <div className=\"panel-form-row\">\n                  <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                    <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                      defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                  </a>\n                </div>\n                <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                  description=\"Shown in place of group members\">{\n                  (no_members) => <ContactList\n                    tinode={this.props.tinode}\n                    contacts={this.state.contactList}\n                    myUserId={this.props.myUserId}\n                    emptyListMessage={no_members}\n                    topicSelected={this.state.selectedContact}\n                    showOnline={false}\n                    showUnread={false}\n                    showMode={true}\n                    noScroll={true}\n                    onTopicSelected={this.handleMemberSelected}\n                    showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                  />\n                }</FormattedMessage>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\n\nimport { fullFormatter, quoteFormatter } from '../lib/formatters.js';\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nclass BaseChatMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.formatterContext = {\n      getFormatter: (tp) => { return tp == 'QQ' ? quoteFormatter : null; },\n      formatMessage: props.intl.formatMessage.bind(props.intl),\n      viewportWidth: props.viewportWidth,\n      authorizeURL: props.tinode.authorizeURL.bind(props.tinode),\n      onImagePreview: this.handleImagePreview,\n      onFormButtonClick: this.handleFormButtonClick,\n      onQuoteClick: this.handleQuoteClick\n    };\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    if (this.props.userIsWriter &&\n        this.props.received > Tinode.MESSAGE_STATUS_FAILED &&\n        this.props.received < Tinode.MESSAGE_STATUS_DEL_RANGE) {\n      menuItems.push('menu_item_reply');\n      menuItems.push('menu_item_forward');\n    }\n    this.props.showContextMenu({\n      seq: this.props.seq,\n      content: this.props.content,\n      userFrom: this.props.userFrom,\n      userName: this.props.userName,\n      y: e.pageY,\n      x: e.pageX,\n      pickReply: this.props.pickReply\n    }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const replyToSeq = this.props.replyToSeq;\n    if (replyToSeq) {\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.isGroup && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, (att, i) => {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name}\n          uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime}\n          size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      const tree = Drafty.format(content, fullFormatter, this.formatterContext);\n      content = React.createElement(React.Fragment, null, tree);\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n        <FormattedMessage id=\"invalid_content\"\n          defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i></>\n    }\n\n    return (\n      <li ref={this.props.innerRef} className={sideClass}>\n        {this.props.isGroup && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                tinode={this.props.tinode}\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              {this.props.userName ||\n                <i><FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\" /></i>\n              }\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\nconst IntlChatMessage = injectIntl(BaseChatMessage);\nconst ChatMessage = React.forwardRef((props, ref) => <IntlChatMessage innerRef = {ref} {...props} />);\n\nexport default ChatMessage;\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\nimport { quoteFormatter, replyFormatter } from '../lib/formatters.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n\n    this.setState({quote: this.props.replyTo ?\n      Drafty.format(this.props.replyTo.content, replyFormatter, {\n        formatMessage: this.props.intl.formatMessage.bind(this.props.intl),\n        authorizeURL: this.props.tinode.authorizeURL.bind(this.props.tinode)\n      }) :\n      null});\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n\n    if (prevProps.replyTo != this.props.replyTo) {\n      this.setState({quote: this.props.replyTo ?\n        Drafty.format(this.props.replyTo.content, replyFormatter, {\n          formatMessage: this.props.intl.formatMessage.bind(this.props.intl),\n          authorizeURL: this.props.tinode.authorizeURL.bind(this.props.tinode)\n        }) :\n        null});\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.replyTo && this.props.onQuoteClick) {\n      const replyToSeq = this.props.replyTo.seq;\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n\n    return (\n      <div id=\"send-message-wrapper\">\n      {this.state.quote ?\n        <div id=\"reply-quote-preview\">\n          <div className=\"cancel\">\n            <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancelReply();}}><i className=\"material-icons gray\">close</i></a>\n          </div>\n          {this.state.quote}\n        </div>\n      :\n      null}\n\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize, shortenFileName } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.name}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n              description=\"Label for a file name\" /></b> {shortenFileName(this.props.content.name, 24) || '-'}</div>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          tinode={this.props.tinode}\n          replyTo={this.props.replyTo}\n          onCancelReply={this.props.onCancelReply}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            tinode={this.props.tinode}\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize, shortenFileName } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    const fname = shortenFileName(this.props.content.name, maxlength) || '-';\n\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.name}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{fname}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.name} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            tinode={this.props.tinode}\n            replyTo={this.props.replyTo}\n            onCancelReply={this.props.onCancelReply}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.name}>{fname}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].replace('#', '').split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        const item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlInfoPanel(hash, infopanel) {\n    const parsed = this.parseUrlHash(hash);\n    if (infopanel) {\n      parsed.params.info = infopanel;\n    } else {\n      delete parsed.params.info;\n    }\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport ContactBadges from '../widgets/contact-badges.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, IMAGE_THUMBNAIL_DIM, KEYPRESS_DELAY,\n  MESSAGES_PAGE, MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE,\n  READ_DELAY, QUOTED_REPLY_LENGTH } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, base64ToBlob, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat, letterTileColorId } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  invalid_content: {\n    id: 'invalid_content',\n    defaultMessage: 'invalid content',\n    description: 'Shown when the message is unreadable'\n  },\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.retrySend = this.retrySend.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleMessageUpdate = this.handleMessageUpdate.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.handlePickReply = this.handlePickReply.bind(this);\n    this.handleCancelReply = this.handleCancelReply.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.chatMessageRefs = {};\n    this.getOrCreateMessageRef = this.getOrCreateMessageRef.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  getOrCreateMessageRef(seqId) {\n    if (this.chatMessageRefs.hasOwnProperty(seqId)) {\n      return this.chatMessageRefs[seqId];\n    }\n    const ref = React.createRef();\n    this.chatMessageRefs[seqId] = ref;\n    return ref;\n  }\n\n  componentDidMount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messageCount != this.state.messageCount) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleMessageUpdate;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if ((this.state.topic != prevState.topic) || !prevProps.ready) {\n      this.subscribe(topic);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messageCount: 0,\n        latestClearId: -1,\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        isVerified: false,\n        isStaff: false,\n        isDangerous: false,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false,\n        reply: null\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n\n      let reply = null;\n      if (nextProps.forwardedMessage) {\n        // We are forwarding a message. Show preview.\n        const preview = nextProps.forwardedMessage.preview;\n        reply = {\n          content: preview,\n          seq: null\n        };\n      }\n\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        reply: reply\n      };\n\n      if (topic) {\n        // Topic exists.\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        Object.assign(nextState, {\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          messageCount: topic.messageCount(),\n          latestClearId: topic.maxClearId(),\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messageCount: 0,\n          latestClearId: -1,\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  subscribe(topic) {\n    if (!topic || topic.isSubscribed() || !this.props.ready) {\n      return;\n    }\n\n    // Is this a new topic?\n    const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n    // Don't request the tags. They are useless unless the user\n    // is the owner and is editing the topic.\n    let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n    if (this.state.isReader || newTopic) {\n      // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n      getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n      if (this.state.isReader) {\n        getQuery = getQuery.withLaterDel();\n      }\n      // And show \"loading\" spinner.\n      this.setState({ fetchingMessages: true });\n    }\n\n    const setQuery = newTopic ? this.props.newTopicParams : undefined;\n    topic.subscribe(getQuery.build(), setQuery)\n      .then((ctrl) => {\n        if (ctrl.code == 303) {\n          // Redirect to another topic requested.\n          HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n          return;\n        }\n        if (this.state.topic != ctrl.topic) {\n          this.setState({topic: ctrl.topic});\n        }\n        this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n        // If there are unsent messages, try sending them now.\n        topic.queuedMessages((pub) => {\n          if (!pub._sending && topic.isSubscribed()) {\n            this.retrySend(pub);\n          }\n        });\n      })\n      .catch((err) => {\n        console.error(\"Failed subscription to\", this.state.topic);\n        this.props.onError(err.message, 'err');\n        const blankState = MessagesView.getDerivedStateFromProps({}, {});\n        blankState.title = this.props.intl.formatMessage(messages.not_found);\n        this.setState(blankState);\n      });\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (this.state.fetchingMessages) {\n      return;\n    }\n\n    if (event.target.scrollTop <= 0) {\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n        this.setState({fetchingMessages: true}, () => {\n          topic.getMessagesPage(MESSAGES_PAGE)\n            .catch((err) => this.props.onError(err.message, 'err'))\n            .finally(() => this.setState({fetchingMessages: false}));\n          });\n      }\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  // The 'msg' could be false-ish if some message ranges were deleted.\n  handleMessageUpdate(msg) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (!msg) {\n      // msg could be null if one or more messages were deleted.\n      // Updating state to force redraw.\n      this.setState({latestClearId: topic.maxClearId()});\n      return;\n    }\n\n    clearTimeout(this.keyPressTimer)\n    this.setState({messageCount: topic.messageCount(), typingIndicator: false});\n\n    // Scroll to the bottom if the message is added to the end of the message list.\n    // TODO: This should be replaced by showing a \"scroll to bottom\" button.\n    if (topic.isNewMessage(msg.seq)) {\n      this.setState({scrollPosition: 0});\n    }\n\n    // Aknowledge messages except own messages. They are\n    // automatically assumed to be read and recived.\n    const status = topic.msgStatus(msg, true);\n    if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n      this.postReadNotification(msg.seq);\n    }\n    // This will send \"received\" notifications right away.\n    this.props.onData(msg);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        this.keyPressTimer = setTimeout(() => {\n          this.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.info(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.info(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // sendMessage sends the message with an optional subscription to topic first.\n  sendMessage(msg, uploadCompletionPromise, uploader) {\n    let head;\n    if (this.props.forwardedMessage) {\n      // We are forwarding a message.\n      msg = this.props.forwardedMessage.msg;\n      head = this.props.forwardedMessage.head;\n      this.handleCancelReply();\n    } else if (this.state.reply && this.state.reply.content) {\n      // We are replying to a message in this topic.\n      head = {reply: '' + this.state.reply.seq};\n      // Turn it into Drafty so we can make a quoted Drafty object later.\n      if (typeof msg == 'string') {\n        msg = Drafty.parse(msg);\n      }\n      msg = Drafty.append(this.state.reply.content, msg);\n      this.handleCancelReply();\n    }\n    this.props.sendMessage(msg, uploadCompletionPromise, uploader, head);\n  }\n\n  // Retry sending a message.\n  retrySend(pub) {\n    this.props.sendMessage(pub.content, undefined, undefined, pub.head);\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file)\n        .then(b64 => this.sendMessage(Drafty.attachFile(null, {mime: b64.mime, data: b64.bits, filename: b64.name})))\n        .catch(err => this.props.onError(err));\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({\n        docPreview: {\n          file: file,\n          name: file.name,\n          size: file.size,\n          type: file.type\n        }\n      });\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.mime;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.name;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false)\n        // Convert tiny image into base64 for serialization and previewing.\n        .then(scaled => blobToBase64(scaled.blob))\n        .then(b64 => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: b64.bits, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.parse(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.sendMessage(msg, uploadCompletionPromise, uploader);\n        }).catch((err) => {\n          this.props.onError(err, 'err');\n        });\n        return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob)\n      .then(b64 => {\n        let msg = Drafty.insertImage(null, 0, {\n          mime: b64.mime,\n          preview: b64.bits, // Serializable preview\n          width: width,\n          height: height,\n          filename: fname,\n          size: blob.size\n        });\n        if (caption) {\n          msg = Drafty.appendLineBreak(msg);\n          msg = Drafty.append(msg, Drafty.parse(caption));\n        }\n        this.sendMessage(msg);\n      });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false)\n      .then(scaled => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(scaled.blob),\n          blob: scaled.blob,\n          name: scaled.name,\n          width: scaled.width,\n          height: scaled.height,\n          size: scaled.blob.size,\n          mime: scaled.mime\n        }});\n      }).catch(err => {\n        this.props.onError(err, 'err');\n      });\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const found = topic.findMessage(seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  handlePickReply(seq, content, senderId, senderName) {\n    this.setState({reply: null});\n\n    if (!seq || !content) {\n      return;\n    }\n\n    if (typeof content == 'string') {\n      content = Drafty.init(content);\n    }\n    if (Drafty.isValid(content)) {\n      content = Drafty.preview(content, QUOTED_REPLY_LENGTH);\n    } else {\n      // /!\\ invalid content.\n      content = Drafty.append(Drafty.init('\\u26A0 '),\n        Drafty.wrapInto(this.props.intl.formatMessage(messages.invalid_content), 'EM'));\n    }\n\n    this.setState({\n      reply: {\n        content: Drafty.quote(senderName, senderId, content),\n        seq: seq\n      }\n    });\n  }\n\n  handleCancelReply() {\n    this.setState({reply: null});\n    this.props.onCancelForwardMessage();\n  }\n\n  handleQuoteClick(replyToSeq) {\n    const ref = this.getOrCreateMessageRef(replyToSeq);\n    if (ref && ref.current) {\n      ref.current.scrollIntoView({block: \"center\", behavior: \"smooth\"});\n      ref.current.classList.add('flash');\n      setTimeout(() => { ref.current.classList.remove('flash') } , 1000);\n    } else {\n      console.error(\"Unresolved message ref\", replyToSeq);\n    }\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            tinode={this.props.tinode}\n            replyTo={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            tinode={this.props.tinode}\n            replyTo={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        const icon_badges = [];\n        if (topic.trusted) {\n          if (topic.trusted.verified) {\n            icon_badges.push({icon: 'verified', color: 'badge-inv'});\n          }\n          if (topic.trusted.staff) {\n            icon_badges.push({icon: 'staff', color: 'badge-inv'});\n          }\n          if (topic.trusted.danger) {\n            icon_badges.push({icon: 'dangerous', color: 'badge-inv'});\n          }\n        }\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        topic.messages((msg, prev, next, i) => {\n          let nextFrom = next ? (next.from || null) : 'chan';\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userFrom = thisFrom, userName, userAvatar;\n          const user = topic.userDesc(thisFrom);\n          if (user && user.public) {\n            userName = user.public.fn;\n            userAvatar = makeImageUrl(user.public.photo);\n          }\n            //userFrom = thisFrom;\n          chatBoxClass = groupTopic ? 'chat-box group' : 'chat-box';\n\n          // Ref for this chat message.\n          const ref = this.getOrCreateMessageRef(msg.seq);\n          let replyToSeq = msg.head ? parseInt(msg.head.reply) : null;\n          if (!replyToSeq || isNaN(replyToSeq)) {\n            replyToSeq = null;\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              isGroup={groupTopic}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}  // Used by `formatter`.\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              pickReply={this.handlePickReply}\n              replyToSeq={replyToSeq}\n              onQuoteClick={this.handleQuoteClick}\n              ref={ref}\n              userIsWriter={this.state.isWriter}\n              key={msg.seq} />\n          );\n        });\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  tinode={this.props.tinode}\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }<ContactBadges badges={icon_badges} /></div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  tinode={this.props.tinode}\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                tinode={this.props.tinode}\n                noInput={this.props.forwardedMessage != null}\n                disabled={!this.state.isWriter}\n                onKeyPress={this.sendKeyPress}\n                onSendMessage={this.sendMessage}\n                onAttachFile={this.props.forwardedMessage == null ? this.handleAttachFile : null}\n                onAttachImage={this.props.forwardedMessage == null ? this.handleAttachImage : null}\n                onError={this.props.onError}\n                replyTo={this.state.reply}\n                onQuoteClick={this.handleQuoteClick}\n                onCancelReply={this.handleCancelReply} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    const icon_badges = [];\n    if (this.props.trustedBadges) {\n      this.props.trustedBadges.map((b) => {\n        icon_badges.push({icon: b, color: 'badge-inv'});\n      });\n    }\n    let avatar = null;\n    if (this.props.tinode) {\n      avatar = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n    }\n    return (\n      <div id=\"side-caption-panel\" className=\"caption-panel\">\n        {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n        {avatar ?\n          <div id=\"self-avatar\" className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={avatar}\n              topic={this.props.myUserId}\n              title={this.props.title} />\n          </div>\n          :\n          null}\n        <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}<ContactBadges badges={icon_badges}/></div>\n        {this.props.state === 'login' ?\n            <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n          this.props.state === 'contacts' ?\n            <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n          null}\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nexport default class AccountSettingsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: _clip(me.public ? me.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(me.public ? me.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              avatar={this.state.avatar}\n              readOnly={true}\n              uid={this.props.myUserId}\n              title={this.state.fullName} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large ellipsized\">{this.state.fullName}</div>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n              description=\"Label for user address (ID)\" /></label>&nbsp;\n            <tt>{this.props.myUserId}</tt>\n          </div>\n          <div className=\"group\">\n            <BadgeList trustedBadges={this.props.trustedBadges} />\n          </div>\n          {this.state.description ?\n            <div className=\"group\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                  description=\"Label for editing topic description\" />\n              </label>\n              <div>{this.state.description}</div>\n            </div> : null}\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n              defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          tinode={this.props.tinode}\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_warning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdatePassword(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccountDesc('me', undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fullName = React.createRef();\n\n    this.state = {\n      fullName: '', // full/formatted name\n      private: '',\n      description: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFieldEdit = this.handleFieldEdit.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    // this.fullName.current.focus();\n  }\n\n  handleFieldEdit(name, e) {\n    this.setState({[name]: e.target.value || ''});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fullName.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    const description = this.state.description.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, description, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-column\">\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              onError={this.props.onError}\n              onImageChanged={this.handleImageChanged} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                ref={this.fullName} value={this.state.fullName} onChange={this.handleFieldEdit.bind(this, 'fullName')}\n                autoFocus required tabIndex={0} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handleFieldEdit.bind(this, 'private')} tabIndex={1} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-desc\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label>\n            <FormattedMessage id=\"description_editing_placeholder\" defaultMessage=\"Description (optional)\"\n              description=\"Placeholder for editing topic description\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-desc\" placeholder={placeholder}\n                value={this.state.description} onChange={this.handleFieldEdit.bind(this, 'description')} tabIndex={2} />\n            }</FormattedMessage>\n          </div>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} tabIndex={3} onChange={this.handleChannelToggle} />&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tinode={this.props.tinode}\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tabIndex={4}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(uid) {\n    if (this.state.tabSelected == 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(uid);\n    }\n  }\n\n  handleNewGroupSubmit(name, description, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined,\n      {public: theCard(name, dataUrl, null, description), private: priv, tags: tags}, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                tinode={this.props.tinode}\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      sent: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else if (this.state.sent) {\n      this.props.onCancel();\n    } else {\n      const email = this.state.email.trim();\n      this.setState({email: email});\n      this.props.onRequest('email', email).then(() => {\n        this.setState({sent: true});\n      });\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {(this.state.token && this.state.scheme) ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n        : this.state.sent ?\n          <>\n            <br/>\n            <center><i className=\"material-icons huge green\">task_alt</i></center>\n            <br/>\n            <center><FormattedMessage id=\"password_reset_email_sent\"\n              defaultMessage=\"An email has been sent to {email}. Follow the directions in the email to reset your password.\"\n              values={{ email: <tt>{this.state.email}</tt> }}\n              description=\"Notification that the email with password reset instructions has been sent\" /></center>\n          </>\n        :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{\n            (this.state.token && this.state.scheme) ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" />\n            : this.state.sent ?\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\"\n              description=\"Button [OK]\" />\n            :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['def', 'ws', 'lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\n\nimport AccountSettingsView from './account-settings-view.jsx';\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for AccountSettingsView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar, badges;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n      badges = this.props.trustedBadges;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n      badges = null;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          tinode={this.props.tinode}\n          trustedBadges={badges}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            tinode={this.props.tinode}\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <AccountSettingsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            trustedBadges={this.props.trustedBadges}\n            onNavigate={this.props.onNavigate} /> :\n\n          (view === 'general' || view === 'crop') ?\n          <TopicCommon\n            topic=\"me\"\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateTopicDesc={this.props.onUpdateAccountDesc}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccountDesc={this.props.onUpdateAccountDesc}\n            onUpdatePassword={this.props.onUpdatePassword}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword}\n            onCancel={this.props.onCancel} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\nimport ForwardMenu from '../widgets/forward-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdatePasswordRequest = this.handleUpdatePasswordRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdateRequest = this.handleTagsUpdateRequest.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteTopicRequest = this.handleDeleteTopicRequest.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n\n    this.handleShowForwardMenu = this.handleShowForwardMenu.bind(this);\n    this.handleHideForwardMenu = this.handleHideForwardMenu.bind(this);\n\n    this.sendMessageToTopic = this.sendMessageToTopic.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && !!settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      myTrustedBadges: [],\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      infoPanel: undefined,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      forwardMenuVisible: false,\n      forwardMenuBounds: null,\n      forwardMenuClickAt: null,\n      forwardMessage: null,\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n\n    // Process background notifications from the service worker.\n    if (typeof BroadcastChannel == 'function') {\n      const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n      serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n    } else {\n      // Safari is broken by design.\n      console.warn(\"Your browser does not support BroadcastChannel. Some features will not be available\");\n    }\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n      }\n\n      // Save possible topic name and navigate to blank state.\n      this.setState({requestedTopic: parsedNav.path[1]});\n      HashNavigation.navigateTo('');\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(data) {\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.error(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n\n        // Google could not be bothered to mention that onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // Handhe FCM pushes\n        // (a) for channels always,\n        // (b) pushes when the app is in foreground but has not focus.\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general','crop',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.warn(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      let topicName = hash.path[1] || null;\n      if (topicName != this.state.topicSelected) {\n        if (!Tinode.topicType(topicName)) {\n          // Clear invalid topic name.\n          topicName = null;\n        }\n        const newState = {\n          topicSelected: topicName\n        };\n        const acs = this.tinode.getTopicAccessMode(topicName);\n        if (acs) {\n          newState.topicSelectedAcs = acs;\n        }\n        this.setState(newState);\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: '', topicSelected: null});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      infoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      forwardMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    let token = this.tinode.getAuthToken();\n    if (login && password) {\n      token = null;\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        if (token) {\n          this.handleLogout();\n        }\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.trusted) {\n        const badges = [];\n        for (const [key, val] of Object.entries(desc.trusted)) {\n          if (val) {\n            badges.push(key);\n          }\n        }\n        this.setState({\n          myTrustedBadges: badges,\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.info(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n\n    const past = new Date(0);\n    newState.chatList.sort((a, b) => {\n      return (a.touched || past).getTime() - (b.touched || past).getTime();\n    });\n\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        infoPanel: undefined\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName),\n          forwardMessage: null\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        infoPanel: undefined,\n        forwardMessage: null\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  //  - head - head dictionary to be attached to the message\n  handleSendMessage(msg, promise, uploader, head) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n    this.sendMessageToTopic(topic, msg, promise, uploader, head);\n  }\n\n  sendMessageToTopic(topic, msg, promise, uploader, head) {\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (head) {\n      msg.head = Object.assign(msg.head || {}, head);\n    }\n\n    if (!topic.isSubscribed()) {\n      // Topic is not subscribed yet. Subscribe.\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise\n        .then(() => topic.subscribe())\n        .then(() => {\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              this.sendMessage(pub);\n            }\n          });\n        });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.warn(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleToggleIncognitoMode(on) {\n    // Make state undefined.\n    this.setState({incognitoMode: null});\n\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      // Request failed, keep existing state.\n      this.setState({incognitoMode: !on});\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      this.setState({desktopAlerts: null});\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          Promise.resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.error(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.error(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.error(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('crop' == parsed.path[0]) {\n      path = 'general';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Sidepanel navigator. No need to bind to 'this'.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Topic info navigator. No need to bind to 'this'.\n  infoNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlInfoPanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, newTopicParams, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: newTopicParams.public, private: {comment: newTopicParams.private}};\n      params.tags = newTopicParams.tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was created, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, defacs) {\n    this.handleError();\n\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      let attachments;\n      if (pub) {\n        if (pub.photo) {\n          if (pub.photo.ref && pub.photo.ref != Tinode.DEL_CHAR) {\n            attachments = [pub.photo.ref];\n          } else if (!pub.photo.data || pub.photo.data == Tinode.DEL_CHAR) {\n            pub.photo = Tinode.DEL_CHAR;\n          }\n        }\n        params.public = pub;\n      }\n\n      if (typeof priv == 'string') {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      topic.setMeta({desc: params, attachments: attachments}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleUnarchive(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.archive(false);\n    }\n  }\n\n  handleUpdatePasswordRequest(password)  {\n    this.handleError();\n\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdateRequest(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    clearInterval(this.reconnectCountdown);\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request to hard-delete topic.\n    topic.delTopic(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: this.selfRef.current.getBoundingClientRect()\n    });\n  }\n\n  handleShowForwardMenu(params) {\n    if (this.state.sidePanelSelected == 'newtpk') {\n      // If the Find panel is active, close it.\n      this.handleSidepanelCancel();\n    }\n    const header = \"Forwarded from \" + params.userName;\n    const content = typeof params.content == 'string' ? Tinode.Drafty.init(params.content) : params.content;\n    const preview = Tinode.Drafty.preview(content, 30);\n    const msg = Tinode.Drafty.append(\n        Tinode.Drafty.appendLineBreak(\n            Tinode.Drafty.mention(header, params.userFrom)),\n        content);\n    const msgPreview = Tinode.Drafty.quote(header, params.userFrom, preview);\n    const head = {\n      // TODO: decide what parameters to store.\n      fwdFrom: params.topicName,\n      authorUid: params.userFrom\n    };\n    this.setState({\n      forwardMenuVisible: true,\n      forwardMenuBounds: this.selfRef.current.getBoundingClientRect(),\n      forwardMenuClickAt: {x: params.x, y: params.y},\n      forwardMessage: { head: head, msg: msg, preview: msgPreview }\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      archived ? 'topic_restore' : 'topic_archive',\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleHideForwardMenu(keepForwardedMessage) {\n    this.setState({\n      forwardMenuVisible: false,\n      forwardMenuBounds: null,\n      forwardMenuClickAt: null,\n      forwardMessage: keepForwardedMessage ? this.state.forwardMessage : null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    } else if (action == 'menu_item_forward') {\n      this.handleShowForwardMenu(params);\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', 'info'));\n    this.setState({infoPanel: 'info'});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    return this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\" ref={this.selfRef}>\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        {this.state.forwardMenuVisible ?\n          <ForwardMenu\n            tinode={this.tinode}\n            bounds={this.state.forwardMenuBounds}\n            clickAt={this.state.forwardMenuClickAt}\n\n            contacts={this.state.chatList}\n            topicSelected={this.props.topicSelected}\n            myUserId={this.state.myUserId}\n\n            hide={this.handleHideForwardMenu}\n            onInitFind={this.tnInitFind}\n            searchResults={this.state.searchResults}\n            onSearchContacts={this.handleSearchContacts}\n            onCreateTopic={this.handleStartTopicRequest}\n          />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          trustedBadges={this.state.myTrustedBadges}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccountDesc={this.handleTopicUpdateRequest}\n          onUpdatePassword={this.handleUpdatePasswordRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.infoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          // User public.fn.\n          myUserName={this.state.sidePanelTitle}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          // Show the forwareded message if the user has selected a topic to forward this message to.\n          forwardedMessage={this.state.forwardMessage && this.stateTopicSelected != this.state.forwardMessage.head.fwdFrom ? this.state.forwardMessage : null}\n          onCancelForwardMessage={this.handleHideForwardMenu}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.infoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n            panel={this.state.infoPanel}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onNavigate={this.infoNavigator}\n            onTopicDescUpdateRequest={this.handleTopicUpdateRequest}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteTopic={this.handleDeleteTopicRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdateRequest={this.handleTagsUpdateRequest}\n            onTopicUnArchive={this.handleUnarchive}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst htmlLang = allMessages[language] ? langauge : allMessages[baseLanguage] ? baseLanguage : 'en';\nconst messages = allMessages[htmlLang];\n\n// Set lang attribute of the HTML element: <html lang=\"XX\">\ndocument.getElementsByTagName('html')[0].setAttribute('lang', htmlLang);\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n      <TinodeWeb />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[72](0, __webpack_exports__, __webpack_require__);\n"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","IMAGE_THUMBNAIL_DIM","MAX_TITLE_LENGTH","MAX_TOPIC_DESCRIPTION_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","reply","forward","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","selfRef","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","replyToMessage","forwardMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","current","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","error","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","pickReply","userFrom","userName","menu","count","map","push","key","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","ref","injectIntl","icon_mapping","ContactBadges","badges","b","color","icon","name","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","shortenFileName","filename","maxLength","slice","idToColorClass","light","fg","userId","abs","value","hash","i","charCodeAt","stringToColorHash","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","createElement","type","rel","href","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","note","card","trim","mimeType","matches","exec","photo","data","substring","indexOf","arrayEqual","a","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","sanitizeImageUrl","sanitizedUrl","deliveryMarker","received","LetterTile","avatar","isGroup","iconColor","letter","charAt","authorizeURL","alt","src","onerror","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","LazyImage","state","Object","assign","padding","whenDone","setState","componentDidUpdate","prevProps","FileProgress","width","progress","onCancel","UploadingImage","onCancelUpload","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","startsWith","fitImageSize","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","fileNameForMime","fname","mime","idx","ext","at","lastIndexOf","imageScaled","fileOrBlob","maxSize","Promise","resolve","img","Image","crossOrigin","Error","onload","async","URL","revokeObjectURL","dim","canvas","ctx","getContext","imageSmoothingEnabled","drawImage","includes","blob","toBlob","clearRect","createObjectURL","blobToBase64","reader","FileReader","evt","bits","split","readAsDataURL","drafty_form","drafty_attachment","drafty_image","handleImageData","el","attr","viewportWidth","minWidth","minHeight","Drafty","max","onImagePreview","loading","fullFormatter","values","call","onFormButtonClick","inner","child","undefined","val","onQuoteClick","concat","previewFormatter","inlineImageAttr","quoteFormatter","quoteImage","promise","str","bin","atob","buf","ArrayBuffer","arr","Uint8Array","Blob","base64ToBlob","fetch","ok","status","statusText","scaled","b64","replyFormatter","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","icon_badges","isVerified","isStaff","isDangerous","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","comment","showCheckmark","selected","showOnline","isChannel","unread","small","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","substr","showUnread","connected","onTopicSelected","trusted","verified","staff","danger","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","SearchContacts","edited","search","handleSearchChange","handleSearch","handleClear","handleKeyDown","onSearchContacts","query","search_placeholder","placeholder","onChange","onKeyDown","required","autoFocus","ForwardMenu","handleSearchContacts","handleContactSelected","onInitFind","uid","onCreateTopic","hSize","searchResults","LoadSpinner","large","clear","centered","show","AvatarUpload","source","handleFileReceived","image","files","onImageUpdated","randId","random","readOnly","accept","htmlFor","uploading","badge_verified","badge_staff","badge_danger","BadgeList","trustedBadges","CheckBox","handleChange","checked","MenuCancel","ErrorPanel","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","avatarDisabled","tabIndex","onFocus","onBlur","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","splice","instance","added","keys","k","onSubmit","doContactFiltering","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","Cropper","panX","panY","originX","originY","zoom","minZoom","maxZoom","overlay","cutout","boundingBox","imageWidth","imageHeight","mouseX","mouseY","prevDistance","cutoutRect","bBoxRect","initScaling","onZoom","handleZoom","mouseDown","mouseUp","mouseMove","mouseTouch","positionAll","translate","passive","getBoundingClientRect","currPan","nextDiff","imgRect","imgLeft","imgRight","coLeft","coRight","imgTop","imgBottom","coTop","coBottom","touches","body","dX","dY","checkBound","touch0","touch1","distance","sqrt","t3d","orig","transform","transformOrigin","onLoad","step","AvatarCrop","objURL","imageCrop","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","spanText","spanClass","multiline","element","rows","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","TopicDescEdit","getAccessMode","isMe","fullName","description","newAvatar","newAvatarMime","previousOnTags","tnNewTags","handleFullNameUpdate","handleImageUpdated","handleAvatarCropped","handlePrivateUpdate","handleDescriptionUpdate","uploadAvatar","handleAvatarCropCancel","handleTagsUpdated","onTagsUpdated","onUpdateTopicDesc","desc","readyToUpload","uploader","getLargeFileHelper","upload","finally","du","onUpdateTags","editable","full_name_placeholder","group_name_placeholder","private_placeholder","title_tag_manager","TopicCommon","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousTagsUpdated","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","getType","creds","method","asPhone","asEmail","onCredAdd","onTopicTagsUpdateRequest","cred","meth","done","onCredConfirm","onCredDelete","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","other_user","TopicSecurity","handleDeleteTopic","handleDeleteMessages","handleLeave","handleBlock","handleReport","onDeleteTopic","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","channel","groupTopic","onLaunchPermissionsEditor","access","auth","anon","modeGiven2","general","security","crop","perm_want","perm_given","perm_auth","perm_anon","perm_user","_clip","InfoView","admin","muted","address","selectedContact","modeGiven","modeWant","modeWant2","contactList","previousMetaDesc","previousSubsUpdated","resetSubs","resetDesc","resetTags","onMetaDesc","onSubsUpdated","handleImageChanged","handleMuted","handleUnarchive","handlePermissionsChanged","handleLaunchPermissionsEditor","handleShowAddMembers","handleMemberUpdateRequest","handleMemberSelected","handleContextMenu","handleBackNavigate","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","entries","isAdmin","isSharer","isDeleter","archived","isArchived","isGroupType","isChannelType","chan","getMeta","startMetaQuery","withTags","build","subs","onTopicDescUpdate","ignored","onChangePermissions","ignored2","onTopicUnArchive","which","perm","onTopicDescUpdateRequest","userPermissionsEdited","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onNavigate","onMemberUpdateRequest","args","panel","menuItems","view","shift","panelTitle","displayMobile","errorLevel","errorText","searchableContacts","no_members","Attachment","downloader","downloadFile","mimetype","download","loaded","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","BaseChatMessage","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","handleQuoteClick","formatterContext","getFormatter","tp","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","userIsWriter","MESSAGE_STATUS_DEL_RANGE","ratio","replyToSeq","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","attachments","att","tree","innerRef","IntlChatMessage","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","quote","replyTo","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","file","getAsFile","filePasted","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","onCancelReply","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","maxlength","Invitation","handleButtonAction","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","infopanel","online_now","last_seen","not_found","invalid_content","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendMessage","retrySend","sendImageAttachment","sendFileAttachment","sendKeyPress","subscribe","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleMessageUpdate","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","handlePickReply","handleCancelReply","chatMessageRefs","getOrCreateMessageRef","readNotificationQueue","readNotificationTimer","seqId","messagesScroller","messageCount","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","ready","nextState","forwardedMessage","docPreview","imagePreview","imagePostview","typingIndicator","fetchingMessages","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","latestClearId","maxClearId","isWriter","isReader","readingBlocked","unconformed","unconfirmed","isSubscribed","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","withLaterData","withLaterDel","setQuery","code","onNewTopicCreated","queuedMessages","pub","_sending","navigateTo","setUrlTopic","blankState","oldTopicName","isTopicCached","oldTopic","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","sendAt","noteRead","setMilliseconds","getMilliseconds","clearTimeout","keyPressTimer","isNewMessage","from","what","forceUpdate","attachJSON","parse","searchParams","set","open","messageSpecificMenuItems","onNewChat","noteKeyPress","uploadCompletionPromise","append","maxInbandAttachmentSize","urlPromise","fileToBase64","maxExternAttachmentSize","limit","insertImage","_tempPreview","appendLineBreak","found","findMessage","_cancelled","senderId","senderName","init","isValid","wrapInto","onCancelForwardMessage","scrollIntoView","behavior","classList","add","remove","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","prev","next","nextFrom","thisFrom","isReply","userDesc","parseInt","isNaN","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","AccountSettingsView","me","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","onImageChanged","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","showPermissionEditorFor","handlePasswordUpdate","handleHidePermissionsEditor","handleDeleteAccount","pwd","onUpdatePassword","onUpdateAccountDesc","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handleFieldEdit","handleTagsChanged","handleChannelToggle","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","dataUrl","priv","no_contacts_placeholder","PasswordResetView","sent","token","scheme","onReset","onRequest","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","notif","support","newtpk","reset","SidepanelView","handleNewTopic","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdatePasswordRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleTagsUpdateRequest","handleLogout","handleDeleteTopicRequest","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","handleShowForwardMenu","handleHideForwardMenu","sendMessageToTopic","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","myTrustedBadges","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","infoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","forwardMenuVisible","forwardMenuBounds","forwardMenuClickAt","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","play","unused","foundContacts","merged","updated","past","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","on","enabled","updateObject","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","infoNavigator","setUrlInfoPanel","newGroupTopicName","oldName","newName","updateAccountBasic","getCurrentLogin","updateGiven","delCurrentUser","publish","header","msgPreview","fwdFrom","authorUid","self_blocked","subscribed","keepForwardedMessage","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","btoa","base64ReEncode","myUserName","stateTopicSelected","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","htmlLang","allMessages","langauge","setAttribute","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","__webpack_modules__"],"sourceRoot":""}