{"version":3,"sources":["webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/more-button.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/edit-account-view.jsx","webpack://tinode-webapp/./src/views/acc-general-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","MAX_TITLE_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","menu_item_clear_messages","deleteMessages","menu_item_clear_messages_for_all","message","retryMessage","topicPermissionSetter","menu_item_block","then","ctrl","onTopicRemoved","topicName","menu_item_delete_topic","topic","tinode","getTopic","delTopic","catch","err","console","log","menu_item_edit_permissions","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","count","menu","map","push","data-id","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","LetterTile","avatar","isGroup","iconColor","abs","value","hash","i","charCodeAt","stringHash","trim","letter","charAt","alt","src","onerror","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","photo","type","data","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","URL","revokeObjectURL","dim","canvas","createElement","ctx","getContext","imageSmoothingEnabled","drawImage","mime","indexOf","blob","Promise","resolve","toBlob","clearRect","fname","idx","ext","at","lastIndexOf","substring","fileNameForMime","name","createObjectURL","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","AvatarUpload","state","dataUrl","handleFileUpload","componentDidUpdate","prevProps","setState","files","unused","base64bits","du","onImageChanged","randId","random","substr","readOnly","href","uid","accept","onChange","htmlFor","CheckBox","handleChange","checked","icon_mapping","ContactBadges","badges","b","icon","color","UnreadBadge","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","acs","showMode","getMode","isMuted","isJoiner","showCheckmark","selected","showOnline","isChannel","unread","comment","ContactAction","action","values","badge_you","badge_owner","ContactList","Array","isArray","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","private","toLowerCase","public","fn","myUserId","isOwner","join","showUnread","connected","onTopicSelected","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","show","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","includes","concat","removed","onChipRemoved","onFocusLost","onEnter","undefined","avatarDisabled","onFocus","onBlur","onKeyDown","autoFocus","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","userId","status","splice","val","query","instance","added","keys","k","onSubmit","doContactFiltering","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","tabIndex","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","fieldType","spanText","spanClass","MoreButton","open","handleToggle","onToggle","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","replace","sort","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","rel","removeChild","appendChild","vcard","imageDataUrl","card","dataStart","arrayEqual","l","sanitizeUrl","url","allowedSchemes","test","schemes","RegExp","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","requested","granted","other_user","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","InfoView","admin","muted","address","groupTopic","channel","fullName","selectedContact","access","modeGiven","modeWant","modeGiven2","modeWant2","auth","anon","contactList","showMemberPanel","showPermissionEditorFor","moreInfoExpanded","previousMetaDesc","previousSubsUpdated","previousTagsUpdated","resetSubs","resetDesc","onMetaDesc","onSubsUpdated","onTagsUpdated","handleFullNameUpdate","handlePrivateUpdate","handleImageChanged","handleMuted","handlePermissionsChanged","handleLaunchPermissionsEditor","handleHidePermissionsEditor","handleShowAddMembers","handleHideAddMembers","handleMemberUpdateRequest","handleDeleteMessages","handleLeave","handleBlock","handleReport","handleMemberSelected","handleMoreInfo","handleTagsUpdated","handleContextMenu","getType","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","getAccessMode","isAdmin","isSharer","isDeleter","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","ignored","onChangePermissions","perm","userPermissionsEdited","which","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","onMemberUpdateRequest","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","onTopicTagsUpdate","menuItems","displayMobile","errorLevel","errorText","searchableContacts","private_placeholder","more","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","getLargeFileHelper","download","loaded","uploading","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","message_sending","message_sending_failed","ReceivedMarker","timestamp","received","marker","UploadingImage","ChatMessage","uploader","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","onImagePreview","resp","act","ref","onFormResponse","MESSAGE_STATUS_FAILED","ratio","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","mimeType","Drafty","att","draftyFormatter","userName","notFound","el","attr","viewportWidth","authorizeURL","sanitizeImageUrl","inner","child","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","image","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","getBoundingClientRect","maxlength","max","Invitation","handleButtonAction","evt","LoadSpinner","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","args","parsed","parseUrlHash","composeUrlHash","sidepanel","online_now","last_seen","not_found","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleNewMessage","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","readNotificationQueue","readNotificationTimer","messagesScroller","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","setUrlTopic","blankState","nextState","docPreview","imagePreview","imagePostview","typingIndicator","msgs","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","oldTopic","finally","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","shift","sendAt","noteRead","setMilliseconds","getMilliseconds","isNewMessage","msgStatus","from","what","clearTimeout","keyPressTimer","forceUpdate","sendMessage","attachJSON","parse","searchParams","set","search","messageSpecificMenuItems","onNewChat","noteKeyPress","maxInbandAttachmentSize","uploadCompletionPromise","upload","urlPromise","maxExternAttachmentSize","limit","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","init","bits64","preview","found","find","_cancelled","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","nextFrom","thisFrom","isReply","deliveryStatus","userDesc","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","me","onBasicNavigate","AccGeneralView","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousOnTags","tnNewTags","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","creds","onUpdateAccount","method","asPhone","asEmail","onCredAdd","onUpdateTags","cred","meth","done","onCredConfirm","onCredDelete","full_name_placeholder","title_tag_manager","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","handlePasswordUpdate","handleDeleteAccount","pwd","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","NewTopicGroup","handlePrivateChange","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","priv","no_contacts_placeholder","searchResults","PasswordResetView","token","scheme","onReset","onRequest","reset","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","general","security","notif","support","newtpk","SidepanelView","handleLoginRequested","handleNewTopic","onLoginRequest","view","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdateAccountRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initDesktopAlerts","togglePushToken","requestPushToken","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleLogout","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleHideInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","showInfoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","setDeviceToken","parsedNav","expires","setAuthToken","connect","tab","readTimer","readTimerCallback","setHumanLanguage","enableLogging","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","newTopicTabSelected","isConnected","getServerInfo","ver","sec","prom","reconnectCountdown","timeLeft","seconds","secondsToTime","reconnect","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","setUrlSidePanel","isPresencer","archived","isArchived","play","foundContacts","merged","updated","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","getTopicAccessMode","isP2P","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","updateAccountBasic","getCurrentLogin","on","onTokenRefresh","onMessage","payload","enabled","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","isTopicCached","newGroupTopicName","oldName","newName","permissions","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","str","btoa","atob","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent"],"mappings":"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","file":"index.prod.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var __WEBPACK_NAMESPACE_OBJECT__ = React;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","var __WEBPACK_NAMESPACE_OBJECT__ = firebase;","var __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","var __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"blue\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.16.10\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.16');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: When an avatar image is uploaded, it's resized to\n// a square of this size.\nexport const AVATAR_SIZE = 128;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. The actual binary size of the attachment should be smaller due to\n// base64 encoding expansion and some overhead, for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Absolute maximum attachment size to be used with the server = 8MB. Increase to\n// something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension of an inline image in pixels. Larer images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:info@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\nimport HashNavigation from '../lib/navigation.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation?',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_clear_messages_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_delete_topic), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.menu_item_edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (ReactDOM.findDOMNode(this).contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n\t    return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    } else {\n\t    return then.toLocaleDateString(locale,\n        {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n    }\n  }\n  return then.toLocaleDateString(locale,\n    {hour12: false, year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"/img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Make a data URL from public.photo\nexport function makeImageUrl(photo) {\n  return (photo && photo.type && photo.data) ?\n    'data:image/' + photo.type + ';base64,' + photo.data : null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  let scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  let size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.indexOf(fileOrBlob.type) < 0 ? 'image/jpeg' : fileOrBlob.type;\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(blob, mime, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.log(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.log(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nimport { AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataUrl: props.avatar\n    };\n\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({dataUrl: this.props.avatar})\n    }\n  }\n\n  handleFileUpload(e) {\n    imageScaled(e.target.files[0], AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n      // Image successfully scaled and converted.\n      (mime, blob) => {\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageUrl({data: base64bits, type: mime});\n          this.setState({dataUrl: du});\n          this.props.onImageChanged(du);\n        });\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      });\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.dataUrl ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageChanged(null);}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.dataUrl ?\n          <img src={this.state.dataUrl} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileUpload} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n    render() {\n      let badges = null;\n      if (this.props.badges && this.props.badges.length > 0) {\n        badges = [];\n        this.props.badges.map(function(b) {\n          if (b.icon) {\n            badges.push(<i className=\"material-icons as-badge\" key={b.key || b.icon}>{icon_mapping[b.icon]}</i>);\n          } else {\n            const style = 'badge' + (b.color ? ' ' + b.color : '');\n            badges.push(<span className={style} key={b.key || b.name}>{b.name}</span>);\n          }\n        });\n        return <>{badges}</>;\n      }\n      return null;\n    }\n};\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport LetterTile from './letter-tile.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport UnreadBadge from './unread-badge.jsx';\n\nexport default class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '...';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? \"selected\" : null}\n        onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <UnreadBadge count={this.props.unread} /><ContactBadges badges={icon_badges} />\n          </div>\n          {this.props.comment ? <div className=\"contact-comment\">{this.props.comment}</div> : null}\n          <span><ContactBadges badges={badges} /></span>\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const {formatMessage} = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            let content = [key];\n            if (c.private && c.private.comment) {\n              content.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              content.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, content)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n\n          contactNodes.push(\n            <Contact\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          autoFocus />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n  handleStartEditing() {\n    if (!this.props.readOnly) {\n      ReactDOM.findDOMNode(this).focus();\n      this.setState({active: true});\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    let value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (this.state.active) {\n      var fieldType = this.props.type || 'text';\n    } else {\n      var spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      var spanClass = 'in-place-edit' +\n        (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (spanText.length > 20) {\n        // FIXME: this is wrong for RTL languages.\n        spanText = spanText.substring(0, 19) + '...';\n      }\n    }\n    return (\n      this.state.active ?\n        (fieldType == 'password' ?\n          <VisiblePassword\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus={true}\n            onFinished={this.handlePasswordFinished}/>\n          :\n          <input type={fieldType}\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus\n            onChange={this.handeTextChange}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleEditingFinished} />\n        )\n        :\n        <span className={spanClass} onClick={this.handleStartEditing}>\n          <span className=\"content\">{spanText}</span>\n        </span>\n    );\n  }\n};\n","// Toggle [Title text >] -> [Title text v]\n\nimport React from 'react';\n\nexport default class MoreButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    const open = !this.state.open;\n    this.setState({open: open});\n    if (this.props.onToggle) {\n      this.props.onToggle(open);\n    }\n  }\n\n  render() {\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\n        <i className=\"material-icons\">chevron_right</i>}\n      </label>);\n  }\n}\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    let idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    var mode = (this.state.mode || 'N').split('').sort().join('');\n    var before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box\"><Contact\n            item={this.props.item}\n            title={this.props.userTitle}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Odds and ends\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create VCard which represents topic 'public' info\nexport function vcard(fn, imageDataUrl) {\n  let card = null;\n\n  if ((fn && fn.trim()) || imageDataUrl) {\n    card = {};\n    if (fn) {\n      card.fn = fn.trim();\n    }\n    if (imageDataUrl) {\n      const dataStart = imageDataUrl.indexOf(',');\n      card.photo = dataStart >= 0 ? {\n        data: imageDataUrl.substring(dataStart+1),\n        type: 'jpg'\n      } : imageDataUrl;\n    }\n  }\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\n// If apikey and/or token is defined, it's appended to relative URL.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (!url) {\n    return null;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// The relative URL is appended with the API key and/or auth token.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags,\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\n      return {tags: nextProps.tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"blue\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport MoreButton from '../widgets/more-button.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  requested: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  granted: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n});\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      tags: [],\n      showMemberPanel: false,\n      showPermissionEditorFor: undefined,\n      moreInfoExpanded: false,\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n      previousTagsUpdated: undefined\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: topic.public ? topic.public.fn : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      private: topic.private ? topic.private.comment : null,\n      address: topic.name,\n      groupTopic: (topic.getType() == 'grp'),\n      channel: topic.isChannel(),\n      showMemberPanel: false,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onTopicDescUpdate(this.props.topic, vcard(fn, null), null);\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, vcard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(perm) {\n    switch (this.state.showPermissionEditorFor) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.requested);\n        titleCompare = formatMessage(messages.granted);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        break;\n    }\n    this.setState({\n      showPermissionEditorFor: which,\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.setState({showMemberPanel: true});\n  }\n\n  handleHideAddMembers() {\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.setState({showMemberPanel: false});\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleMoreInfo(open) {\n    this.setState({moreInfoExpanded: open});\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const instance = this;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: function() {\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\n      }},\n      'member_delete',\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\n    ];\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\n          </div>\n          <div>\n            <MenuCancel onCancel={this.props.onCancel} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {this.state.showMemberPanel ?\n          <GroupManager\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleHideAddMembers}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        this.state.showPermissionEditorFor ?\n          <PermissionsEditor\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={this.handlePermissionsChanged}\n            onCancel={this.handleHidePermissionsEditor}\n            />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-row\">\n              <div className=\"panel-form-column\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div><InPlaceEdit\n                    placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                    readOnly={!this.state.owner}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} /></div>\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label>\n                </div>\n                <div>\n                  <FormattedMessage id=\"private_editing_placeholder\"\n                    defaultMessage=\"Visible to you only\"\n                    description=\"Placeholder for editing 'private'\">{\n                    (private_placeholder) => <InPlaceEdit\n                      placeholder={private_placeholder}\n                      value={this.state.private}\n                      onFinished={this.handlePrivateUpdate} />\n                  }</FormattedMessage>\n                </div>\n              </div>\n              <AvatarUpload\n                avatar={this.state.avatar}\n                readOnly={!this.state.owner}\n                uid={this.props.topic}\n                title={this.state.fullName}\n                onImageChanged={this.handleImageChanged}\n                onError={this.props.onError} />\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted}\n                  onChange={this.handleMuted} />\n              </div>\n              <FormattedMessage id=\"action_more\" defaultMessage=\"More\"\n                description=\"Action for showing more content\">{\n                (more) => <MoreButton\n                  title={more}\n                  open={this.state.moreInfoExpanded}\n                  onToggle={this.handleMoreInfo} />\n              }</FormattedMessage>\n              {this.state.moreInfoExpanded ?\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                      description=\"Label for user address (ID)\" /></label>\n                    <tt>{this.state.address}</tt>\n                  </div>\n                  {this.state.groupTopic ?\n                    <div className=\"panel-form-row\">\n                      <label>\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                          description=\"Label for current user permissions\" />\n                      </label>\n                      <tt className=\"clickable\"\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                        {this.state.access}\n                      </tt>\n                    </div>\n                    :\n                    <div>\n                      <div>\n                        <label className=\"small\">\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                            description=\"Section title\" />\n                        </label>\n                      </div>\n                      <div className=\"quoted\">\n                        <div>\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                          {this.state.access}\n                        </tt></div>\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\n                          {this.state.modeGiven2}\n                          </tt>\n                        </div>\n                      </div>\n                    </div>\n                  }\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\n                  <div>\n                    <div>\n                      <label className=\"small\">\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\n                          description=\"Section title\" />\n                      </label>\n                    </div>\n                    <div className=\"quoted\">\n                      <div>Auth: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\n                          {this.state.auth}\n                        </tt>\n                        :\n                        <tt>{this.state.auth}</tt>\n                      }\n                      </div>\n                      <div>Anon: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\n                          {this.state.anon}\n                        </tt>\n                        :\n                        <tt>{this.state.anon}</tt>\n                      }\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  null\n                }\n                </div>\n              :\n              null\n              }\n            </div>\n            <div className=\"hr\" />\n            {this.state.owner ?\n              <>\n                <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n                  description=\"Section title for TagManager\">{\n                  (tags) => <TagManager\n                    title={tags}\n                    tags={this.state.tags}\n                    activated={false}\n                    tinode={this.props.tinode}\n                    onSubmit={this.handleTagsUpdated} />\n                }</FormattedMessage>\n                <div className=\"hr\" />\n              </>\n              :\n              null\n            }\n            <div className=\"panel-form-column\">\n              {!this.state.channel ?\n                <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n                  <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                    formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n                  }\n                </a>\n                :\n                null\n              }\n              <a href=\"#\" className=\"red flat-button\" onClick={this.handleLeave}>\n                <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n              </a>\n              {!this.state.groupTopic ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleBlock}>\n                  <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n                </a>\n                :\n                null\n              }\n              {!this.state.owner ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleReport}>\n                  <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n                </a>\n                :\n                null\n              }\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                        description=\"Section title or label\" />\n                    </label>\n                  </div>\n                  <div className=\"panel-form-row\">\n                    <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                      <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                        defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                    </a>\n                  </div>\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                    description=\"Shown in place of group members\">{\n                    (no_members) => <ContactList\n                      contacts={this.state.contactList}\n                      myUserId={this.props.myUserId}\n                      emptyListMessage={no_members}\n                      topicSelected={this.state.selectedContact}\n                      showOnline={false}\n                      showUnread={false}\n                      showMode={true}\n                      noScroll={true}\n                      onTopicSelected={this.handleMemberSelected}\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                    />\n                  }</FormattedMessage>\n                </div>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    let marker = null;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      marker = (<i className=\"material-icons small\">access_time</i>); // watch face\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      marker = (<i className=\"material-icons small amber\">warning</i>); // yellow icon /!\\\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_SENT) {\n      marker = (<i className=\"material-icons small\">done</i>); // checkmark\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_RECEIVED) {\n      marker = (<i className=\"material-icons small\">done_all</i>); // double checkmark\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_READ) {\n      marker = (<i className=\"material-icons small blue\">done_all</i>); // blue double checkmark\n    }\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk'\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name} uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime} size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement(React.Fragment, null, Drafty.format(content, draftyFormatter, this));\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"message-content\">\n              {content}\n              {attachments}\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 4, REM_SIZE * 36), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              attr.onClick = this.handleImagePreview;\n              attr.className += ' image-clickable';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'FE':\n        // Form element formatting is dependent on element content.\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n    return (\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"blue\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    return (this.props.show ?\n      <div className=\"load-spinner-box\"><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\" \n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].substr(1).split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        let item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messages.length != this.state.messages.length) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleNewMessage;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc();\n      if (this.state.isSharer || (newTopic && !topic.isChannel())) {\n        // Request subscriptions only if one of S,O,A is given or it's a new non-channel topic.\n        getQuery = getQuery.withLaterSub();\n      }\n      if (this.state.isReader || newTopic) {\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (ctrl.code == 303) {\n            // Redirect to another topic requested.\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n            return;\n          }\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messages: [],\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const msgs = [];\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        topic.messages(function(msg) {\n          if (!msg.deleted) {\n            msgs.push(msg);\n          }\n        });\n\n        Object.assign(nextState, {\n          messages: msgs,\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          channel: topic.isChannel()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messages: [],\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName) {\n      return;\n    }\n    let oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE).catch((err) => {\n              this.setState({fetchingMessages: false});\n              this.props.onError(err.message, 'err');\n            });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  handleNewMessage(msg) {\n    // Regenerate messages list\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const newState = {messages: []};\n    topic.messages((m) => {\n      if (!m.deleted) {\n        newState.messages.push(m);\n      }\n    });\n\n    // msg could be null if one or more messages were deleted.\n    if (msg && !msg.deleted) {\n      // If the message is added to the end of the message list,\n      // scroll to the bottom.\n      if (topic.isNewMessage(msg.seq)) {\n        newState.scrollPosition = 0;\n      }\n\n      // Aknowledge messages except own messages. They are\n      // automatically assumed to be read and recived.\n      const status = topic.msgStatus(msg);\n      if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n        this.postReadNotification(msg.seq);\n      }\n      this.props.onData(msg);\n    }\n    this.setState(newState);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map(function(key) {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannel()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.init(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      this.props.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (blob, mime, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const found = this.state.messages.find(msg => msg.seq == seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannel();\n        const groupTopic = topic.getType() == 'grp' && !isChannel;\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        for (let i=0; i<this.state.messages.length; i++) {\n          let msg = this.state.messages[i];\n          let nextFrom = null;\n\n          if (i + 1 < this.state.messages.length) {\n            nextFrom = this.state.messages[i+1].from || 'chan';\n          }\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              key={msg.seq} />\n          );\n        }\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }</div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    return (\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\n          {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n          {this.props.avatar ?\n            <div id=\"self-avatar\" className=\"avatar-box\">\n              <LetterTile\n                avatar={this.props.avatar}\n                topic={this.props.myUserId}\n                title={this.props.title} />\n            </div>\n            :\n            null}\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}</div>\n          {this.props.state === 'login' ?\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n            this.props.state === 'contacts' ?\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n            null}\n        </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { vcard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      vcard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class EditAccountView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large\">{this.state.fullName}</div>\n            <div>\n              <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                description=\"Label for user address (ID)\" /></label>&nbsp;\n              <tt>{this.props.myUserId}</tt>\n            </div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            readOnly={!this.state.owner}\n            uid={this.props.myUserId}\n            title={this.state.fullName} />\n        </div>\n        <div className=\"panel-form-row\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_security\"\n              defaultMessage=\"Security\" description=\"Sidepanel title for AccSecurityView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, asEmail, asPhone, vcard } from '../lib/utils.js';\n\nexport default class AccGeneralView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null),\n      tags: me.tags(),\n      credentials: me.getCredentials() || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      previousOnTags: me.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onCredsUpdated = this.tnCredsUpdated;\n    me.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onTagsUpdated = this.state.previousOnTags;\n    me.onCredsUpdated = undefined;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateAccount(undefined, vcard(fn, null));\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onUpdateAccount(undefined, vcard(null, img || Tinode.DEL_CHAR));\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    let value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    const credentials = [];\n    this.state.credentials.map((cred) => {\n      credentials.push(<div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n        <span > {!cred.done ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n              <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                description=\"Validate credentail call to action\" />\n            </a>\n          : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n            className=\"material-icons gray\">delete_outline</i></a></span></div>);\n    });\n\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\"><FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" /></label>\n            <div><FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n              description=\"Input placeholder for person's full name\">{\n              (full_name_placeholder) => <InPlaceEdit\n                placeholder={full_name_placeholder}\n                value={this.state.fullName}\n                onFinished={this.handleFullNameUpdate} />\n            }</FormattedMessage></div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            uid={this.props.myUserId}\n            title={this.state.fullName}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div className=\"hr\" />\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title_tag_manager) => <TagManager\n            title={title_tag_manager}\n            activated={false}\n            tags={this.state.tags}\n            tinode={this.props.tinode}\n            onSubmit={this.handleTagsUpdated} />\n        }</FormattedMessage>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n            description=\"Label for user contacts\" />\n          </label>\n          <div className=\"quoted\">\n            {credentials}\n            {this.state.addCredActive ?\n              <input type=\"text\" value={this.state.value}\n                className={this.state.addCredInvalid ? 'invalid' : null}\n                placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n              : null}\n            <div>\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                <i className=\"material-icons\">add</i>\n                <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n              </a></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_arning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdateAccount(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccount(undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      var name = this.state.groupId.trim();\n      if (name.length > 3 && (name.substr(0, 3) == 'usr' || name.substr(0, 3) == 'grp')) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fn: '', // full/formatted name\n      private: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handlePrivateChange(e) {\n    this.setState({private: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\n            }</FormattedMessage>\n            <br />\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handlePrivateChange} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onError={this.props.onError}\n            onImageChanged={this.handleImageChanged} />\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} onChange={this.handleChannelToggle}/>&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tinode={this.props.tinode}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel);\n    }\n  }\n\n  handleNewGroupSubmit(name, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, vcard(name, dataUrl), priv, tags, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else {\n      this.props.onRequest('email', this.state.email.trim());\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    let reset = (this.state.token && this.state.scheme);\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {reset ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n          :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" type=\"submit\">{reset ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" /> :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    var transportOptions = [];\n    var instance = this;\n    ['def', 'ws', 'lp'].map(function(item) {\n      var id = 'transport-' + item;\n      var name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={instance.state.transport === item}\n            onChange={instance.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"blue\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\n\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport EditAccountView from './edit-account-view.jsx';\nimport AccGeneralView from './acc-general-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for EditAccountView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'sidepanel_title_acc_general',\n    description: 'Sidepanel title for AccGeneralView.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'sidepanel_title_acc_security',\n    description: 'Sidepanel title for AccSecurityView.',\n    defaultMessage: 'Security'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoginRequested = this.handleLoginRequested.bind(this);\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleLoginRequested(login, password) {\n    this.props.onLoginRequest(login, password);\n  }\n\n  handleNewTopic() {\n    this.props.onBasicNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            onLogin={this.handleLoginRequested} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <EditAccountView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onBasicNavigate={this.props.onBasicNavigate} /> :\n\n          view === 'general' ?\n          <AccGeneralView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onBasicNavigate={this.props.onBasicNavigate}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdateAccountRequest = this.handleUpdateAccountRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initDesktopAlerts = this.initDesktopAlerts.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: LocalStorageUtil.getObject('firebase-token'),\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      showInfoPanel: false,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    const {formatMessage, locale} = this.props.intl;\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport, locale);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    // Initialize desktop alerts.\n    if (this.state.desktopAlertsEnabled) {\n      try {\n        this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n        this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n        navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n          this.checkForAppUpdate(reg);\n          this.fbPush.useServiceWorker(reg);\n          reg.active.postMessage(JSON.stringify({locale: locale}));\n          this.initDesktopAlerts();\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken, true);\n            }\n          }\n        }).catch((err) => {\n          // registration failed :(\n          console.log(\"Failed to register service worker:\", err);\n        });\n      } catch (err) {\n        this.handleError(formatMessage(messages.push_init_failed), 'err');\n        console.log(\"Failed to initialize push notifications\", err);\n        this.setState({desktopAlertsEnabled: false});\n      }\n    }\n\n    const token = LocalStorageUtil.getObject('keep-logged-in') ?\n      LocalStorageUtil.getObject('auth-token') : undefined;\n\n    const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n    if (token) {\n      this.setState({autoLogin: true});\n\n      // When reading from storage, date is returned as string.\n      token.expires = new Date(token.expires);\n      this.tinode.setAuthToken(token);\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n      delete parsedNav.params.info;\n      delete parsedNav.params.tab;\n      parsedNav.path[0] = '';\n      HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsedNav.path, parsedNav.params));\n    } else if (!parsedNav.params.token) {\n      HashNavigation.navigateTo('');\n    }\n\n    this.readTimer = null;\n    this.readTimerCallback = null;\n\n    this.handleHashRoute();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale) {\n    const tinode = new Tinode(APP_NAME, serverAddress, API_KEY, transport, isSecureConnection());\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.log(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      if (hash.path.length > 1 && hash.path[1] != this.state.topicSelected) {\n        this.setState({\n          topicSelected: Tinode.topicType(hash.path[1]) ? hash.path[1] : null\n        });\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: ''});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      showInfoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    const token = this.tinode.getAuthToken();\n    if (login && password) {\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        localStorage.removeItem('auth-token');\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'contacts'));\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.log(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of kown contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        showInfoPanel: false\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        showInfoPanel: false\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2P()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.log(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleUpdateAccountRequest(password, pub, defacs) {\n    this.handleError();\n\n    if (pub || defacs) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      this.tinode.getMeTopic().setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  // Initialize desktop alerts = push notifications.\n  initDesktopAlerts() {\n    // Google could not be bothered to mention that\n    // onTokenRefresh is never called.\n    this.fbPush.onTokenRefresh(() => {\n      this.requestPushToken();\n    });\n\n    this.fbPush.onMessage((payload) => {\n      // No need to do anything about it.\n      // All the magic happends in the service worker.\n    });\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        this.fbPush.requestPermission().then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n          console.log(\"Failed to get permission to notify.\", err);\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    } else if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.log(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken, true);\n        LocalStorageUtil.setObject('firebase-token', refreshedToken);\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.log(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Basic nagigator by hash value. No need to bind to this.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, permissions) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (permissions) {\n        params.defacs = permissions;\n      }\n      topic.setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    if (this.tinode) {\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport, this.props.intl.locale);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: ReactDOM.findDOMNode(this).getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      !archived ? 'topic_archive' : null,\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', true));\n    this.setState({showInfoPanel: true});\n  }\n\n  handleHideInfoView() {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\n    this.setState({showInfoPanel: false});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\">\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          login={this.state.login}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onBasicNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccount={this.handleUpdateAccountRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.showInfoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.showInfoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onCancel={this.handleHideInfoView}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n    <TinodeWeb />\n  </IntlProvider>,\n  document.getElementById('mountPoint')\n);\n"],"sourceRoot":""}