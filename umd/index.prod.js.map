{"version":3,"file":"index.prod.js","mappings":"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","sources":["webpack://tinode-webapp/external var \"React\"","webpack://tinode-webapp/external var \"ReactDOM\"","webpack://tinode-webapp/external var \"ReactIntl\"","webpack://tinode-webapp/external var \"firebase\"","webpack://tinode-webapp/external var \"Tinode\"","webpack://tinode-webapp/external var [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/lazy-image.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/lib/formatters.js","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/widgets/forward-menu.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/badge-list.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/cropper.jsx","webpack://tinode-webapp/./src/widgets/avatar-crop.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/widgets/topic-desc-edit.jsx","webpack://tinode-webapp/./src/widgets/topic-common.jsx","webpack://tinode-webapp/./src/widgets/topic-security.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/account-settings-view.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.18.0-alpha1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: when image dimensions are greater or the image is not square, it's resized to\n// a square of this size or less.\nexport const AVATAR_SIZE = 384;\n\n// Maximum size of an avatar in bytes for sending in-band. Bigger avatars will be sent out of band (as uploads).\nexport const MAX_AVATAR_BYTES = 4096;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Linear dimensions of image thumbnail: shrink image under this size for thumbnails in reply quote previews.\nexport const IMAGE_THUMBNAIL_DIM = 36;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n// Maximum length of topic description.\nexport const MAX_TOPIC_DESCRIPTION_LENGTH = 360;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Length of a quote in quoted reply (for outgoing messages).\nexport const QUOTED_REPLY_LENGTH = 30;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  reply: {\n    id: 'menu_item_reply',\n    defaultMessage: 'Reply',\n    description: 'Reply to message'\n  },\n  forward: {\n    id: 'menu_item_forward',\n    defaultMessage: 'Forward',\n    description: 'Forward message'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  unarchive: {\n    id: 'menu_item_restore_topic',\n    defaultMessage: 'Restore',\n    description: 'Restore topic from archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'menu_item_reply': {\n        id: 'menu_item_reply',\n        title: formatMessage(messages.reply),\n        handler: (params, errorHandler) => {\n          return this.replyToMessage(params, errorHandler);\n        }\n      },\n      'menu_item_forward': {\n        id: 'menu_item_forward',\n        title: formatMessage(messages.forward),\n        handler: (params, errorHandler) => {\n          return this.forwardMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'topic_restore': {\n        id: 'topic_restore',\n        title: formatMessage(messages.unarchive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(false).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (this.selfRef.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.error(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  replyToMessage(params, errorHandler) {\n    console.log(\"Reply to message\", params);\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  replyToMessage(params, errorHandler) {\n    params.pickReply(params.seq, params.content, params.userFrom, params.userName, errorHandler);\n  }\n\n  forwardMessage(params, errorHandler) {\n    //params.pickReply({ seq: params.seq, content: params.content });\n    //this.props.\n    console.log('forwarding msg ', params);\n  }\n\n  render() {\n    const menu = [];\n    let count = 0;\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position} ref={this.selfRef}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block', 'staff': 'verified_user'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n  render() {\n    let badges = null;\n    if (this.props.badges && this.props.badges.length > 0) {\n      badges = [];\n      this.props.badges.map((b) => {\n        const color = (b.color ? ' ' + b.color : '');\n        if (b.icon) {\n          badges.push(<i className={'material-icons as-badge' + color} key={b.key || b.icon}>{icon_mapping[b.icon] || b.icon}</i>);\n        } else {\n          badges.push(<span className={'badge' + color} key={b.key || b.name}>{b.name}</span>);\n        }\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Shorten a file name to be under maxLength by clipping out the middle.\nexport function shortenFileName(filename, maxLength) {\n  if (typeof filename != 'string') {\n    return filename;\n  }\n  return filename.length > maxLength ?\n    filename.slice(0, maxLength/2 - 1) + '…' + filename.slice(1 - maxLength/2) : filename;\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nfunction stringToColorHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n\n// User avatar letter color id.\nexport function letterTileColorId(userId) {\n  return Math.abs(stringToColorHash(userId)) % 16;\n}\n\n// Converts user or topic ID to a CSS color class. Ideally it should produce the same color value as Java version.\n// params:\n// - {string} id: user or topic ID\n// - {boolean} light: light or dark version of the color.\n// - {boolean} fg: foreground (text) or background color.\nexport function idToColorClass(id, light, fg) {\n  return (light ? 'lt-' : 'dk-') + (fg ? 'fg-' : 'bg-') + letterTileColorId(id);\n}\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType, note) {\n  let card = null;\n  fn = fn && fn.trim();\n  note = note && note.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (typeof note == 'string') {\n    card = card || {};\n    card.note = note ? note : Tinode.DEL_CHAR;\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1),\n        ref: Tinode.DEL_CHAR\n      };\n    } else {\n      card.photo = {\n        data: Tinode.DEL_CHAR,\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (typeof url != 'string') {\n    return url;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'danger-color' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n\n// Wraps a promise to make it cancelable.\nexport function cancelablePromise(promise) {\n  let hasCanceled = false;\n\n  const wrappedPromise = new Promise((resolve, reject) => {\n    promise.then(\n      result => hasCanceled ? reject({isCanceled: true}) : resolve(result),\n      error => hasCanceled ? reject({isCanceled: true}) : reject(error)\n    );\n  });\n\n  return {\n    promise: wrappedPromise,\n    cancel( ) {\n      hasCanceled = true;\n    },\n  };\n};\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { idToColorClass } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = idToColorClass(this.props.topic, isGroup);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      const url = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={url}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"../img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// Image with a placeholder which is replaced when the promise is resolved.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class LazyImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      src: 'img/placeholder.png',\n      style: Object.assign({padding: '4px'}, this.props.style),\n      className: this.props.className,\n      alt: this.props.alt,\n      onClick: this.props.onClick,\n    };\n  }\n\n  componentDidMount() {\n    this.props.whenDone\n      .promise\n      .then(data => this.setState({src: data.src, style: {...this.state.style, padding: 0}}))\n      .catch(() => this.setState({src: 'img/broken_image.png'}));\n  }\n\n  componentWillUnmount() {\n    this.props.whenDone.cancel();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.whenDone != this.props.whenDone) {\n      this.setState({src: 'img/placeholder.png', style: {...this.state.style, padding: '4px'}});\n      this.props.whenDone\n        .then(data => this.setState({src: data.src, style: {...this.state.style, padding: 0}}))\n        .catch(() => this.setState({src: 'img/broken_image.png'}));\n    }\n  }\n\n  render() {\n    return React.createElement('img', this.state);\n  }\n};\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Get an URL from a theCard photo: either create a data: URL or return reference URL.\nexport function makeImageUrl(photo) {\n  if (photo && typeof photo == 'object') {\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n    return photo.ref;\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// Returns a promise which is resolven on success or rejected on failure.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.onerror = function(err) {\n      reject(new Error(\"Image format unrecognized\"));\n    }\n    img.onload = async function() {\n      // Once the image is loaded, the URL is no longer needed.\n      URL.revokeObjectURL(img.src);\n\n      // Calculate the desired image dimensions.\n      const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n      if (!dim) {\n        reject(new Error(\"Invalid image\"));\n        return;\n      }\n      let canvas = document.createElement('canvas');\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      let ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n\n      const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n      // Generate blob to check size of the image.\n      let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n      if (!blob) {\n        reject(new Error(\"Unsupported image format\"));\n        return;\n      }\n\n      // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n      // Do nothing if maxsize is <= 0.\n      while (maxSize > 0 && blob.length > maxSize) {\n        dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n        dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n        canvas.width = dim.dstWidth;\n        canvas.height = dim.dstHeight;\n        ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n          0, 0, dim.dstWidth, dim.dstHeight);\n        blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n      }\n\n      canvas = null;\n      resolve({mime: mime, blob: blob, width: dim.dstWidth, height: dim.dstHeight, name: fileNameForMime(fileOrBlob.name, mime)});\n    };\n    img.src = URL.createObjectURL(fileOrBlob);\n  });\n}\n\n// Scale and crop image according to specified dimensions.\n// The coordinates are in unscaled image pixels, i.e. cut the rectangle first then scale it.\n// returns a promise.\nexport function imageCrop(mime, objURL, left, top, width, height, scale) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.onerror = (err) => {\n      reject(new Error(\"Image format unrecognized\"));\n    };\n    img.onload = () => {\n      // Once the image is loaded, the URL is no longer needed.\n      URL.revokeObjectURL(img.src);\n\n      let canvas = document.createElement('canvas');\n      canvas.width = width * scale;\n      canvas.height = height * scale;\n      let ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n      ctx.drawImage(this, left, top, width, height, 0, 0, canvas.width, canvas.height);\n\n      mime = SUPPORTED_IMAGE_FORMATS.includes(mime) ? mime : 'image/jpeg';\n      // Generate blob to check size of the image.\n      canvas.toBlob((blob) => {\n        // Allow GC.\n        canvas = null;\n        if (blob) {\n          resolve({mime: mime, blob: blob, width: width, height: height});\n        } else {\n          reject(new Error(\"Unsupported image format\"));\n        }\n      }, mime);\n    };\n    img.src = objURL;\n  });\n}\n\n// Convert file to base64 string.\nexport function fileToBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = (evt) => {\n      reject(reader.error);\n    };\n    reader.onload = () => {\n      resolve({mime: file.type, bits: reader.result.split(',')[1], name: file.name});\n    };\n    reader.readAsDataURL(file);\n  });\n}\n\n// Convert Blob to base64 string. Returns a promise resolved with the base64 string and mime.\nexport function blobToBase64(blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = (evt) => {\n      reject(reader.error);\n    };\n    reader.onload = () => {\n      resolve({mime: blob.type, bits: reader.result.split(',')[1]});\n    };\n    reader.readAsDataURL(blob);\n  });\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  const items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  if (!Array.isArray(items)) {\n    return false;\n  }\n\n  for (let i in items) {\n    const item = items[i];\n    if (item.kind === 'file') {\n      const file = item.getAsFile();\n      if (!file) {\n        console.error(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        onError(\"Failed to get file object from pasted file item\");\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        onImageSuccess(file);\n      } else {\n        onAttachmentSuccess(file);\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.error(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n\n// Convert a base64 encoded string with the provided mime type into a Blob.\nexport function base64ToBlob(str, mime) {\n  if (!str) {\n    return null;\n  }\n\n  try {\n    // Make blob.\n    const bin = atob(str);\n    const length = bin.length;\n    const buf = new ArrayBuffer(length);\n    const arr = new Uint8Array(buf);\n    for (let i = 0; i < length; i++) {\n      arr[i] = bin.charCodeAt(i);\n    }\n\n    return new Blob([buf], { type: mime });\n  } catch(err) {\n    console.error(\"Failed to convert base64 to blob: \", err);\n  }\n\n  return null;\n}\n","import React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport LazyImage from '../widgets/lazy-image.jsx'\nimport UploadingImage from '../widgets/uploading-image.jsx'\n\nimport { IMAGE_THUMBNAIL_DIM, BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { base64ToBlob, blobToBase64, fitImageSize, imageScaled } from './blob-helpers.js';\nimport { idToColorClass, shortenFileName } from './strformat.js';\nimport { cancelablePromise, sanitizeImageUrl } from './utils.js';\n\nconst messages = defineMessages({\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  },\n});\n\n// Size the already scaled image.\nfunction handleImageData(el, data, attr) {\n  if (!data) {\n    attr.src = 'img/broken_image.png';\n    attr.style = {\n      width: IMAGE_THUMBNAIL_DIM + 'px',\n      height: IMAGE_THUMBNAIL_DIM + 'px',\n    };\n    return el;\n  }\n\n  attr.className = 'inline-image';\n  const dim = fitImageSize(data.width, data.height,\n    this.viewportWidth > 0 ? Math.min(this.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5) :\n      REM_SIZE * 34.5, REM_SIZE * 24, false) ||\n      {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n  attr.style = {\n    width: dim.dstWidth + 'px',\n    height: dim.dstHeight + 'px',\n    // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n    minWidth: dim.dstWidth + 'px',\n    minHeight: dim.dstHeight + 'px'\n  };\n  if (!Drafty.isProcessing(data)) {\n    attr.src = this.authorizeURL(sanitizeImageUrl(attr.src));\n    attr.alt = data.name;\n    if (attr.src) {\n      if (Math.max(data.width || 0, data.height || 0) > IMAGE_THUMBNAIL_DIM) {\n        // Allow previews for large enough images.\n        attr.onClick = this.onImagePreview;\n        attr.className += ' image-clickable';\n      }\n      attr.loading = 'lazy';\n    } else {\n      attr.src = 'img/broken_image.png';\n    }\n  } else {\n    // Use custom element instead of <img>.\n    el = UploadingImage;\n  }\n\n  return el;\n}\n\nfunction quotedImage(data) {\n  let promise;\n  // Get the blob from the image data.\n  if (data.val) {\n    const blob = base64ToBlob(data.val, data.mime);\n    promise = blob ? Promise.resolve(blob) : Prmise.reject(new Error(\"Invalid image\"));\n  } else {\n    promise = fetch(this.authorizeURL(sanitizeImageUrl(data.ref))).then(evt => {\n      if (evt.ok) {\n        return evt.blob();\n      } else {\n        throw new Error(`Image fetch unsuccessful: ${evt.status} ${evt.statusText}`);\n      }\n    });\n  }\n\n  // Scale the blob.\n  return promise\n    .then(blob => {\n      return imageScaled(blob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, true)\n    }).then(scaled => {\n      data.mime = scaled.mime;\n      data.size = scaled.blob.size;\n      data.width = scaled.width;\n      data.height = scaled.height;\n      delete data.ref;\n      // Keeping the original file name, if provided: ex.data.name;\n\n      return blobToBase64(scaled.blob);\n    }).then(b64 => {\n      data.val = b64.bits;\n      return data;\n    }).catch(err => {\n      delete data.val;\n      delete data.name;\n      data.width = IMAGE_THUMBNAIL_DIM;\n      data.height = IMAGE_THUMBNAIL_DIM;\n      data.maxWidth = IMAGE_THUMBNAIL_DIM;\n      data.maxHeight = IMAGE_THUMBNAIL_DIM;\n      // Rethrow.\n      throw err;\n    });\n}\n\n// The main Drafty formatter: converts Drafty elements into React classes. 'this' is set by the caller.\n// 'this' must contain:\n//    viewportWidth: this.props.viewportWidth;\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onImagePreview: this.handleImagePreview\n//    onFormButtonClick: this.handleFormButtonClick\n//    onQuoteClick: this.handleQuoteClick (optional)\nexport function fullFormatter(style, data, values, key) {\n  if (!style) {\n    // Unformatted.\n    return values;\n  }\n\n  if (style == 'HD') {\n    // Hidden.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  const attr = Drafty.attrValue(style, data) || {};\n  attr.key = key;\n  switch (style) {\n    case 'HL':\n      // Highlighted text. Assign class name.\n      attr.className = 'highlight';\n      break;\n    case 'IM':\n      // Additional processing for images\n      el = handleImageData.call(this, el, data, attr);\n      // Image element cannot have content.\n      values = null;\n      break;\n    case 'BN':\n      // Button\n      attr.onClick = this.onFormButtonClick;\n      let inner = React.Children.map(values, (child) => {\n        return typeof child == 'string' ? child : undefined;\n      });\n      if (!inner || inner.length == 0) {\n        inner = [attr.name]\n      }\n      // Get text which will be sent back when the button is clicked.\n      attr['data-title'] = inner.join('');\n      break;\n    case 'MN':\n      // Mention\n      attr.className = 'mention'\n      if (data) {\n        attr.className += ' ' + idToColorClass(data.val, false, true);\n      }\n      break;\n    case 'FM':\n      // Form\n      attr.className = 'bot-form';\n      break;\n    case 'RW':\n      // Form element formatting is dependent on element content.\n      break;\n    case 'QQ':\n      // Quote/citation.\n      attr.className = 'reply-quote'\n      attr.onClick = this.onQuoteClick;\n      break;\n    default:\n      if (el == '_UNKN') {\n        // Unknown element.\n        el = React.Fragment;\n        values = [<i className=\"material-icons gray\">extension</i>, ' '].concat(values || []);\n      }\n      break;\n  }\n  if (!el) {\n    return values;\n  }\n  return React.createElement(el, attr, values);\n};\n\n// Converts Drafty object into a one-line preview. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\nexport function previewFormatter(style, data, values, key) {\n  if (!style) {\n    // Unformatted.\n    return values;\n  }\n\n  if (style == 'HD') {\n    // Hidden.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  switch (style) {\n    case 'BR':\n      // Replace new line with a space.\n      el = React.Fragment;\n      values = [' '];\n      break;\n    case 'HL':\n      // Make highlight less prominent in preview.\n      attr.className = 'highlight preview';\n      break;\n    case 'LN':\n    case 'MN':\n      // Disable links in previews.\n      el = 'span';\n      break;\n    case 'IM':\n      // Replace image with '[icon] Image'.\n      el = React.Fragment;\n      values = [<i key=\"im\" className=\"material-icons\">photo</i>, this.formatMessage(messages.drafty_image)];\n      break;\n    case 'BN':\n      el = 'span';\n      attr.className = 'flat-button faux';\n      break;\n    case 'FM':\n      el = React.Fragment;\n      values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n        this.formatMessage(messages.drafty_form)].concat(' ', values || []);\n      break;\n    case 'RW':\n      el = React.Fragment;\n      break;\n    case 'EX':\n      if (data) {\n        if (data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        // Clear payload.\n        delete data.val;\n        delete data.ref;\n      }\n      el = React.Fragment;\n      values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, this.formatMessage(messages.drafty_attachment)];\n      break;\n    default:\n      if (el == '_UNKN') {\n        el = React.Fragment;\n        values = [<i key=\"unkn\" className=\"material-icons\">extension</i>, ' '].concat(values || []);\n      }\n      break;\n  }\n  if (!el) {\n    return values;\n  }\n  return React.createElement(el, attr, values);\n};\n\n// Converts Drafty object into a quoted reply. 'this' is set by the caller.\nfunction inlineImageAttr(attr, data) {\n  attr.style = {\n    width: IMAGE_THUMBNAIL_DIM + 'px',\n    height: IMAGE_THUMBNAIL_DIM + 'px',\n    maxWidth: IMAGE_THUMBNAIL_DIM + 'px',\n    maxHeight: IMAGE_THUMBNAIL_DIM + 'px',\n  }\n  attr.className = 'inline-image';\n  attr.alt = this.formatMessage(messages.drafty_image);\n  if (!data) {\n    attr.src = 'img/broken_image.png';\n  }\n  attr.title = attr.alt;\n  return attr;\n}\n\n// Displays a portion of Drafty within 'QQ' quotes. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onQuoteClick: this.handleQuoteClick (optional)\nexport function quoteFormatter(style, data, values, key) {\n  if (['BR', 'EX', 'IM', 'MN', 'QQ'].includes(style)) {\n    let el = Drafty.tagName(style);\n    let attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch(style) {\n      case 'IM':\n        attr = inlineImageAttr.call(this, attr, data);\n        values = [React.createElement('img', attr, null), ' ', attr.alt];\n        el = React.Fragment;\n        // Fragment attributes.\n        attr = {key: key};\n        break;\n      case 'MN':\n        el = 'span';\n        attr.className = 'mention'\n        if (data) {\n          attr.className += ' ' + idToColorClass(data.val, false, true);\n        }\n        break;\n      case 'QQ':\n        attr.className = 'reply-quote';\n        attr.onClick = this.onQuoteClick;\n        break;\n      case 'EX':\n        let fname;\n        if (data) {\n          if (data.mime == 'application/json') {\n            // Ignore JSON attachments: they are form response payloads.\n            return null;\n          }\n          fname = data.name;\n          // Clear payload.\n          delete data.val;\n          delete data.ref;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>,\n          shortenFileName(fname, 16) || this.formatMessage(messages.drafty_attachment)];\n        break;\n    }\n    return React.createElement(el, attr, values);\n  }\n  return previewFormatter.call(this, style, data, values, key);\n}\n\n// Create image thumbnail suitable for inclusion in a quote.\nfunction quoteImage(data) {\n  let promise;\n  // Get the blob from the image data.\n  if (data.val) {\n    const blob = base64ToBlob(data.val, data.mime);\n    promise = blob ? Promise.resolve(blob) : Promise.reject(new Error(\"Invalid image\"));\n  } else {\n    promise = fetch(this.authorizeURL(sanitizeImageUrl(data.ref))).then(evt => {\n      if (evt.ok) {\n        return evt.blob();\n      } else {\n        throw new Error(`Image fetch unsuccessful: ${evt.status} ${evt.statusText}`);\n      }\n    });\n  }\n\n  // Scale the blob.\n  return promise\n    .then(blob => {\n      // Cut the square from the center of the image and shrink it.\n      return imageScaled(blob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, true)\n    }).then(scaled => {\n      data.mime = scaled.mime;\n      data.size = scaled.blob.size;\n      data.width = scaled.width;\n      data.height = scaled.height;\n      delete data.ref;\n      // Keeping the original file name, if provided: ex.data.name;\n\n      data.src = URL.createObjectURL(scaled.blob);\n      return blobToBase64(scaled.blob);\n    }).then(b64 => {\n      data.val = b64.bits;\n      return data;\n    }).catch(err => {\n      delete data.val;\n      delete data.src;\n      data.width = IMAGE_THUMBNAIL_DIM;\n      data.height = IMAGE_THUMBNAIL_DIM;\n      // Rethrow.\n      throw err;\n    });\n}\n\n// Create a preview of a reply.\nexport function replyFormatter(style, data, values, key) {\n  if (style != 'IM') {\n    return quoteFormatter.call(this, style, data, values, key);\n  }\n  const attr = inlineImageAttr.call(this, {key: key}, data);\n  attr.whenDone = cancelablePromise(quoteImage.call(this, data));\n  values = [React.createElement(LazyImage, attr, null), ' ', attr.alt];\n  return React.createElement(React.Fragment, {key: key}, values);\n}\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { previewFormatter } from '../lib/formatters.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.isVerified) {\n      icon_badges.push({icon: 'verified', color: 'verified-color'});\n    }\n    if (this.props.isStaff) {\n      icon_badges.push({icon: 'staff', color: 'staff-color'});\n    }\n    if (this.props.isDangerous) {\n      icon_badges.push({icon: 'dangerous', color: 'danger-color'});\n    }\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        Drafty.isValid(this.props.preview) ?\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, previewFormatter,\n          {formatMessage: this.props.intl.formatMessage})) :\n        <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n          <FormattedMessage id=\"invalid_content\"\n            defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i>\n        </>\n      ) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            tinode={this.props.tinode}\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <ContactBadges badges={icon_badges} /><UnreadBadge count={this.props.unread} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            this.props.small ? null : <div className=\"contact-comment\">{marker}<span>{subtitle || '\\u00A0'}</span></div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              tinode={this.props.tinode}\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              isVerified={c.trusted && c.trusted.verified}\n              isStaff={c.trusted && c.trusted.staff}\n              isDangerous={c.trusted && c.trusted.danger}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Forward Menu: message forwarding popup/dropdown menu.\nimport React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from './contact-list.jsx';\nimport SearchContacts from './search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { REM_SIZE } from '../config.js';\n\nexport default class ForwardMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n\n    this.props.onInitFind();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (this.selfRef.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    // Not forwarding the message.\n    this.props.hide(false);\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      // Not forwarding the message.\n      this.props.hide(false);\n    }\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n  }\n\n  handleContactSelected(uid) {\n    this.props.onCreateTopic(uid);\n    this.props.hide(true);\n  }\n\n  render() {\n    // Ensure that menu is inside the app-container.\n    const hSize = 20 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + this.props.contacts.length * 3);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const style = {\n      left: left + 'px',\n      top: top + 'px',\n      maxWidth: hSize + 'px'\n    };\n\n    return (\n      <div className=\"forward-menu\" style={style} ref={this.selfRef}>\n        <div className=\"flex-column\">\n          <SearchContacts\n            onSearchContacts={this.handleSearchContacts} />\n          <ContactList\n            tinode={this.props.tinode}\n            contacts={this.props.searchResults}\n            myUserId={this.props.myUserId}\n            emptyListMessage={null}\n            showOnline={false}\n            showUnread={false}\n            showContextMenu={false}\n            onTopicSelected={this.handleContactSelected} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    const className = 'load-spinner-box' + (this.props.large ? ' large' : '')\n      + (this.props.clear ? ' clear' : '') + (this.props.centered ? ' centered' : '');\n    return (this.props.show ?\n      <div className={className}><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport LoadSpinner from './load-spinner.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nimport { AVATAR_SIZE } from '../config.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      source: props.avatar\n    };\n\n    this.handleFileReceived = this.handleFileReceived.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({source: this.props.avatar});\n    }\n  }\n\n  handleFileReceived(e) {\n    const image = e.target.files[0];\n    this.props.onImageUpdated(image.type, URL.createObjectURL(image), image.name);\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.source ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageUpdated();}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.source ?\n          <img src={this.props.tinode.authorizeURL(sanitizeImageUrl(this.state.source))} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                tinode={this.props.tinode}\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileReceived} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n        <LoadSpinner show={this.props.uploading} large={true} clear={true} centered={true} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst icon_mapping = {'staff': 'verified_user'};\n\nconst messages = defineMessages({\n  badge_verified: {\n    id: 'badge_verified',\n    defaultMessage: 'Verified/official',\n    description: 'Explanation of a verified account or topic badge'\n  },\n  badge_staff: {\n    id: 'badge_staff',\n    defaultMessage: 'Staff-managed',\n    description: 'Explanation of a staff-managed account or topic badge'\n  },\n  badge_danger: {\n    id: 'badge_danger',\n    defaultMessage: 'Untrustworthy',\n    description: 'Suspicious or untrustworthy account or topic badge'\n  },\n});\n\n\n/* Trusted badges with labels: verified, staff, danger */\nclass BadgeList extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let badges = null;\n    if (this.props.trustedBadges && this.props.trustedBadges.length > 0) {\n      badges = [];\n      this.props.trustedBadges.map((b) => {\n        const comment = formatMessage(messages['badge_' + b]);\n        const style = 'material-icons ' + b + '-color';\n        badges.push(<div className=\"trusted-badge\" key={b}><i className={style}>{icon_mapping[b] || b}</i> {comment}</div>);\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n\nexport default injectIntl(BadgeList);\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked === true ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n        this.props.checked === false ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i> :\n          <i className=\"material-icons lt-blue\">indeterminate_check_box</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          tinode={this.props.tinode}\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    const autoFocus = !(this.props.tabIndex > 0);\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          tabIndex={this.props.tabIndex}\n          autoFocus={autoFocus} />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            tinode={this.props.tinode}\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          tinode={this.props.tinode}\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    const idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    const mode = (this.state.mode || 'N').split('').sort().join('');\n    const before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box small\"><Contact\n            tinode={this.props.tinode}\n            item={this.props.item}\n            title={this.props.userTitle}\n            small={true}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Image zoom and crop widget.\n\nimport React from 'react';\n\nconst DEFAULT_MAX_ZOOM = 2.5;\n\nexport default class Cropper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Coordinates of the top left corner of the image in container coordinates.\n      panX: 0,\n      panY: 0,\n      // Origin of the zoom in image coordinates.\n      originX: 0,\n      originY: 0,\n      // Zoom scale.\n      zoom: 1,\n      // Zoom min and max.\n      minZoom: 0,\n      maxZoom: DEFAULT_MAX_ZOOM,\n    };\n\n    // References to DOM elements for hooking up events and getting screen dimensions.\n    // The transparent element which captures mouse moves (moves with the image).\n    this.overlay = React.createRef();\n    // The image cutout window or view port (static).\n    this.cutout = React.createRef();\n    // Scaled and translated image preview.\n    this.preview = React.createRef();\n    // The main container (static).\n    this.boundingBox = React.createRef();\n\n    // The original image width and height before any scaling.\n    this.imageWidth = 0;\n    this.imageHeight = 0;\n\n    // Mouse position when dragging.\n    this.mouseX = 0\n    this.mouseY = 0;\n    // Length of the previous mouse move when dragging.\n    this.prevDistance = 0;\n\n    // Bounding rectangles of static elements.\n    this.cutoutRect = {};\n    this.bBoxRect = {};\n    // Center of the bounding box.\n    this.originX = 0;\n    this.originY = 0;\n\n    this.initScaling = this.initScaling.bind(this);\n    this.onZoom = this.onZoom.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseTouch = this.mouseTouch.bind(this);\n    this.positionAll = this.positionAll.bind(this);\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.overlay.current.addEventListener('mousedown', this.mouseDown, { passive: true });\n    this.overlay.current.addEventListener('touchstart', this.mouseDown, { passive: true });\n\n    // The rectangle position is in viewport coordinates.\n    this.bBoxRect = this.boundingBox.current.getBoundingClientRect();\n    // Center of the bounding box in container coordinates.\n    this.originX = this.bBoxRect.width / 2;\n    this.originY = this.bBoxRect.height / 2;\n\n    // The rectangle position is in viewport coordinates.\n    this.cutoutRect = this.cutout.current.getBoundingClientRect();\n  }\n\n  componentWillUnmount() {\n    this.overlay.current.removeEventListener('mousedown', this.mouseDown);\n    this.overlay.current.removeEventListener('touchstart', this.mouseDown);\n  }\n\n  // Position all elements.\n  positionAll(panX, panY, zoom) {\n    // Zoom origin in image preview coordinates.\n    this.setState({\n      panX: panX,\n      panY: panY,\n      zoom: zoom,\n      originX: this.originX - panX,\n      originY: this.originY - panY,\n    });\n\n    // Pass cut out coordinates to caller.\n    const left = (this.originX - panX) * zoom - this.originX;\n    const top = (this.originY - panY) * zoom - this.originY;\n    this.props.onChange(\n      (left + this.cutoutRect.left - this.bBoxRect.left) / zoom,\n      (top + this.cutoutRect.top - this.bBoxRect.top) / zoom,\n      this.cutoutRect.width / zoom,\n      this.cutoutRect.height / zoom,\n      zoom);\n  }\n\n  // Check if new location is within the limits.\n  static checkBound(currPan, img, cutout, delta) {\n    let nextDiff = Math.min(0, cutout[0] - img[0] - delta, img[1] - cutout[1] + delta);\n    if (nextDiff == 0) {\n      // Cutout is completely within the image.\n      currPan += delta;\n    } else if (Math.min(0, cutout[0] - img[0], img[1] - cutout[1]) < nextDiff) {\n      // Cutout is outside of the range but closer to the bound.\n      currPan += delta;\n    }\n    return currPan;\n  }\n\n  initScaling() {\n    // Initialize components.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    this.imageWidth = imgRect.width;\n    this.imageHeight = imgRect.height;\n\n    // Set zoom slider's min and max values. Make sure the scaled image cannot be smaller than the cutout.\n    const minZoom = Math.max(this.cutoutRect.width / imgRect.width, this.cutoutRect.height / imgRect.height);\n    this.setState({\n      minZoom: minZoom,\n      maxZoom: Math.max(DEFAULT_MAX_ZOOM, minZoom + 1)\n    });\n\n    // Initial zoom level fills the bounding box at the smallest image dimension and overflows the largest, i.e. \"fill\" not \"fit\".\n    const zoom = Math.max(this.bBoxRect.width / imgRect.width, this.bBoxRect.height / imgRect.height);\n    // Converting from viewport coordinates to container, then panning.\n    const panX = this.cutoutRect.left - this.bBoxRect.left -\n      (imgRect.width - this.cutoutRect.width) / 2;\n    const panY = this.cutoutRect.top - this.bBoxRect.top -\n      (imgRect.height - this.cutoutRect.height) / 2;\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  onZoom(e) {\n    this.handleZoom(e.target.value);\n  }\n\n  handleZoom(zoom) {\n    let panX = this.state.panX;\n    let panY = this.state.panY;\n\n    // Ensure that the image at the new zoom is not outside of the cutout boundaries.\n    // Calculate image coordinates at the new zoom.\n    const imgLeft = this.originX - (this.originX - panX) * zoom;\n    const imgRight = imgLeft + this.imageWidth * zoom;\n    // Cutout in the same coordinates as the image.\n    const coLeft = this.cutoutRect.left - this.bBoxRect.left;\n    const coRight = coLeft + this.cutoutRect.width;\n    if (coLeft < imgLeft) {\n      panX -= imgLeft - coLeft;\n    } else if (coRight > imgRight) {\n      panX += coRight - imgRight;\n    }\n    const imgTop = this.originY - (this.originY - panY) * zoom;\n    const imgBottom = imgTop + this.imageHeight * zoom;\n    const coTop = this.cutoutRect.top - this.bBoxRect.top;\n    const coBottom = coTop + this.cutoutRect.height;\n    if (coTop < imgTop) {\n      panY -= imgTop - coTop;\n    } else if (coBottom > imgBottom) {\n      panY += coBottom - imgBottom;\n    }\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  mouseDown(e) {\n    if (e.touches) {\n      this.mouseX = e.touches[0].pageX;\n      this.mouseY = e.touches[0].pageY;\n    } else {\n      this.mouseX = e.pageX;\n      this.mouseY = e.pageY;\n    }\n\n    window.addEventListener('mousemove', this.mouseMove, { passive: false });\n    window.addEventListener('touchmove', this.mouseTouch, { passive: false });\n    window.addEventListener('mouseup', this.mouseUp, { passive: true });\n    window.addEventListener('touchend', this.mouseUp, { passive: true });\n    // Disable text selection in the entire document.\n    document.body.style['userSelect'] = 'none';\n  }\n\n  // Perform image panning.\n  translate(pageX, pageY) {\n    const dX = pageX - this.mouseX;\n    const dY = pageY - this.mouseY;\n\n    this.mouseX = pageX;\n    this.mouseY = pageY;\n\n    // Make sure the image is within the cutout window.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    // Check if the new position is within the boundaries, and if not if it's closer to them.\n    let panX = Cropper.checkBound(this.state.panX, [imgRect.left, imgRect.right],\n      [this.cutoutRect.left, this.cutoutRect.right], dX);\n    let panY = Cropper.checkBound(this.state.panY, [imgRect.top, imgRect.bottom],\n      [this.cutoutRect.top, this.cutoutRect.bottom], dY);\n\n    this.positionAll(panX, panY, this.state.zoom);\n  }\n\n  // Image panning.\n  mouseMove(e) {\n    e.preventDefault();\n    this.translate(e.pageX, e.pageY);\n  }\n\n  mouseTouch(e) {\n    e.preventDefault();\n\n    if (e.touches.length == 1) {\n      this.translate(e.touches[0].pageX, e.touches[0].pageY);\n      return;\n    }\n\n    // Image zooming by pinching.\n    const [touch0, touch1] = e.touches;\n    const distance = Math.sqrt((touch0.pageX - touch1.pageX) * (touch0.pageX - touch1.pageX) +\n      (touch0.pageY - touch1.pageY) * (touch0.pageY - touch1.pageY));\n\n    if (!this.prevDistance) {\n        this.prevDistance = distance / this.state.zoom;\n    }\n\n    let scale = (distance / this.prevDistance);\n    this.handleZoom(Math.max(this.minZoom, Math.min(this.maxZoom, scale)));\n  }\n\n  mouseUp(e) {\n    window.removeEventListener('mousemove', this.mouseMove);\n    window.removeEventListener('touchmove', this.mouseTouch);\n    window.removeEventListener('mouseup', this.mouseUp);\n    window.removeEventListener('touchend', this.mouseUp);\n    // Re-enable text selection.\n    document.body.style['userSelect'] = '';\n\n    this.positionAll(this.state.panX, this.state.panY, this.state.zoom);\n  }\n\n  render() {\n    // transform3d: position and scale.\n    const t3d = `translate3d(${this.state.panX}px, ${this.state.panY}px, 0) scale(${this.state.zoom})`;\n    // transformOrigin: zoom origin.\n    const orig = `${this.state.originX}px ${this.state.originY}px`;\n\n    // Overlay position and size are exactly equal to the position and size of the transformed image\n    // except it uses different coordinates.\n    const overlay = {\n      top: `${this.originY - this.state.originY * this.state.zoom}px`,\n      left: `${this.originX - this.state.originX * this.state.zoom}px`,\n      width: `${this.imageWidth * this.state.zoom}px`,\n      height: `${this.imageHeight * this.state.zoom}px`\n    };\n    return (\n      <div className=\"cropper\">\n        <div className=\"bounding-box\" ref={this.boundingBox}>\n          <img src={this.props.source} className=\"preview\" alt=\"\"\n            style={{transform: t3d, transformOrigin: orig}} ref={this.preview} onLoad={this.initScaling} />\n          <div className=\"cutout circle\" ref={this.cutout} />\n          <div className=\"overlay\" style={overlay} ref={this.overlay} />\n        </div>\n        <div className=\"zoom-wrapper\">\n          <input type=\"range\" className=\"zoomer\"\n            step=\"0.001\" min={this.state.minZoom} max={this.state.maxZoom} value={this.state.zoom} onChange={this.onZoom} />\n        </div>\n      </div>\n    );\n  }\n}\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Cropper from './cropper.jsx';\nimport { imageCrop } from '../lib/blob-helpers.js';\n\nexport default class AvatarCrop extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n      scale: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Cut out in image coordinates and desired scale factor.\n  handleChange(left, top, width, height, scale) {\n    this.setState({\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      scale: scale\n    });\n  }\n\n  handleSubmit() {\n    imageCrop(this.props.mime, this.props.avatar,\n      this.state.left, this.state.top, this.state.width, this.state.height,\n      this.state.scale)\n      .then(img => {\n        this.props.onSubmit(img.mime, img.blob, img.width, img.height);\n      })\n      .catch(err => {\n        this.props.onError(err);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <Cropper\n            source={this.props.avatar}\n            onChange={this.handleChange} />\n        </div>\n        <div className=\"dialog-buttons\">\n          {this.props.onCancel ?\n            <button className=\"secondary\" onClick={this.props.onCancel}>\n              <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n            </button>\n            : null}\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value || ''});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n   handleStartEditing() {\n    if (!this.props.readOnly) {\n      this.setState({active: true}, () => {\n        if (this.selfRef.current) {\n          this.selfRef.current.focus();\n        }\n      });\n    }\n  }\n\n  handleEditingFinished(event) {\n    const value = this.state.value.trim();\n    if (this.props.required && (!event.target.checkValidity() || !value)) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (!this.state.active) {\n      let spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      let spanClass = 'in-place-edit' + (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (!this.props.multiline || this.props.multiline == 1) {\n        spanClass += ' short';\n      }\n\n      return (<span className={spanClass} onClick={this.handleStartEditing}>\n        <span>{spanText}</span>\n      </span>);\n    }\n\n    let element;\n    const attr = {};\n    if (this.props.type == 'password') {\n      element = VisiblePassword;\n      attr.onFinished = this.handlePasswordFinished;\n    } else {\n      if (this.props.multiline > 1) {\n        element = 'textarea';\n        attr.rows = this.props.multiline;\n        attr.className = 'inplace-edit';\n      } else {\n        element = 'input';\n        attr.type = this.props.type || 'text';\n      }\n      attr.value = this.state.value;\n      attr.onChange = this.handeTextChange;\n      attr.onKeyDown = this.handleKeyDown;\n      attr.onBlur = this.handleEditingFinished;\n    }\n    attr.placeholder = this.props.placeholder;\n    attr.required = this.props.required ? 'required' : '';\n    attr.autoComplete = this.props.autoComplete;\n    attr.autoFocus = true;\n    attr.ref = this.selfRef;\n\n    return React.createElement(element, attr, null);\n  }\n};\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags || [],\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const tags = nextProps.tags || [];\n    if (!arrayEqual(tags, prevState.tags) && !prevState.activated) {\n      return {tags: tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags || []});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags || []});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              tinode={this.props.tinode}\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              tabIndex={this.props.tabIndex}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// Widget for editing topic description.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarCrop from './avatar-crop.jsx';\nimport AvatarUpload from './avatar-upload.jsx';\nimport InPlaceEdit from './in-place-edit.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { AVATAR_SIZE, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE,\n  MAX_INBAND_ATTACHMENT_SIZE, MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nexport default class TopicDescEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: Tinode.isMeTopicName(this.props.topic),\n      owner: acs && acs.isOwner(),\n      fullName: topic.public ? topic.public.fn : undefined,\n      private: topic.private ? topic.private.comment : null,\n      description: topic.public ? topic.public.note : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      tags: topic.tags() || [],\n      newAvatar: null,\n      newAvatarMime: null\n    };\n\n    this.previousOnTags = null;\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageUpdated = this.handleImageUpdated.bind(this);\n    this.handleAvatarCropped = this.handleAvatarCropped.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleDescriptionUpdate = this.handleDescriptionUpdate.bind(this);\n    this.uploadAvatar = this.uploadAvatar.bind(this);\n    this.handleAvatarCropCancel = this.handleAvatarCropCancel.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    this.previousOnTags = topic.onTagsUpdated;\n    topic.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onTagsUpdated = this.previousOnTags;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn && this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(fn, null));\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onUpdateTopicDesc(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleDescriptionUpdate(desc) {\n    desc = desc.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (desc) {\n      this.setState({description: desc});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, null, null, desc));\n    }\n  }\n\n  // AvatarUpload widget has changed the avatar: received a new file or deleted the avatar.\n  handleImageUpdated(mime, img) {\n    // This will show the AvatarCropView is img is not null.\n    this.setState({newAvatar: img, newAvatarMime: mime});\n    if (!img) {\n      // Deleting the avatar.\n      this.setState({avatar: null});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, Tinode.DEL_CHAR));\n    }\n  }\n\n  // AvatarCropView calls this method when the user has cropped the image.\n  handleAvatarCropped(mime, blob, width, height) {\n    const url = blob ? URL.createObjectURL(blob) : null;\n    this.setState({avatar: url, newAvatar: null, newAvatarMime: null});\n    if (blob) {\n      this.uploadAvatar(mime, blob, width, height);\n    }\n  }\n\n  // Utility method for converting cropped avatar blob to bytes for sending inband or\n  // for uploading it to the server out of band.\n  uploadAvatar(mime, blob, width, height) {\n    const readyToUpload = (image) => {\n      let {mime, blob, width, height} = image;\n      if (blob.size > MAX_AVATAR_BYTES) {\n        // Too large to send inband - uploading out of band and sending as a link.\n        const uploader = this.props.tinode.getLargeFileHelper();\n\n        this.setState({uploading: true});\n        uploader.upload(blob)\n          .then((url) => {\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, url));\n          })\n          .catch((err) => {\n            this.props.onError(err, 'err');\n          })\n          .finally(() => {\n            this.setState({uploading: false});\n          });\n      } else {\n        this.setState({uploading: true});\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob)\n          .then(b64 => {\n            const du = makeImageUrl({data: b64.bits, type: mime});\n            this.setState({source: du});\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, du));\n            this.setState({uploading: false});\n          });\n      }\n    };\n\n    if (width > AVATAR_SIZE || height > AVATAR_SIZE || width != height) {\n      // Avatar is not square or too large even after cropping. Shrink it and make square.\n      imageScaled(blob, AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true)\n        .then(scaled => readyToUpload)\n        .catch(err => {\n          this.props.onError(err, 'err');\n        });\n    } else {\n      readyToUpload({mime: mime, blob: blob, width: width, height: height});\n    }\n  }\n\n  handleAvatarCropCancel(img) {\n    this.setState({newAvatar: null, newAvatarMime: null});\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    if (this.state.newAvatar) {\n      return (\n        <AvatarCrop\n          avatar={this.state.newAvatar}\n          mime={this.state.newAvatarMime}\n          onSubmit={this.handleAvatarCropped}\n          onCancel={this.handleAvatarCropCancel}\n          onError={this.props.onError} />\n      );\n    }\n\n    const editable = this.state.isMe || this.state.owner;\n\n    return (\n      <>\n      <div className=\"panel-form-column\">\n        <center>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            readOnly={!editable}\n            uid={this.props.topic}\n            title={this.state.fullName}\n            onImageUpdated={this.handleImageUpdated}\n            onError={this.props.onError} />\n        </center>\n        {this.state.isMe ?\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n                description=\"Input placeholder for person's full name\">{\n                (full_name_placeholder) => <InPlaceEdit\n                  placeholder={full_name_placeholder}\n                  value={this.state.fullName}\n                  required={true}\n                  onFinished={this.handleFullNameUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n        :\n          <>\n            <div className=\"group\">\n              <div><label className=\"small\">\n                <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                  description=\"Label for editing topic name\" />\n              </label></div>\n              <div>\n                <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n                  description=\"Prompt for entering topic name\">{\n                  (group_name_placeholder) => <InPlaceEdit\n                    placeholder={group_name_placeholder}\n                    readOnly={!editable}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                    description=\"Label for editing 'private'\" />\n                </label>\n              </div>\n              <div>\n                <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n                  description=\"Placeholder for editing 'private'\">{\n                  (private_placeholder) => <InPlaceEdit\n                    placeholder={private_placeholder}\n                    value={this.state.private}\n                    onFinished={this.handlePrivateUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n          </>\n        }\n        {editable || this.state.description ?\n          <div className=\"group\">\n            <div><label className=\"small\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label></div>\n            <div>\n              <FormattedMessage id=\"description_editing_placeholder\"\n                defaultMessage=\"Description (optional)\"\n                description=\"Placeholder for editing topic description\">{\n                (private_placeholder) => <InPlaceEdit\n                  placeholder={private_placeholder}\n                  readOnly={!editable}\n                  value={this.state.description}\n                  multiline={2}\n                  onFinished={this.handleDescriptionUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          : null\n        }\n      </div>\n      {editable ?\n        <>\n          <div className=\"hr\" />\n          <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n            description=\"Section title for TagManager\">{\n              (title_tag_manager) => <TagManager\n                tinode={this.props.tinode}\n                title={title_tag_manager}\n                activated={false}\n                tags={this.state.tags}\n                onSubmit={this.handleTagsUpdated} />\n          }</FormattedMessage>\n        </>\n        : null\n      }\n      </>\n    );\n  }\n};\n","// View for editing topic (including 'me' topic) parameters.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport TopicDescEdit from '../widgets/topic-desc-edit.jsx';\n\nimport { arrayEqual, asEmail, asPhone } from '../lib/utils.js';\n\nexport default class TopicCommon extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: this.props.topic == 'me',\n      owner: acs && acs.isOwner(),\n      credentials: (topic.getCredentials ? topic.getCredentials() : null) || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      tags: []\n    };\n\n    this.previousTagsUpdated = undefined;\n\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    topic.onCredsUpdated = this.tnCredsUpdated;\n\n    if (topic.onTagsUpdated != this.onTagsUpdated) {\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onCredsUpdated = undefined;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    const value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  // Server informs that the tags have been updated.\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated(tags);\n    }\n  }\n\n  // Request server to change tags.\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdateRequest(this.props.topic, tags);\n    }\n  }\n\n  render() {\n    const credentials = [];\n    if (this.state.isMe) {\n      this.state.credentials.map((cred) => {\n        credentials.push(\n          <div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n            <span> {!cred.done ?\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n                <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                  description=\"Validate credentail call to action\" />\n              </a>\n            : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n              className=\"material-icons gray\">delete_outline</i></a></span>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className=\"scrollable-panel\">\n        <TopicDescEdit\n          tinode={this.props.tinode}\n          topic={this.props.topic}\n          onUpdateTopicDesc={this.props.onUpdateTopicDesc}\n          onUpdateTags={this.handleTagsUpdated}\n          onError={this.props.onError} />\n        {this.state.isMe ?\n          <>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n                description=\"Label for user contacts\" />\n              </label>\n              <div className=\"quoted\">\n                {credentials}\n                {this.state.addCredActive ?\n                  <input type=\"text\" value={this.state.value}\n                    className={this.state.addCredInvalid ? 'invalid' : null}\n                    placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                    onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n                  : null}\n                <div>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                    <i className=\"material-icons\">add</i>\n                    <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n                  </a></div>\n              </div>\n            </div>\n          </>\n        : null\n      }\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from './in-place-edit.jsx';\n\nimport { NO_ACCESS_MODE } from '../config.js';\n\nconst messages = defineMessages({\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  topic_delete: {\n    id: 'topic_delete',\n    defaultMessage: 'Delete Conversation',\n    description: 'Alert title when deleting the topic.'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n});\n\nclass TopicSecurity extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleDeleteTopic = this.handleDeleteTopic.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n  }\n\n  handleDeleteTopic(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.topic_delete), // title\n      formatMessage(messages.topic_delete_warning), // content\n      (() => { this.props.onDeleteTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.props.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          {!this.props.channel ?\n            <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n              <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages)\n              }\n            </a>\n            :\n            null\n          }\n          {this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleDeleteTopic}>\n              <i className=\"material-icons\">delete</i> &nbsp;{formatMessage(messages.topic_delete)}\n            </a>\n            :\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n            </a>\n          }\n          {!this.props.groupTopic ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n              <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n            </a>\n            :\n            null\n          }\n          {!this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n              <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n            </a>\n            :\n            null\n          }\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          {this.props.groupTopic ?\n            <>\n              <div className=\"group\">\n                <label>\n                  <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                    description=\"Label for current user permissions\" />\n                </label> <tt className=\"clickable\"\n                  onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                  {this.props.access}\n                </tt>\n              </div>\n              <div className=\"group\">\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                    description=\"Label for default access mode\" />\n                  </label>\n                </div>\n                <div className=\"quoted\">\n                  <div>Auth: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('auth')}}>{this.props.auth}</tt>\n                  </div>\n                  <div>Anon: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('anon')}}>{this.props.anon}</tt>\n                  </div>\n                </div>\n              </div>\n            </>\n            :\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                    description=\"Section title\" />\n                </label>\n              </div>\n              <div className=\"quoted\">\n                <div>\n                  <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                    description=\"Label for the current user\" /> <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                    {this.props.access}\n                  </tt>\n                </div>\n                <div>{this.props.fullName ? this.props.fullName : formatMessage(messages.other_user)}:\n                  &nbsp;<tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('given')}}>\n                    {this.props.modeGiven2}\n                  </tt>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TopicSecurity);\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\nimport TopicSecurity from '../widgets/topic-security.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'panel_title_info',\n    description: 'Title for InfoView',\n    defaultMessage: 'Info'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  members: {\n    id: 'panel_title_members',\n    description: 'Title for managing group members view.',\n    defaultMessage: 'Members'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  perm_want: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  perm_given: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  perm_auth: {\n    id: 'permissions_authenticated',\n    defaultMessage: 'Authenticated',\n    description: 'Title for editing default authenticated permissions'\n  },\n  perm_anon: {\n    id: 'permissions_anonymous',\n    defaultMessage: 'Anonymous',\n    description: 'Title for editing default anonymous permissions'\n  },\n  perm_user: {\n    id: 'permissions_user',\n    defaultMessage: 'User\\'s Permissions',\n    description: 'Title for editing user\\'s permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n});\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      description: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      trustedBadges: [],\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.resetTags = this.resetTags.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n    this.handleBackNavigate = this.handleBackNavigate.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n      this.resetTags(topic);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    const badges = [];\n    if (topic.trusted) {\n      for (const [key, val] of Object.entries(topic.trusted)) {\n        if (val) {\n          badges.push(key);\n        }\n      }\n    }\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: _clip(topic.public ? topic.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(topic.public ? topic.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      trustedBadges: badges,\n      private: _clip(topic.private ? topic.private.comment : null, MAX_TITLE_LENGTH),\n      archived: topic.isArchived(),\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType() || topic.chan,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n  }\n\n  resetTags(topic) {\n    if (topic.getType() != 'grp') {\n      return;\n    }\n\n    const acs = topic.getAccessMode();\n    if (acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handleUnarchive(ignored, ignored2) {\n    this.props.onTopicUnArchive(this.props.topic);\n  }\n\n  handlePermissionsChanged(which, perm) {\n    switch (which) {\n      case 'auth':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.handleBackNavigate();\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.perm_want);\n        titleCompare = formatMessage(messages.perm_given);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.error(\"Unknown permission editing mode '\" + which + \"'\");\n        return;\n    }\n    this.setState({\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n    this.props.onNavigate(`perm/${which}`);\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.props.onNavigate('members');\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.props.onNavigate('info');\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleBackNavigate() {\n    const args = (this.props.panel || 'info').split('/');\n    if (args[0] == 'info') {\n      this.props.onNavigate(null);\n    } else if (args[0] == 'perm') {\n      if (args[1] == 'user') {\n        this.props.onNavigate('info');\n      } else {\n        this.props.onNavigate('security');\n      }\n    } else {\n      this.props.onNavigate('info');\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const isMe = this.props.tinode.isMe(params.topicName);\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: () => {\n        this.handleLaunchPermissionsEditor(isMe ? 'want' : 'user', params.topicName);\n      }}\n    ];\n    if (!isMe) {\n      menuItems.push('member_delete');\n    }\n    menuItems.push(user.acs.isMuted() ? 'member_unmute' : 'member_mute');\n    if (!isMe) {\n      menuItems.push(user.acs.isJoiner() ? 'member_block' : 'member_unblock');\n    }\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const args = (this.props.panel || 'info').split('/');\n    const view = args[0];\n    args.shift();\n\n    const {formatMessage} = this.props.intl;\n    const panelTitle = formatMessage((view == 'perm' ? messages['perm_' + args[0]] : messages[view])\n      || messages['info']);\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">{panelTitle}</div>\n          <div>\n            <MenuCancel onCancel={this.handleBackNavigate} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {view == 'members' ?\n          <GroupManager\n            tinode={this.props.tinode}\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleBackNavigate}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        view == 'perm' && args.length > 0 ?\n          <PermissionsEditor\n            tinode={this.props.tinode}\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={(mode) => this.handlePermissionsChanged(args[0], mode)}\n            onCancel={this.handleBackNavigate} />\n          :\n        view == 'general' ?\n          <TopicCommon\n            tinode={this.props.tinode}\n            topic={this.props.topic}\n            onCredAdd={this.props.onCredAdd}\n            onTopicTagsUpdateRequest={this.props.onTopicTagsUpdateRequest}\n            onCredConfirm={this.props.onCredConfirm}\n            onCredDelete={this.props.onCredDelete}\n            onUpdateTopicDesc={this.props.onTopicDescUpdateRequest}\n            onError={this.props.onError} />\n          :\n        view == 'security' ?\n          <TopicSecurity\n            topic={this.props.topic}\n            owner={this.state.owner}\n            admin={this.state.admin}\n            sharer={this.state.sharer}\n            deleter={this.state.deleter}\n            muted={this.state.muted}\n\n            groupTopic={this.state.groupTopic}\n            channel={this.state.channel}\n            access={this.state.access}\n            modeGiven={this.state.modeGiven}\n            modeWant={this.state.modeWant}\n            modeGiven2={this.state.modeGiven2}\n            modeWant2={this.state.modeWant2}\n            auth={this.state.auth}\n            anon={this.state.anon}\n\n            onShowAlert={this.props.onShowAlert}\n            onDeleteMessages={this.props.onDeleteMessages}\n            onLeaveTopic={this.props.onLeaveTopic}\n            onBlockTopic={this.props.onBlockTopic}\n            onReportTopic={this.props.onReportTopic}\n            onLaunchPermissionsEditor={this.handleLaunchPermissionsEditor}\n            onNavigate={this.props.onNavigate} />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-column\">\n              <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n                <i className=\"material-icons\">edit</i>&nbsp;\n                <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n              </a>\n              <center>\n                <AvatarUpload\n                  tinode={this.props.tinode}\n                  avatar={this.state.avatar}\n                  readOnly={true}\n                  uid={this.props.topic}\n                  title={this.state.fullName} />\n              </center>\n              <div className=\"group\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div className=\"large ellipsized\">{this.state.fullName}\n                {this.state.channel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}</div>\n              </div>\n              {this.state.private ?\n                <div className=\"group\">\n                  <div><label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label></div>\n                  <div className=\"large ellipsized\">{this.state.private}</div>\n                </div>\n                : null\n              }\n              <div className=\"group\">\n                <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                  description=\"Label for user address (ID)\" /></label>&nbsp;\n                <tt>{this.state.address}</tt>\n              </div>\n              <div className=\"group\">\n                <BadgeList trustedBadges={this.state.trustedBadges} />\n              </div>\n              {this.state.description ?\n                <div className=\"group\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                      description=\"Label for editing topic description\" />\n                  </label>\n                  <div>{this.state.description}</div>\n                </div> : null}\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <label>\n                <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                  description=\"Label for Muting/unmuting the topic\" />\n              </label>\n              <CheckBox name=\"P\" checked={this.state.muted} onChange={this.handleMuted} />\n            </div>\n            {this.state.archived ?\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_unarchive_topic\" defaultMessage=\"Archived:\"\n                    description=\"Label for unarchiving the topic\" />\n                </label>\n                <CheckBox name=\"archived\" checked={true} onChange={this.handleUnarchive} />\n              </div>\n              :\n              null\n            }\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n                <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n                  defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n              </a>\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-row\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                      description=\"Section title or label\" />\n                  </label>\n                </div>\n                <div className=\"panel-form-row\">\n                  <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                    <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                      defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                  </a>\n                </div>\n                <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                  description=\"Shown in place of group members\">{\n                  (no_members) => <ContactList\n                    tinode={this.props.tinode}\n                    contacts={this.state.contactList}\n                    myUserId={this.props.myUserId}\n                    emptyListMessage={no_members}\n                    topicSelected={this.state.selectedContact}\n                    showOnline={false}\n                    showUnread={false}\n                    showMode={true}\n                    noScroll={true}\n                    onTopicSelected={this.handleMemberSelected}\n                    showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                  />\n                }</FormattedMessage>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\n\nimport { fullFormatter, quoteFormatter } from '../lib/formatters.js';\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nclass BaseChatMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.formatterContext = {\n      getFormatter: (tp) => { return tp == 'QQ' ? quoteFormatter : null; },\n      formatMessage: props.intl.formatMessage.bind(props.intl),\n      viewportWidth: props.viewportWidth,\n      authorizeURL: props.tinode.authorizeURL.bind(props.tinode),\n      onImagePreview: this.handleImagePreview,\n      onFormButtonClick: this.handleFormButtonClick,\n      onQuoteClick: this.handleQuoteClick\n    };\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    if (this.props.userIsWriter &&\n        this.props.received > Tinode.MESSAGE_STATUS_FAILED &&\n        this.props.received < Tinode.MESSAGE_STATUS_DEL_RANGE) {\n      menuItems.push('menu_item_reply');\n      menuItems.push('menu_item_forward');\n    }\n    this.props.showContextMenu({\n      seq: this.props.seq,\n      content: this.props.content,\n      userFrom: this.props.userFrom,\n      userName: this.props.userName,\n      y: e.pageY,\n      x: e.pageX,\n      pickReply: this.props.pickReply\n    }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const replyToSeq = this.props.replyToSeq;\n    if (replyToSeq) {\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.isGroup && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, (att, i) => {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name}\n          uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime}\n          size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      const tree = Drafty.format(content, fullFormatter, this.formatterContext);\n      content = React.createElement(React.Fragment, null, tree);\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n        <FormattedMessage id=\"invalid_content\"\n          defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i></>\n    }\n\n    return (\n      <li ref={this.props.innerRef} className={sideClass}>\n        {this.props.isGroup && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                tinode={this.props.tinode}\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              {this.props.userName ||\n                <i><FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\" /></i>\n              }\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\nconst IntlChatMessage = injectIntl(BaseChatMessage);\nconst ChatMessage = React.forwardRef((props, ref) => <IntlChatMessage innerRef = {ref} {...props} />);\n\nexport default ChatMessage;\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\nimport { quoteFormatter, replyFormatter } from '../lib/formatters.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n\n    this.setState({quote: this.props.replyTo ?\n      Drafty.format(this.props.replyTo.content, replyFormatter, {\n        formatMessage: this.props.intl.formatMessage.bind(this.props.intl),\n        authorizeURL: this.props.tinode.authorizeURL.bind(this.props.tinode)\n      }) :\n      null});\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n\n    if (prevProps.replyTo != this.props.replyTo) {\n      this.setState({quote: this.props.replyTo ?\n        Drafty.format(this.props.replyTo.content, replyFormatter, {\n          formatMessage: this.props.intl.formatMessage.bind(this.props.intl),\n          authorizeURL: this.props.tinode.authorizeURL.bind(this.props.tinode)\n        }) :\n        null});\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.replyTo && this.props.onQuoteClick) {\n      const replyToSeq = this.props.replyTo.seq;\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n\n    return (\n      <div id=\"send-message-wrapper\">\n      {this.state.quote ?\n        <div id=\"reply-quote-preview\">\n          <div className=\"cancel\">\n            <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancelReply();}}><i className=\"material-icons gray\">close</i></a>\n          </div>\n          {this.state.quote}\n        </div>\n      :\n      null}\n\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize, shortenFileName } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.name}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n              description=\"Label for a file name\" /></b> {shortenFileName(this.props.content.name, 24) || '-'}</div>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          tinode={this.props.tinode}\n          replyTo={this.props.replyTo}\n          onCancelReply={this.props.onCancelReply}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            tinode={this.props.tinode}\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize, shortenFileName } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    const fname = shortenFileName(this.props.content.name, maxlength) || '-';\n\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.name}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{fname}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.name} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            tinode={this.props.tinode}\n            replyTo={this.props.replyTo}\n            onCancelReply={this.props.onCancelReply}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.name}>{fname}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].replace('#', '').split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        const item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlInfoPanel(hash, infopanel) {\n    const parsed = this.parseUrlHash(hash);\n    if (infopanel) {\n      parsed.params.info = infopanel;\n    } else {\n      delete parsed.params.info;\n    }\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport ContactBadges from '../widgets/contact-badges.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, IMAGE_THUMBNAIL_DIM, KEYPRESS_DELAY,\n  MESSAGES_PAGE, MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE,\n  READ_DELAY, QUOTED_REPLY_LENGTH } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, base64ToBlob, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat, letterTileColorId } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  invalid_content: {\n    id: 'invalid_content',\n    defaultMessage: 'invalid content',\n    description: 'Shown when the message is unreadable'\n  },\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.retrySend = this.retrySend.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleMessageUpdate = this.handleMessageUpdate.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.handlePickReply = this.handlePickReply.bind(this);\n    this.handleCancelReply = this.handleCancelReply.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.chatMessageRefs = {};\n    this.getOrCreateMessageRef = this.getOrCreateMessageRef.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  getOrCreateMessageRef(seqId) {\n    if (this.chatMessageRefs.hasOwnProperty(seqId)) {\n      return this.chatMessageRefs[seqId];\n    }\n    const ref = React.createRef();\n    this.chatMessageRefs[seqId] = ref;\n    return ref;\n  }\n\n  componentDidMount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messageCount != this.state.messageCount) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleMessageUpdate;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if ((this.state.topic != prevState.topic) || !prevProps.ready) {\n      this.subscribe(topic);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messageCount: 0,\n        latestClearId: -1,\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        isVerified: false,\n        isStaff: false,\n        isDangerous: false,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false,\n        reply: null\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n\n      let reply = null;\n      if (nextProps.forwardedMessage) {\n        // We are forwarding a message. Show preview.\n        const preview = nextProps.forwardedMessage.preview;\n        reply = {\n          content: preview,\n          seq: null\n        };\n      }\n\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        reply: reply\n      };\n\n      if (topic) {\n        // Topic exists.\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        Object.assign(nextState, {\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          messageCount: topic.messageCount(),\n          latestClearId: topic.maxClearId(),\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messageCount: 0,\n          latestClearId: -1,\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  subscribe(topic) {\n    if (!topic || topic.isSubscribed() || !this.props.ready) {\n      return;\n    }\n\n    // Is this a new topic?\n    const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n    // Don't request the tags. They are useless unless the user\n    // is the owner and is editing the topic.\n    let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n    if (this.state.isReader || newTopic) {\n      // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n      getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n      if (this.state.isReader) {\n        getQuery = getQuery.withLaterDel();\n      }\n      // And show \"loading\" spinner.\n      this.setState({ fetchingMessages: true });\n    }\n\n    const setQuery = newTopic ? this.props.newTopicParams : undefined;\n    topic.subscribe(getQuery.build(), setQuery)\n      .then((ctrl) => {\n        if (ctrl.code == 303) {\n          // Redirect to another topic requested.\n          HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n          return;\n        }\n        if (this.state.topic != ctrl.topic) {\n          this.setState({topic: ctrl.topic});\n        }\n        this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n        // If there are unsent messages, try sending them now.\n        topic.queuedMessages((pub) => {\n          if (!pub._sending && topic.isSubscribed()) {\n            this.retrySend(pub);\n          }\n        });\n      })\n      .catch((err) => {\n        console.error(\"Failed subscription to\", this.state.topic);\n        this.props.onError(err.message, 'err');\n        const blankState = MessagesView.getDerivedStateFromProps({}, {});\n        blankState.title = this.props.intl.formatMessage(messages.not_found);\n        this.setState(blankState);\n      });\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (this.state.fetchingMessages) {\n      return;\n    }\n\n    if (event.target.scrollTop <= 0) {\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n        this.setState({fetchingMessages: true}, () => {\n          topic.getMessagesPage(MESSAGES_PAGE)\n            .catch((err) => this.props.onError(err.message, 'err'))\n            .finally(() => this.setState({fetchingMessages: false}));\n          });\n      }\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  // The 'msg' could be false-ish if some message ranges were deleted.\n  handleMessageUpdate(msg) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (!msg) {\n      // msg could be null if one or more messages were deleted.\n      // Updating state to force redraw.\n      this.setState({latestClearId: topic.maxClearId()});\n      return;\n    }\n\n    clearTimeout(this.keyPressTimer)\n    this.setState({messageCount: topic.messageCount(), typingIndicator: false});\n\n    // Scroll to the bottom if the message is added to the end of the message list.\n    // TODO: This should be replaced by showing a \"scroll to bottom\" button.\n    if (topic.isNewMessage(msg.seq)) {\n      this.setState({scrollPosition: 0});\n    }\n\n    // Aknowledge messages except own messages. They are\n    // automatically assumed to be read and recived.\n    const status = topic.msgStatus(msg, true);\n    if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n      this.postReadNotification(msg.seq);\n    }\n    // This will send \"received\" notifications right away.\n    this.props.onData(msg);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        this.keyPressTimer = setTimeout(() => {\n          this.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.info(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.info(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // sendMessage sends the message with an optional subscription to topic first.\n  sendMessage(msg, uploadCompletionPromise, uploader) {\n    let head;\n    if (this.props.forwardedMessage) {\n      // We are forwarding a message.\n      msg = this.props.forwardedMessage.msg;\n      head = this.props.forwardedMessage.head;\n      this.handleCancelReply();\n    } else if (this.state.reply && this.state.reply.content) {\n      // We are replying to a message in this topic.\n      head = {reply: '' + this.state.reply.seq};\n      // Turn it into Drafty so we can make a quoted Drafty object later.\n      if (typeof msg == 'string') {\n        msg = Drafty.parse(msg);\n      }\n      msg = Drafty.append(this.state.reply.content, msg);\n      this.handleCancelReply();\n    }\n    this.props.sendMessage(msg, uploadCompletionPromise, uploader, head);\n  }\n\n  // Retry sending a message.\n  retrySend(pub) {\n    this.props.sendMessage(pub.content, undefined, undefined, pub.head);\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file)\n        .then(b64 => this.sendMessage(Drafty.attachFile(null, {mime: b64.mime, data: b64.bits, filename: b64.name})))\n        .catch(err => this.props.onError(err));\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({\n        docPreview: {\n          file: file,\n          name: file.name,\n          size: file.size,\n          type: file.type\n        }\n      });\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.mime;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.name;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false)\n        // Convert tiny image into base64 for serialization and previewing.\n        .then(scaled => blobToBase64(scaled.blob))\n        .then(b64 => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: b64.bits, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.parse(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.sendMessage(msg, uploadCompletionPromise, uploader);\n        }).catch((err) => {\n          this.props.onError(err, 'err');\n        });\n        return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob)\n      .then(b64 => {\n        let msg = Drafty.insertImage(null, 0, {\n          mime: b64.mime,\n          preview: b64.bits, // Serializable preview\n          width: width,\n          height: height,\n          filename: fname,\n          size: blob.size\n        });\n        if (caption) {\n          msg = Drafty.appendLineBreak(msg);\n          msg = Drafty.append(msg, Drafty.parse(caption));\n        }\n        this.sendMessage(msg);\n      });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false)\n      .then(scaled => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(scaled.blob),\n          blob: scaled.blob,\n          name: scaled.name,\n          width: scaled.width,\n          height: scaled.height,\n          size: scaled.blob.size,\n          mime: scaled.mime\n        }});\n      }).catch(err => {\n        this.props.onError(err, 'err');\n      });\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const found = topic.findMessage(seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  handlePickReply(seq, content, senderId, senderName) {\n    this.setState({reply: null});\n\n    if (!seq || !content) {\n      return;\n    }\n\n    if (typeof content == 'string') {\n      content = Drafty.init(content);\n    }\n    if (Drafty.isValid(content)) {\n      content = Drafty.preview(content, QUOTED_REPLY_LENGTH);\n    } else {\n      // /!\\ invalid content.\n      content = Drafty.append(Drafty.init('\\u26A0 '),\n        Drafty.wrapInto(this.props.intl.formatMessage(messages.invalid_content), 'EM'));\n    }\n\n    this.setState({\n      reply: {\n        content: Drafty.quote(senderName, senderId, content),\n        seq: seq\n      }\n    });\n  }\n\n  handleCancelReply() {\n    this.setState({reply: null});\n    this.props.onCancelForwardMessage();\n  }\n\n  handleQuoteClick(replyToSeq) {\n    const ref = this.getOrCreateMessageRef(replyToSeq);\n    if (ref && ref.current) {\n      ref.current.scrollIntoView({block: \"center\", behavior: \"smooth\"});\n      ref.current.classList.add('flash');\n      setTimeout(() => { ref.current.classList.remove('flash') } , 1000);\n    } else {\n      console.error(\"Unresolved message ref\", replyToSeq);\n    }\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            tinode={this.props.tinode}\n            replyTo={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            tinode={this.props.tinode}\n            replyTo={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        const icon_badges = [];\n        if (topic.trusted) {\n          if (topic.trusted.verified) {\n            icon_badges.push({icon: 'verified', color: 'badge-inv'});\n          }\n          if (topic.trusted.staff) {\n            icon_badges.push({icon: 'staff', color: 'badge-inv'});\n          }\n          if (topic.trusted.danger) {\n            icon_badges.push({icon: 'dangerous', color: 'badge-inv'});\n          }\n        }\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        topic.messages((msg, prev, next, i) => {\n          let nextFrom = next ? (next.from || null) : 'chan';\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userFrom = thisFrom, userName, userAvatar;\n          const user = topic.userDesc(thisFrom);\n          if (user && user.public) {\n            userName = user.public.fn;\n            userAvatar = makeImageUrl(user.public.photo);\n          }\n            //userFrom = thisFrom;\n          chatBoxClass = groupTopic ? 'chat-box group' : 'chat-box';\n\n          // Ref for this chat message.\n          const ref = this.getOrCreateMessageRef(msg.seq);\n          let replyToSeq = msg.head ? parseInt(msg.head.reply) : null;\n          if (!replyToSeq || isNaN(replyToSeq)) {\n            replyToSeq = null;\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              isGroup={groupTopic}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}  // Used by `formatter`.\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              pickReply={this.handlePickReply}\n              replyToSeq={replyToSeq}\n              onQuoteClick={this.handleQuoteClick}\n              ref={ref}\n              userIsWriter={this.state.isWriter}\n              key={msg.seq} />\n          );\n        });\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  tinode={this.props.tinode}\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }<ContactBadges badges={icon_badges} /></div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  tinode={this.props.tinode}\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                tinode={this.props.tinode}\n                noInput={this.props.forwardedMessage != null}\n                disabled={!this.state.isWriter}\n                onKeyPress={this.sendKeyPress}\n                onSendMessage={this.sendMessage}\n                onAttachFile={this.props.forwardedMessage == null ? this.handleAttachFile : null}\n                onAttachImage={this.props.forwardedMessage == null ? this.handleAttachImage : null}\n                onError={this.props.onError}\n                replyTo={this.state.reply}\n                onQuoteClick={this.handleQuoteClick}\n                onCancelReply={this.handleCancelReply} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    const icon_badges = [];\n    if (this.props.trustedBadges) {\n      this.props.trustedBadges.map((b) => {\n        icon_badges.push({icon: b, color: 'badge-inv'});\n      });\n    }\n    let avatar = null;\n    if (this.props.tinode) {\n      avatar = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n    }\n    return (\n      <div id=\"side-caption-panel\" className=\"caption-panel\">\n        {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n        {avatar ?\n          <div id=\"self-avatar\" className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={avatar}\n              topic={this.props.myUserId}\n              title={this.props.title} />\n          </div>\n          :\n          null}\n        <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}<ContactBadges badges={icon_badges}/></div>\n        {this.props.state === 'login' ?\n            <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n          this.props.state === 'contacts' ?\n            <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n          null}\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nexport default class AccountSettingsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: _clip(me.public ? me.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(me.public ? me.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              avatar={this.state.avatar}\n              readOnly={true}\n              uid={this.props.myUserId}\n              title={this.state.fullName} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large ellipsized\">{this.state.fullName}</div>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n              description=\"Label for user address (ID)\" /></label>&nbsp;\n            <tt>{this.props.myUserId}</tt>\n          </div>\n          <div className=\"group\">\n            <BadgeList trustedBadges={this.props.trustedBadges} />\n          </div>\n          {this.state.description ?\n            <div className=\"group\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                  description=\"Label for editing topic description\" />\n              </label>\n              <div>{this.state.description}</div>\n            </div> : null}\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n              defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          tinode={this.props.tinode}\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_warning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdatePassword(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccountDesc('me', undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fullName = React.createRef();\n\n    this.state = {\n      fullName: '', // full/formatted name\n      private: '',\n      description: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFieldEdit = this.handleFieldEdit.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    // this.fullName.current.focus();\n  }\n\n  handleFieldEdit(name, e) {\n    this.setState({[name]: e.target.value || ''});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fullName.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    const description = this.state.description.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, description, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-column\">\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              onError={this.props.onError}\n              onImageChanged={this.handleImageChanged} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                ref={this.fullName} value={this.state.fullName} onChange={this.handleFieldEdit.bind(this, 'fullName')}\n                autoFocus required tabIndex={0} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handleFieldEdit.bind(this, 'private')} tabIndex={1} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-desc\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label>\n            <FormattedMessage id=\"description_editing_placeholder\" defaultMessage=\"Description (optional)\"\n              description=\"Placeholder for editing topic description\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-desc\" placeholder={placeholder}\n                value={this.state.description} onChange={this.handleFieldEdit.bind(this, 'description')} tabIndex={2} />\n            }</FormattedMessage>\n          </div>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} tabIndex={3} onChange={this.handleChannelToggle} />&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tinode={this.props.tinode}\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tabIndex={4}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(uid) {\n    if (this.state.tabSelected == 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(uid);\n    }\n  }\n\n  handleNewGroupSubmit(name, description, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined,\n      {public: theCard(name, dataUrl, null, description), private: priv, tags: tags}, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                tinode={this.props.tinode}\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      sent: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else if (this.state.sent) {\n      this.props.onCancel();\n    } else {\n      const email = this.state.email.trim();\n      this.setState({email: email});\n      this.props.onRequest('email', email).then(() => {\n        this.setState({sent: true});\n      });\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {(this.state.token && this.state.scheme) ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n        : this.state.sent ?\n          <>\n            <br/>\n            <center><i className=\"material-icons huge green\">task_alt</i></center>\n            <br/>\n            <center><FormattedMessage id=\"password_reset_email_sent\"\n              defaultMessage=\"An email has been sent to {email}. Follow the directions in the email to reset your password.\"\n              values={{ email: <tt>{this.state.email}</tt> }}\n              description=\"Notification that the email with password reset instructions has been sent\" /></center>\n          </>\n        :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{\n            (this.state.token && this.state.scheme) ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" />\n            : this.state.sent ?\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\"\n              description=\"Button [OK]\" />\n            :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['def', 'ws', 'lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\n\nimport AccountSettingsView from './account-settings-view.jsx';\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for AccountSettingsView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar, badges;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n      badges = this.props.trustedBadges;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n      badges = null;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          tinode={this.props.tinode}\n          trustedBadges={badges}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            tinode={this.props.tinode}\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <AccountSettingsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            trustedBadges={this.props.trustedBadges}\n            onNavigate={this.props.onNavigate} /> :\n\n          (view === 'general' || view === 'crop') ?\n          <TopicCommon\n            topic=\"me\"\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateTopicDesc={this.props.onUpdateAccountDesc}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccountDesc={this.props.onUpdateAccountDesc}\n            onUpdatePassword={this.props.onUpdatePassword}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword}\n            onCancel={this.props.onCancel} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\nimport ForwardMenu from '../widgets/forward-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdatePasswordRequest = this.handleUpdatePasswordRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdateRequest = this.handleTagsUpdateRequest.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteTopicRequest = this.handleDeleteTopicRequest.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n\n    this.handleShowForwardMenu = this.handleShowForwardMenu.bind(this);\n    this.handleHideForwardMenu = this.handleHideForwardMenu.bind(this);\n\n    this.sendMessageToTopic = this.sendMessageToTopic.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && !!settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      myTrustedBadges: [],\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      infoPanel: undefined,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      forwardMenuVisible: false,\n      forwardMenuBounds: null,\n      forwardMenuClickAt: null,\n      forwardMessage: null,\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n\n    // Process background notifications from the service worker.\n    if (typeof BroadcastChannel == 'function') {\n      const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n      serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n    } else {\n      // Safari is broken by design.\n      console.warn(\"Your browser does not support BroadcastChannel. Some features will not be available\");\n    }\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n      }\n\n      // Save possible topic name and navigate to blank state.\n      this.setState({requestedTopic: parsedNav.path[1]});\n      HashNavigation.navigateTo('');\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(data) {\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.error(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n\n        // Google could not be bothered to mention that onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // Handhe FCM pushes\n        // (a) for channels always,\n        // (b) pushes when the app is in foreground but has not focus.\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general','crop',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.warn(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      let topicName = hash.path[1] || null;\n      if (topicName != this.state.topicSelected) {\n        if (!Tinode.topicType(topicName)) {\n          // Clear invalid topic name.\n          topicName = null;\n        }\n        const newState = {\n          topicSelected: topicName\n        };\n        const acs = this.tinode.getTopicAccessMode(topicName);\n        if (acs) {\n          newState.topicSelectedAcs = acs;\n        }\n        this.setState(newState);\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: '', topicSelected: null});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      infoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      forwardMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    let token = this.tinode.getAuthToken();\n    if (login && password) {\n      token = null;\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        if (token) {\n          this.handleLogout();\n        }\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.trusted) {\n        const badges = [];\n        for (const [key, val] of Object.entries(desc.trusted)) {\n          if (val) {\n            badges.push(key);\n          }\n        }\n        this.setState({\n          myTrustedBadges: badges,\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.info(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n\n    const past = new Date(0);\n    newState.chatList.sort((a, b) => {\n      return (a.touched || past).getTime() - (b.touched || past).getTime();\n    });\n\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        infoPanel: undefined\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName),\n          forwardMessage: null\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        infoPanel: undefined,\n        forwardMessage: null\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  //  - head - head dictionary to be attached to the message\n  handleSendMessage(msg, promise, uploader, head) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n    this.sendMessageToTopic(topic, msg, promise, uploader, head);\n  }\n\n  sendMessageToTopic(topic, msg, promise, uploader, head) {\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (head) {\n      msg.head = Object.assign(msg.head || {}, head);\n    }\n\n    if (!topic.isSubscribed()) {\n      // Topic is not subscribed yet. Subscribe.\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise\n        .then(() => topic.subscribe())\n        .then(() => {\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              this.sendMessage(pub);\n            }\n          });\n        });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.warn(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleToggleIncognitoMode(on) {\n    // Make state undefined.\n    this.setState({incognitoMode: null});\n\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      // Request failed, keep existing state.\n      this.setState({incognitoMode: !on});\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      this.setState({desktopAlerts: null});\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          Promise.resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.error(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.error(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.error(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('crop' == parsed.path[0]) {\n      path = 'general';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Sidepanel navigator. No need to bind to 'this'.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Topic info navigator. No need to bind to 'this'.\n  infoNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlInfoPanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, newTopicParams, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: newTopicParams.public, private: {comment: newTopicParams.private}};\n      params.tags = newTopicParams.tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was created, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, defacs) {\n    this.handleError();\n\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      let attachments;\n      if (pub) {\n        if (pub.photo) {\n          if (pub.photo.ref && pub.photo.ref != Tinode.DEL_CHAR) {\n            attachments = [pub.photo.ref];\n          } else if (!pub.photo.data || pub.photo.data == Tinode.DEL_CHAR) {\n            pub.photo = Tinode.DEL_CHAR;\n          }\n        }\n        params.public = pub;\n      }\n\n      if (typeof priv == 'string') {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      topic.setMeta({desc: params, attachments: attachments}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleUnarchive(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.archive(false);\n    }\n  }\n\n  handleUpdatePasswordRequest(password)  {\n    this.handleError();\n\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdateRequest(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    clearInterval(this.reconnectCountdown);\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request to hard-delete topic.\n    topic.delTopic(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: this.selfRef.current.getBoundingClientRect()\n    });\n  }\n\n  handleShowForwardMenu(params) {\n    if (this.state.sidePanelSelected == 'newtpk') {\n      // If the Find panel is active, close it.\n      this.handleSidepanelCancel();\n    }\n    const header = \"Forwarded from \" + params.userName;\n    const content = typeof params.content == 'string' ? Tinode.Drafty.init(params.content) : params.content;\n    const preview = Tinode.Drafty.preview(content, 30);\n    const msg = Tinode.Drafty.append(\n        Tinode.Drafty.appendLineBreak(\n            Tinode.Drafty.mention(header, params.userFrom)),\n        content);\n    const msgPreview = Tinode.Drafty.quote(header, params.userFrom, preview);\n    const head = {\n      // TODO: decide what parameters to store.\n      fwdFrom: params.topicName,\n      authorUid: params.userFrom\n    };\n    this.setState({\n      forwardMenuVisible: true,\n      forwardMenuBounds: this.selfRef.current.getBoundingClientRect(),\n      forwardMenuClickAt: {x: params.x, y: params.y},\n      forwardMessage: { head: head, msg: msg, preview: msgPreview }\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      archived ? 'topic_restore' : 'topic_archive',\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleHideForwardMenu(keepForwardedMessage) {\n    this.setState({\n      forwardMenuVisible: false,\n      forwardMenuBounds: null,\n      forwardMenuClickAt: null,\n      forwardMessage: keepForwardedMessage ? this.state.forwardMessage : null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    } else if (action == 'menu_item_forward') {\n      this.handleShowForwardMenu(params);\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', 'info'));\n    this.setState({infoPanel: 'info'});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    return this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\" ref={this.selfRef}>\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        {this.state.forwardMenuVisible ?\n          <ForwardMenu\n            tinode={this.tinode}\n            bounds={this.state.forwardMenuBounds}\n            clickAt={this.state.forwardMenuClickAt}\n\n            contacts={this.state.chatList}\n            topicSelected={this.props.topicSelected}\n            myUserId={this.state.myUserId}\n\n            hide={this.handleHideForwardMenu}\n            onInitFind={this.tnInitFind}\n            searchResults={this.state.searchResults}\n            onSearchContacts={this.handleSearchContacts}\n            onCreateTopic={this.handleStartTopicRequest}\n          />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          trustedBadges={this.state.myTrustedBadges}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccountDesc={this.handleTopicUpdateRequest}\n          onUpdatePassword={this.handleUpdatePasswordRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.infoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          // User public.fn.\n          myUserName={this.state.sidePanelTitle}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          // Show the forwareded message if the user has selected a topic to forward this message to.\n          forwardedMessage={this.state.forwardMessage && this.stateTopicSelected != this.state.forwardMessage.head.fwdFrom ? this.state.forwardMessage : null}\n          onCancelForwardMessage={this.handleHideForwardMenu}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.infoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n            panel={this.state.infoPanel}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onNavigate={this.infoNavigator}\n            onTopicDescUpdateRequest={this.handleTopicUpdateRequest}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteTopic={this.handleDeleteTopicRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdateRequest={this.handleTagsUpdateRequest}\n            onTopicUnArchive={this.handleUnarchive}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst htmlLang = allMessages[language] ? langauge : allMessages[baseLanguage] ? baseLanguage : 'en';\nconst messages = allMessages[htmlLang];\n\n// Set lang attribute of the HTML element: <html lang=\"XX\">\ndocument.getElementsByTagName('html')[0].setAttribute('lang', htmlLang);\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n      <TinodeWeb />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[72](0, __webpack_exports__, __webpack_require__);\n"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","IMAGE_THUMBNAIL_DIM","MAX_TITLE_LENGTH","MAX_TOPIC_DESCRIPTION_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","reply","forward","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","selfRef","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","replyToMessage","forwardMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","current","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","error","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","pickReply","userFrom","userName","menu","count","map","push","key","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","ref","injectIntl","icon_mapping","ContactBadges","badges","b","color","icon","name","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","shortenFileName","filename","maxLength","slice","idToColorClass","light","fg","userId","abs","value","hash","i","charCodeAt","stringToColorHash","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","createElement","type","rel","href","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","note","card","trim","mimeType","matches","exec","photo","data","substring","indexOf","arrayEqual","a","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","sanitizeImageUrl","sanitizedUrl","deliveryMarker","received","LetterTile","avatar","isGroup","iconColor","letter","charAt","authorizeURL","alt","src","onerror","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","LazyImage","state","Object","assign","padding","whenDone","promise","setState","cancel","componentDidUpdate","prevProps","FileProgress","width","progress","onCancel","UploadingImage","onCancelUpload","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","startsWith","fitImageSize","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","fileNameForMime","fname","mime","idx","ext","at","lastIndexOf","imageScaled","fileOrBlob","maxSize","Promise","resolve","img","Image","crossOrigin","Error","onload","async","URL","revokeObjectURL","dim","canvas","ctx","getContext","imageSmoothingEnabled","drawImage","includes","blob","toBlob","clearRect","createObjectURL","blobToBase64","reader","FileReader","evt","bits","split","readAsDataURL","drafty_form","drafty_attachment","drafty_image","handleImageData","el","attr","viewportWidth","minWidth","minHeight","Drafty","max","onImagePreview","loading","fullFormatter","values","call","onFormButtonClick","inner","child","undefined","val","onQuoteClick","concat","previewFormatter","inlineImageAttr","quoteFormatter","quoteImage","str","bin","atob","buf","ArrayBuffer","arr","Uint8Array","Blob","base64ToBlob","fetch","ok","status","statusText","scaled","b64","replyFormatter","hasCanceled","isCanceled","cancelablePromise","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","icon_badges","isVerified","isStaff","isDangerous","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","comment","showCheckmark","selected","showOnline","isChannel","unread","small","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","substr","showUnread","connected","onTopicSelected","trusted","verified","staff","danger","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","SearchContacts","edited","search","handleSearchChange","handleSearch","handleClear","handleKeyDown","onSearchContacts","query","search_placeholder","placeholder","onChange","onKeyDown","required","autoFocus","ForwardMenu","handleSearchContacts","handleContactSelected","onInitFind","uid","onCreateTopic","hSize","searchResults","LoadSpinner","large","clear","centered","show","AvatarUpload","source","handleFileReceived","image","files","onImageUpdated","randId","random","readOnly","accept","htmlFor","uploading","badge_verified","badge_staff","badge_danger","BadgeList","trustedBadges","CheckBox","handleChange","checked","MenuCancel","ErrorPanel","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","avatarDisabled","tabIndex","onFocus","onBlur","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","splice","instance","added","keys","k","onSubmit","doContactFiltering","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","Cropper","panX","panY","originX","originY","zoom","minZoom","maxZoom","overlay","cutout","boundingBox","imageWidth","imageHeight","mouseX","mouseY","prevDistance","cutoutRect","bBoxRect","initScaling","onZoom","handleZoom","mouseDown","mouseUp","mouseMove","mouseTouch","positionAll","translate","passive","getBoundingClientRect","currPan","nextDiff","imgRect","imgLeft","imgRight","coLeft","coRight","imgTop","imgBottom","coTop","coBottom","touches","body","dX","dY","checkBound","touch0","touch1","distance","sqrt","t3d","orig","transform","transformOrigin","onLoad","step","AvatarCrop","objURL","imageCrop","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","spanText","spanClass","multiline","element","rows","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","TopicDescEdit","getAccessMode","isMe","fullName","description","newAvatar","newAvatarMime","previousOnTags","tnNewTags","handleFullNameUpdate","handleImageUpdated","handleAvatarCropped","handlePrivateUpdate","handleDescriptionUpdate","uploadAvatar","handleAvatarCropCancel","handleTagsUpdated","onTagsUpdated","onUpdateTopicDesc","desc","readyToUpload","uploader","getLargeFileHelper","upload","finally","du","onUpdateTags","editable","full_name_placeholder","group_name_placeholder","private_placeholder","title_tag_manager","TopicCommon","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousTagsUpdated","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","getType","creds","method","asPhone","asEmail","onCredAdd","onTopicTagsUpdateRequest","cred","meth","done","onCredConfirm","onCredDelete","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","other_user","TopicSecurity","handleDeleteTopic","handleDeleteMessages","handleLeave","handleBlock","handleReport","onDeleteTopic","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","channel","groupTopic","onLaunchPermissionsEditor","access","auth","anon","modeGiven2","general","security","crop","perm_want","perm_given","perm_auth","perm_anon","perm_user","_clip","InfoView","admin","muted","address","selectedContact","modeGiven","modeWant","modeWant2","contactList","previousMetaDesc","previousSubsUpdated","resetSubs","resetDesc","resetTags","onMetaDesc","onSubsUpdated","handleImageChanged","handleMuted","handleUnarchive","handlePermissionsChanged","handleLaunchPermissionsEditor","handleShowAddMembers","handleMemberUpdateRequest","handleMemberSelected","handleContextMenu","handleBackNavigate","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","entries","isAdmin","isSharer","isDeleter","archived","isArchived","isGroupType","isChannelType","chan","getMeta","startMetaQuery","withTags","build","subs","onTopicDescUpdate","ignored","onChangePermissions","ignored2","onTopicUnArchive","which","perm","onTopicDescUpdateRequest","userPermissionsEdited","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onNavigate","onMemberUpdateRequest","args","panel","menuItems","view","shift","panelTitle","displayMobile","errorLevel","errorText","searchableContacts","no_members","Attachment","downloader","downloadFile","mimetype","download","loaded","helperFunc","isUrlRelative","downloadUrl","downloadWidget","BaseChatMessage","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","handleQuoteClick","formatterContext","getFormatter","tp","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","userIsWriter","MESSAGE_STATUS_DEL_RANGE","ratio","replyToSeq","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","attachments","att","tree","innerRef","IntlChatMessage","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","quote","replyTo","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","file","getAsFile","filePasted","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","onCancelReply","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","maxlength","Invitation","handleButtonAction","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","infopanel","online_now","last_seen","not_found","invalid_content","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendMessage","retrySend","sendImageAttachment","sendFileAttachment","sendKeyPress","subscribe","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleMessageUpdate","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","handlePickReply","handleCancelReply","chatMessageRefs","getOrCreateMessageRef","readNotificationQueue","readNotificationTimer","seqId","messagesScroller","messageCount","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","ready","nextState","forwardedMessage","docPreview","imagePreview","imagePostview","typingIndicator","fetchingMessages","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","latestClearId","maxClearId","isWriter","isReader","readingBlocked","unconformed","unconfirmed","isSubscribed","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","withLaterData","withLaterDel","setQuery","code","onNewTopicCreated","queuedMessages","pub","_sending","navigateTo","setUrlTopic","blankState","oldTopicName","isTopicCached","oldTopic","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","sendAt","noteRead","setMilliseconds","getMilliseconds","clearTimeout","keyPressTimer","isNewMessage","from","what","forceUpdate","attachJSON","parse","searchParams","set","open","messageSpecificMenuItems","onNewChat","noteKeyPress","uploadCompletionPromise","append","maxInbandAttachmentSize","urlPromise","fileToBase64","maxExternAttachmentSize","limit","insertImage","_tempPreview","appendLineBreak","found","findMessage","_cancelled","senderId","senderName","init","isValid","wrapInto","onCancelForwardMessage","scrollIntoView","behavior","classList","add","remove","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","prev","next","nextFrom","thisFrom","isReply","userDesc","parseInt","isNaN","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","AccountSettingsView","me","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","onImageChanged","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","showPermissionEditorFor","handlePasswordUpdate","handleHidePermissionsEditor","handleDeleteAccount","pwd","onUpdatePassword","onUpdateAccountDesc","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handleFieldEdit","handleTagsChanged","handleChannelToggle","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","dataUrl","priv","no_contacts_placeholder","PasswordResetView","sent","token","scheme","onReset","onRequest","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","notif","support","newtpk","reset","SidepanelView","handleNewTopic","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdatePasswordRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleTagsUpdateRequest","handleLogout","handleDeleteTopicRequest","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","handleShowForwardMenu","handleHideForwardMenu","sendMessageToTopic","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","myTrustedBadges","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","infoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","forwardMenuVisible","forwardMenuBounds","forwardMenuClickAt","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","play","unused","foundContacts","merged","updated","past","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","on","enabled","updateObject","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","infoNavigator","setUrlInfoPanel","newGroupTopicName","oldName","newName","updateAccountBasic","getCurrentLogin","updateGiven","delCurrentUser","publish","header","msgPreview","fwdFrom","authorUid","self_blocked","subscribed","keepForwardedMessage","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","btoa","base64ReEncode","myUserName","stateTopicSelected","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","htmlLang","allMessages","langauge","setAttribute","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","__webpack_modules__"],"sourceRoot":""}