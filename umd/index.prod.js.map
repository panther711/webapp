{"version":3,"file":"index.prod.js","mappings":"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","sources":["webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/badge-list.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/lazy-image.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/lib/formatters.js","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/cropper.jsx","webpack://tinode-webapp/./src/widgets/avatar-crop.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/widgets/topic-desc-edit.jsx","webpack://tinode-webapp/./src/widgets/topic-common.jsx","webpack://tinode-webapp/./src/widgets/topic-security.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/account-settings-view.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.18.0-alpha1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: when image dimensions are greater or the image is not square, it's resized to\n// a square of this size or less.\nexport const AVATAR_SIZE = 384;\n\n// Maximum size of an avatar in bytes for sending in-band. Bigger avatars will be sent out of band (as uploads).\nexport const MAX_AVATAR_BYTES = 4096;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Linear dimensions of image thumbnail: shrink image under this size for thumbnails in reply quote previews.\nexport const IMAGE_THUMBNAIL_DIM = 36;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n// Maximum length of topic description.\nexport const MAX_TOPIC_DESCRIPTION_LENGTH = 360;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  reply: {\n    id: 'menu_item_reply',\n    defaultMessage: 'Reply',\n    description: 'Reply to message'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  unarchive: {\n    id: 'menu_item_restore_topic',\n    defaultMessage: 'Restore',\n    description: 'Restore topic from archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'menu_item_reply': {\n        id: 'menu_item_reply',\n        title: formatMessage(messages.reply),\n        handler: (params, errorHandler) => {\n          return this.replyToMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'topic_restore': {\n        id: 'topic_restore',\n        title: formatMessage(messages.unarchive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(false).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (this.selfRef.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.error(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  replyToMessage(params, errorHandler) {\n    params.pickReply(params.seq, params.content, errorHandler);\n  }\n\n  render() {\n    const menu = [];\n    let count = 0;\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position} ref={this.selfRef}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nfunction stringToColorHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n\n// User avatar letter color id.\nexport function letterTileColorId(userId) {\n  return Math.abs(stringToColorHash(userId)) % 16;\n}\n\n// Converts user or topic ID to a CSS color class. Ideally it should produce the same color value as Java version.\n// params:\n// - {string} id: user or topic ID\n// - {boolean} light: light or dark version of the color.\n// - {boolean} fg: foreground (text) or background color.\nexport function idToColorClass(id, light, fg) {\n  return (light ? 'lt-' : 'dk-') + (fg ? 'fg-' : 'bg-') + letterTileColorId(id);\n}\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType, note) {\n  let card = null;\n  fn = fn && fn.trim();\n  note = note && note.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (typeof note == 'string') {\n    card = card || {};\n    card.note = note ? note : Tinode.DEL_CHAR;\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1),\n        ref: Tinode.DEL_CHAR\n      };\n    } else {\n      card.photo = {\n        data: Tinode.DEL_CHAR,\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (typeof url != 'string') {\n    return url;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'danger-color' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { idToColorClass } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = idToColorClass(this.props.topic, isGroup);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      const url = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={url}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"../img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    const className = 'load-spinner-box' + (this.props.large ? ' large' : '')\n      + (this.props.clear ? ' clear' : '') + (this.props.centered ? ' centered' : '');\n    return (this.props.show ?\n      <div className={className}><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport LoadSpinner from './load-spinner.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nimport { AVATAR_SIZE } from '../config.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      source: props.avatar\n    };\n\n    this.handleFileReceived = this.handleFileReceived.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({source: this.props.avatar});\n    }\n  }\n\n  handleFileReceived(e) {\n    const image = e.target.files[0];\n    this.props.onImageUpdated(image.type, URL.createObjectURL(image), image.name);\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.source ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageUpdated();}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.source ?\n          <img src={this.props.tinode.authorizeURL(sanitizeImageUrl(this.state.source))} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                tinode={this.props.tinode}\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileReceived} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n        <LoadSpinner show={this.props.uploading} large={true} clear={true} centered={true} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst icon_mapping = {'staff': 'verified_user'};\n\nconst messages = defineMessages({\n  badge_verified: {\n    id: 'badge_verified',\n    defaultMessage: 'Verified/official',\n    description: 'Explanation of a verified account or topic badge'\n  },\n  badge_staff: {\n    id: 'badge_staff',\n    defaultMessage: 'Staff-managed',\n    description: 'Explanation of a staff-managed account or topic badge'\n  },\n  badge_danger: {\n    id: 'badge_danger',\n    defaultMessage: 'Untrustworthy',\n    description: 'Suspicious or untrustworthy account or topic badge'\n  },\n});\n\n\n/* Trusted badges with labels: verified, staff, danger */\nclass BadgeList extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let badges = null;\n    if (this.props.trustedBadges && this.props.trustedBadges.length > 0) {\n      badges = [];\n      this.props.trustedBadges.map((b) => {\n        const comment = formatMessage(messages['badge_' + b]);\n        const style = 'material-icons ' + b + '-color';\n        badges.push(<div className=\"trusted-badge\" key={b}><i className={style}>{icon_mapping[b] || b}</i> {comment}</div>);\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n\nexport default injectIntl(BadgeList);\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked === true ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n        this.props.checked === false ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i> :\n          <i className=\"material-icons lt-blue\">indeterminate_check_box</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block', 'staff': 'verified_user'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n  render() {\n    let badges = null;\n    if (this.props.badges && this.props.badges.length > 0) {\n      badges = [];\n      this.props.badges.map((b) => {\n        const color = (b.color ? ' ' + b.color : '');\n        if (b.icon) {\n          badges.push(<i className={'material-icons as-badge' + color} key={b.key || b.icon}>{icon_mapping[b.icon] || b.icon}</i>);\n        } else {\n          badges.push(<span className={'badge' + color} key={b.key || b.name}>{b.name}</span>);\n        }\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// Image with a placeholder which is replaced when the promise is resolved.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class LazyImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      src: 'img/placeholder.png',\n      style: this.props.style,\n      className: this.props.className,\n      loading: 'lazy',\n      alt: this.props.alt,\n      onClick: this.props.onClick,\n    };\n\n    this.props.whenDone\n      .then(data => this.setState({src: data.src}))\n      .catch(() => this.setState({src: 'img/broken_image.png'}));\n  }\n\n  render() {\n    return React.createElement('img', this.state);\n  }\n};\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Get an URL from a theCard photo: either create a data: URL or return reference URL.\nexport function makeImageUrl(photo) {\n  if (photo && typeof photo == 'object') {\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n    return photo.ref;\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(mime, blob, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Scale and crop image according to specified dimensions.\n// The coordinates are in unscaled image pixels, i.e. cut the rectangle first then scale it.\nexport function imageCrop(mime, objURL, left, top, width, height, scale, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    let canvas = document.createElement('canvas');\n    canvas.width = width * scale;\n    canvas.height = height * scale;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, left, top, width, height, 0, 0, canvas.width, canvas.height);\n\n    mime = SUPPORTED_IMAGE_FORMATS.includes(mime) ? mime : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n    // Allow GC.\n    canvas = null;\n    onSuccess(mime, blob, width, height);\n  };\n  img.src = objURL;\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.error(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.error(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n\n// Convert a base64 encoded string with the provided mime type into a Blob.\nexport function base64ToBlob(str, mime) {\n  if (!str) {\n    return null;\n  }\n\n  try {\n    // Make blob.\n    const bin = atob(str);\n    const length = bin.length;\n    const buf = new ArrayBuffer(length);\n    const arr = new Uint8Array(buf);\n    for (let i = 0; i < length; i++) {\n      arr[i] = bin.charCodeAt(i);\n    }\n\n    return new Blob([buf], { type: mime });\n  } catch(err) {\n    console.log(\"Failed to convert base64 to blob: \", err);\n  }\n\n  return null;\n}\n","import React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport LazyImage from '../widgets/lazy-image.jsx'\nimport UploadingImage from '../widgets/uploading-image.jsx'\n\nimport { IMAGE_THUMBNAIL_DIM, BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { blobToBase64, fitImageSize, imageScaled } from './blob-helpers.js';\nimport { idToColorClass } from './strformat.js';\nimport { sanitizeImageUrl } from './utils.js';\n\nconst messages = defineMessages({\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  },\n});\n\nfunction handleImageData(el, data, attr) {\n  if (!data) {\n    attr.src = 'img/broken_image.png';\n    attr.style = {\n      width: IMAGE_THUMBNAIL_DIM + 'px',\n      height: IMAGE_THUMBNAIL_DIM + 'px',\n    };\n    return el;\n  }\n\n  attr.className = 'inline-image';\n  const dim = fitImageSize(data.width, data.height,\n    this.viewportWidth > 0 ? Math.min(this.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5) :\n      REM_SIZE * 34.5, REM_SIZE * 24, false) ||\n      {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n  attr.style = {\n    width: dim.dstWidth + 'px',\n    height: dim.dstHeight + 'px',\n    // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n    minWidth: dim.dstWidth + 'px',\n    minHeight: dim.dstHeight + 'px'\n  };\n  if (!Drafty.isProcessing(data)) {\n    attr.src = this.authorizeURL(sanitizeImageUrl(attr.src));\n    attr.alt = data.name;\n    if (attr.src) {\n      if (Math.max(data.width || 0, data.height || 0) > IMAGE_THUMBNAIL_DIM) {\n        // Allow previews for large enough images.\n        attr.onClick = this.onImagePreview;\n        attr.className += ' image-clickable';\n      }\n      attr.loading = 'lazy';\n    } else {\n      attr.src = 'img/broken_image.png';\n    }\n  } else {\n    // Use custom element instead of <img>.\n    el = UploadingImage;\n  }\n\n  return el;\n}\n\nfunction shortenFileName(filename) {\n  return filename.length > 16 ? filename.slice(0, 7) + '…' + filename.slice(-7) : filename;\n}\n\n// The main Drafty formatter: converts Drafty elements into React classes. 'this' is set by the caller.\n// 'this' must contain:\n//    viewportWidth: this.props.viewportWidth;\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onImagePreview: this.handleImagePreview\n//    onFormButtonClick: this.handleFormButtonClick\n//    onQuoteClick: this.handleQuoteClick (optional)\nexport function fullFormatter(style, data, values, key) {\n  if (!style) {\n    // Unformatted.\n    return values;\n  }\n\n  if (style == 'HD') {\n    // Hidden.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  const attr = Drafty.attrValue(style, data) || {};\n  attr.key = key;\n  switch (style) {\n    case 'HL':\n      // Highlighted text. Assign class name.\n      attr.className = 'highlight';\n      break;\n    case 'IM':\n      // Additional processing for images\n      el = handleImageData.call(this, el, data, attr);\n      // Image element cannot have content.\n      values = null;\n      break;\n    case 'BN':\n      // Button\n      attr.onClick = this.onFormButtonClick;\n      let inner = React.Children.map(values, (child) => {\n        return typeof child == 'string' ? child : undefined;\n      });\n      if (!inner || inner.length == 0) {\n        inner = [attr.name]\n      }\n      // Get text which will be sent back when the button is clicked.\n      attr['data-title'] = inner.join('');\n      break;\n    case 'MN':\n      // Mention\n      attr.className = 'mention'\n      if (data) {\n        attr.className += ' ' + idToColorClass(data.val, false, true);\n      }\n      break;\n    case 'FM':\n      // Form\n      attr.className = 'bot-form';\n      break;\n    case 'RW':\n      // Form element formatting is dependent on element content.\n      break;\n    case 'QQ':\n      // Quote/citation.\n      attr.className = 'reply-quote'\n      attr.onClick = this.onQuoteClick;\n      break;\n    default:\n      if (el == '_UNKN') {\n        // Unknown element.\n        el = React.Fragment;\n        values = [<i className=\"material-icons gray\">extension</i>, ' '].concat(values || []);\n      }\n      break;\n  }\n  if (!el) {\n    return values;\n  }\n  return React.createElement(el, attr, values);\n};\n\n// Converts Drafty object into a one-line preview. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\nexport function previewFormatter(style, data, values, key) {\n  if (!style) {\n    // Unformatted.\n    return values;\n  }\n\n  if (style == 'HD') {\n    // Hidden.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  switch (style) {\n    case 'BR':\n      // Replace new line with a space.\n      el = React.Fragment;\n      values = [' '];\n      break;\n    case 'HL':\n      // Make highlight less prominent in preview.\n      attr.className = 'highlight preview';\n      break;\n    case 'LN':\n    case 'MN':\n      // Disable links in previews.\n      el = 'span';\n      break;\n    case 'IM':\n      // Replace image with '[icon] Image'.\n      el = React.Fragment;\n      values = [<i key=\"im\" className=\"material-icons\">photo</i>, this.formatMessage(messages.drafty_image)];\n      break;\n    case 'BN':\n      el = 'span';\n      attr.className = 'flat-button faux';\n      break;\n    case 'FM':\n      el = React.Fragment;\n      values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n        this.formatMessage(messages.drafty_form)].concat(' ', values || []);\n      break;\n    case 'RW':\n      el = React.Fragment;\n      break;\n    case 'EX':\n      if (data) {\n        if (data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        // Clear payload.\n        delete data.val;\n        delete data.ref;\n      }\n      el = React.Fragment;\n      values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, this.formatMessage(messages.drafty_attachment)];\n      break;\n    default:\n      if (el == '_UNKN') {\n        el = React.Fragment;\n        values = [<i key=\"unkn\" className=\"material-icons\">extension</i>, ' '].concat(values || []);\n      }\n      break;\n  }\n  if (!el) {\n    return values;\n  }\n  return React.createElement(el, attr, values);\n};\n\n// Converts Drafty object into a quoted reply. 'this' is set by the caller.\nfunction inlineImageAttr(attr, data) {\n  attr.style = {\n    width: IMAGE_THUMBNAIL_DIM + 'px',\n    height: IMAGE_THUMBNAIL_DIM + 'px',\n  }\n  attr.className = 'inline-image';\n  attr.alt = shortenFileName((data && data.name) || this.formatMessage(messages.drafty_image));\n  if (!data) {\n    attr.src = 'img/broken_image.png';\n  }\n  attr.title = attr.alt;\n  return attr;\n}\n\n// Displays a portion of Drafty within 'QQ' quotes. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onQuoteClick: this.handleQuoteClick (optional)\nexport function quoteFormatter(style, data, values, key) {\n  if (['BR', 'EX', 'IM', 'MN', 'QQ'].includes(style)) {\n    let el = Drafty.tagName(style);\n    let attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch(style) {\n      case 'IM':\n        attr = inlineImageAttr.call(this, attr, data);\n        values = [React.createElement('img', attr, null), ' ', attr.alt];\n        el = React.Fragment;\n        // Fragment attributes.\n        attr = {key: key};\n        break;\n      case 'MN':\n        el = 'span';\n        attr.className = 'mention'\n        if (data) {\n          attr.className += ' ' + idToColorClass(data.val, false, true);\n        }\n        break;\n      case 'QQ':\n        attr.className = 'reply-quote';\n        attr.onClick = this.onQuoteClick;\n        break;\n      case 'EX':\n        let fname;\n        if (data) {\n          if (data.mime == 'application/json') {\n            // Ignore JSON attachments: they are form response payloads.\n            return null;\n          }\n          fname = data.name;\n          // Clear payload.\n          delete data.val;\n          delete data.ref;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>,\n          shortenFileName(fname || this.formatMessage(messages.drafty_attachment))];\n        break;\n    }\n    return React.createElement(el, attr, values);\n  }\n  return previewFormatter.call(this, style, data, values, key);\n}\n\n// Create image thumbnail suitable for inclusion in a quote.\nfunction quoteImage(data) {\n  let promise;\n  // Get the blob from the image data.\n  if (data.val) {\n    const blob = base64ToBlob(data.val, data.mime);\n    promise = blob ? Promise.resolve(blob) : Promise.reject(new Error(\"Invalid image\"));\n  } else {\n    promise = fetch(this.authorizeURL(sanitizeImageUrl(data.ref))).then(evt => {\n      if (evt.ok) {\n        return evt.blob();\n      } else {\n        throw new Error(`Image fetch unsuccessful: ${evt.status} ${evt.statusText}`);\n      }\n    });\n  }\n\n  // Scale the blob.\n  return promise\n    .then(blob => {\n      // Cut the square from the center of the image and shrink it.\n      return imageScaled(blob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, true)\n    }).then(scaled => {\n      data.mime = scaled.mime;\n      data.size = scaled.blob.size;\n      data.width = scaled.width;\n      data.height = scaled.height;\n      delete data.ref;\n      // Keeping the original file name, if provided: ex.data.name;\n\n      data.src = URL.createObjectURL(scaled.blob);\n      return blobToBase64(scaled.blob);\n    }).then(b64 => {\n      data.val = b64.bits;\n      return data;\n    }).catch(err => {\n      delete data.val;\n      delete data.src;\n      data.width = IMAGE_THUMBNAIL_DIM;\n      data.height = IMAGE_THUMBNAIL_DIM;\n      // Rethrow.\n      throw err;\n    });\n}\n\n// Create a preview of a reply.\nexport function replyFormatter(style, data, values, key) {\n  if (style != 'IM') {\n    return quoteFormatter.call(this, style, data, values, key);\n  }\n  const attr = inlineImageAttr.call(this, {key: key}, data);\n  attr.whenDone = quoteImage.call(this, data);\n  values = [React.createElement(LazyImage, attr, null), ' ', attr.alt];\n  return React.createElement(React.Fragment, {key: key}, values);\n}\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { previewFormatter } from '../lib/formatters.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.isVerified) {\n      icon_badges.push({icon: 'verified', color: 'verified-color'});\n    }\n    if (this.props.isStaff) {\n      icon_badges.push({icon: 'staff', color: 'staff-color'});\n    }\n    if (this.props.isDangerous) {\n      icon_badges.push({icon: 'dangerous', color: 'danger-color'});\n    }\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        Drafty.isValid(this.props.preview) ?\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, previewFormatter,\n          {formatMessage: this.props.intl.formatMessage})) :\n        <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n          <FormattedMessage id=\"invalid_content\"\n            defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i>\n        </>\n      ) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            tinode={this.props.tinode}\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <ContactBadges badges={icon_badges} /><UnreadBadge count={this.props.unread} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            this.props.small ? null : <div className=\"contact-comment\">{marker}<span>{subtitle || '\\u00A0'}</span></div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              tinode={this.props.tinode}\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              isVerified={c.trusted && c.trusted.verified}\n              isStaff={c.trusted && c.trusted.staff}\n              isDangerous={c.trusted && c.trusted.danger}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          tinode={this.props.tinode}\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    const autoFocus = !(this.props.tabIndex > 0);\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          tabIndex={this.props.tabIndex}\n          autoFocus={autoFocus} />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            tinode={this.props.tinode}\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          tinode={this.props.tinode}\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    const idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    const mode = (this.state.mode || 'N').split('').sort().join('');\n    const before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box small\"><Contact\n            tinode={this.props.tinode}\n            item={this.props.item}\n            title={this.props.userTitle}\n            small={true}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Image zoom and crop widget.\n\nimport React from 'react';\n\nconst DEFAULT_MAX_ZOOM = 2.5;\n\nexport default class Cropper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Coordinates of the top left corner of the image in container coordinates.\n      panX: 0,\n      panY: 0,\n      // Origin of the zoom in image coordinates.\n      originX: 0,\n      originY: 0,\n      // Zoom scale.\n      zoom: 1,\n      // Zoom min and max.\n      minZoom: 0,\n      maxZoom: DEFAULT_MAX_ZOOM,\n    };\n\n    // References to DOM elements for hooking up events and getting screen dimensions.\n    // The transparent element which captures mouse moves (moves with the image).\n    this.overlay = React.createRef();\n    // The image cutout window or view port (static).\n    this.cutout = React.createRef();\n    // Scaled and translated image preview.\n    this.preview = React.createRef();\n    // The main container (static).\n    this.boundingBox = React.createRef();\n\n    // The original image width and height before any scaling.\n    this.imageWidth = 0;\n    this.imageHeight = 0;\n\n    // Mouse position when dragging.\n    this.mouseX = 0\n    this.mouseY = 0;\n    // Length of the previous mouse move when dragging.\n    this.prevDistance = 0;\n\n    // Bounding rectangles of static elements.\n    this.cutoutRect = {};\n    this.bBoxRect = {};\n    // Center of the bounding box.\n    this.originX = 0;\n    this.originY = 0;\n\n    this.initScaling = this.initScaling.bind(this);\n    this.onZoom = this.onZoom.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseTouch = this.mouseTouch.bind(this);\n    this.positionAll = this.positionAll.bind(this);\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.overlay.current.addEventListener('mousedown', this.mouseDown, { passive: true });\n    this.overlay.current.addEventListener('touchstart', this.mouseDown, { passive: true });\n\n    // The rectangle position is in viewport coordinates.\n    this.bBoxRect = this.boundingBox.current.getBoundingClientRect();\n    // Center of the bounding box in container coordinates.\n    this.originX = this.bBoxRect.width / 2;\n    this.originY = this.bBoxRect.height / 2;\n\n    // The rectangle position is in viewport coordinates.\n    this.cutoutRect = this.cutout.current.getBoundingClientRect();\n  }\n\n  componentWillUnmount() {\n    this.overlay.current.removeEventListener('mousedown', this.mouseDown);\n    this.overlay.current.removeEventListener('touchstart', this.mouseDown);\n  }\n\n  // Position all elements.\n  positionAll(panX, panY, zoom) {\n    // Zoom origin in image preview coordinates.\n    this.setState({\n      panX: panX,\n      panY: panY,\n      zoom: zoom,\n      originX: this.originX - panX,\n      originY: this.originY - panY,\n    });\n\n    // Pass cut out coordinates to caller.\n    const left = (this.originX - panX) * zoom - this.originX;\n    const top = (this.originY - panY) * zoom - this.originY;\n    this.props.onChange(\n      (left + this.cutoutRect.left - this.bBoxRect.left) / zoom,\n      (top + this.cutoutRect.top - this.bBoxRect.top) / zoom,\n      this.cutoutRect.width / zoom,\n      this.cutoutRect.height / zoom,\n      zoom);\n  }\n\n  // Check if new location is within the limits.\n  static checkBound(currPan, img, cutout, delta) {\n    let nextDiff = Math.min(0, cutout[0] - img[0] - delta, img[1] - cutout[1] + delta);\n    if (nextDiff == 0) {\n      // Cutout is completely within the image.\n      currPan += delta;\n    } else if (Math.min(0, cutout[0] - img[0], img[1] - cutout[1]) < nextDiff) {\n      // Cutout is outside of the range but closer to the bound.\n      currPan += delta;\n    }\n    return currPan;\n  }\n\n  initScaling() {\n    // Initialize components.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    this.imageWidth = imgRect.width;\n    this.imageHeight = imgRect.height;\n\n    // Set zoom slider's min and max values. Make sure the scaled image cannot be smaller than the cutout.\n    const minZoom = Math.max(this.cutoutRect.width / imgRect.width, this.cutoutRect.height / imgRect.height);\n    this.setState({\n      minZoom: minZoom,\n      maxZoom: Math.max(DEFAULT_MAX_ZOOM, minZoom + 1)\n    });\n\n    // Initial zoom level fills the bounding box at the smallest image dimension and overflows the largest, i.e. \"fill\" not \"fit\".\n    const zoom = Math.max(this.bBoxRect.width / imgRect.width, this.bBoxRect.height / imgRect.height);\n    // Converting from viewport coordinates to container, then panning.\n    const panX = this.cutoutRect.left - this.bBoxRect.left -\n      (imgRect.width - this.cutoutRect.width) / 2;\n    const panY = this.cutoutRect.top - this.bBoxRect.top -\n      (imgRect.height - this.cutoutRect.height) / 2;\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  onZoom(e) {\n    this.handleZoom(e.target.value);\n  }\n\n  handleZoom(zoom) {\n    let panX = this.state.panX;\n    let panY = this.state.panY;\n\n    // Ensure that the image at the new zoom is not outside of the cutout boundaries.\n    // Calculate image coordinates at the new zoom.\n    const imgLeft = this.originX - (this.originX - panX) * zoom;\n    const imgRight = imgLeft + this.imageWidth * zoom;\n    // Cutout in the same coordinates as the image.\n    const coLeft = this.cutoutRect.left - this.bBoxRect.left;\n    const coRight = coLeft + this.cutoutRect.width;\n    if (coLeft < imgLeft) {\n      panX -= imgLeft - coLeft;\n    } else if (coRight > imgRight) {\n      panX += coRight - imgRight;\n    }\n    const imgTop = this.originY - (this.originY - panY) * zoom;\n    const imgBottom = imgTop + this.imageHeight * zoom;\n    const coTop = this.cutoutRect.top - this.bBoxRect.top;\n    const coBottom = coTop + this.cutoutRect.height;\n    if (coTop < imgTop) {\n      panY -= imgTop - coTop;\n    } else if (coBottom > imgBottom) {\n      panY += coBottom - imgBottom;\n    }\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  mouseDown(e) {\n    if (e.touches) {\n      this.mouseX = e.touches[0].pageX;\n      this.mouseY = e.touches[0].pageY;\n    } else {\n      this.mouseX = e.pageX;\n      this.mouseY = e.pageY;\n    }\n\n    window.addEventListener('mousemove', this.mouseMove, { passive: false });\n    window.addEventListener('touchmove', this.mouseTouch, { passive: false });\n    window.addEventListener('mouseup', this.mouseUp, { passive: true });\n    window.addEventListener('touchend', this.mouseUp, { passive: true });\n    // Disable text selection in the entire document.\n    document.body.style['userSelect'] = 'none';\n  }\n\n  // Perform image panning.\n  translate(pageX, pageY) {\n    const dX = pageX - this.mouseX;\n    const dY = pageY - this.mouseY;\n\n    this.mouseX = pageX;\n    this.mouseY = pageY;\n\n    // Make sure the image is within the cutout window.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    // Check if the new position is within the boundaries, and if not if it's closer to them.\n    let panX = Cropper.checkBound(this.state.panX, [imgRect.left, imgRect.right],\n      [this.cutoutRect.left, this.cutoutRect.right], dX);\n    let panY = Cropper.checkBound(this.state.panY, [imgRect.top, imgRect.bottom],\n      [this.cutoutRect.top, this.cutoutRect.bottom], dY);\n\n    this.positionAll(panX, panY, this.state.zoom);\n  }\n\n  // Image panning.\n  mouseMove(e) {\n    e.preventDefault();\n    this.translate(e.pageX, e.pageY);\n  }\n\n  mouseTouch(e) {\n    e.preventDefault();\n\n    if (e.touches.length == 1) {\n      this.translate(e.touches[0].pageX, e.touches[0].pageY);\n      return;\n    }\n\n    // Image zooming by pinching.\n    const [touch0, touch1] = e.touches;\n    const distance = Math.sqrt((touch0.pageX - touch1.pageX) * (touch0.pageX - touch1.pageX) +\n      (touch0.pageY - touch1.pageY) * (touch0.pageY - touch1.pageY));\n\n    if (!this.prevDistance) {\n        this.prevDistance = distance / this.state.zoom;\n    }\n\n    let scale = (distance / this.prevDistance);\n    this.handleZoom(Math.max(this.minZoom, Math.min(this.maxZoom, scale)));\n  }\n\n  mouseUp(e) {\n    window.removeEventListener('mousemove', this.mouseMove);\n    window.removeEventListener('touchmove', this.mouseTouch);\n    window.removeEventListener('mouseup', this.mouseUp);\n    window.removeEventListener('touchend', this.mouseUp);\n    // Re-enable text selection.\n    document.body.style['userSelect'] = '';\n\n    this.positionAll(this.state.panX, this.state.panY, this.state.zoom);\n  }\n\n  render() {\n    // transform3d: position and scale.\n    const t3d = `translate3d(${this.state.panX}px, ${this.state.panY}px, 0) scale(${this.state.zoom})`;\n    // transformOrigin: zoom origin.\n    const orig = `${this.state.originX}px ${this.state.originY}px`;\n\n    // Overlay position and size are exactly equal to the position and size of the transformed image\n    // except it uses different coordinates.\n    const overlay = {\n      top: `${this.originY - this.state.originY * this.state.zoom}px`,\n      left: `${this.originX - this.state.originX * this.state.zoom}px`,\n      width: `${this.imageWidth * this.state.zoom}px`,\n      height: `${this.imageHeight * this.state.zoom}px`\n    };\n    return (\n      <div className=\"cropper\">\n        <div className=\"bounding-box\" ref={this.boundingBox}>\n          <img src={this.props.source} className=\"preview\" alt=\"\"\n            style={{transform: t3d, transformOrigin: orig}} ref={this.preview} onLoad={this.initScaling} />\n          <div className=\"cutout circle\" ref={this.cutout} />\n          <div className=\"overlay\" style={overlay} ref={this.overlay} />\n        </div>\n        <div className=\"zoom-wrapper\">\n          <input type=\"range\" className=\"zoomer\"\n            step=\"0.001\" min={this.state.minZoom} max={this.state.maxZoom} value={this.state.zoom} onChange={this.onZoom} />\n        </div>\n      </div>\n    );\n  }\n}\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Cropper from './cropper.jsx';\nimport { imageCrop } from '../lib/blob-helpers.js';\n\nexport default class AvatarCrop extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n      scale: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Cut out in image coordinates and desired scale factor.\n  handleChange(left, top, width, height, scale) {\n    this.setState({\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      scale: scale\n    });\n  }\n\n  handleSubmit() {\n    imageCrop(this.props.mime, this.props.avatar,\n      this.state.left, this.state.top,\n      this.state.width, this.state.height,\n      this.state.scale,\n      (mime, blob, width, height) => {\n        this.props.onSubmit(mime, blob, width, height);\n      },\n      (err) => {\n        this.props.onError(err);\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <Cropper\n            source={this.props.avatar}\n            onChange={this.handleChange} />\n        </div>\n        <div className=\"dialog-buttons\">\n          {this.props.onCancel ?\n            <button className=\"secondary\" onClick={this.props.onCancel}>\n              <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n            </button>\n            : null}\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value || ''});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n   handleStartEditing() {\n    if (!this.props.readOnly) {\n      this.setState({active: true}, () => {\n        if (this.selfRef.current) {\n          this.selfRef.current.focus();\n        }\n      });\n    }\n  }\n\n  handleEditingFinished(event) {\n    const value = this.state.value.trim();\n    if (this.props.required && (!event.target.checkValidity() || !value)) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (!this.state.active) {\n      let spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      let spanClass = 'in-place-edit' + (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (!this.props.multiline || this.props.multiline == 1) {\n        spanClass += ' short';\n      }\n\n      return (<span className={spanClass} onClick={this.handleStartEditing}>\n        <span>{spanText}</span>\n      </span>);\n    }\n\n    let element;\n    const attr = {};\n    if (this.props.type == 'password') {\n      element = VisiblePassword;\n      attr.onFinished = this.handlePasswordFinished;\n    } else {\n      if (this.props.multiline > 1) {\n        element = 'textarea';\n        attr.rows = this.props.multiline;\n        attr.className = 'inplace-edit';\n      } else {\n        element = 'input';\n        attr.type = this.props.type || 'text';\n      }\n      attr.value = this.state.value;\n      attr.onChange = this.handeTextChange;\n      attr.onKeyDown = this.handleKeyDown;\n      attr.onBlur = this.handleEditingFinished;\n    }\n    attr.placeholder = this.props.placeholder;\n    attr.required = this.props.required ? 'required' : '';\n    attr.autoComplete = this.props.autoComplete;\n    attr.autoFocus = true;\n    attr.ref = this.selfRef;\n\n    return React.createElement(element, attr, null);\n  }\n};\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags || [],\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const tags = nextProps.tags || [];\n    if (!arrayEqual(tags, prevState.tags) && !prevState.activated) {\n      return {tags: tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags || []});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags || []});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              tinode={this.props.tinode}\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              tabIndex={this.props.tabIndex}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// Widget for editing topic description.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarCrop from './avatar-crop.jsx';\nimport AvatarUpload from './avatar-upload.jsx';\nimport InPlaceEdit from './in-place-edit.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { AVATAR_SIZE, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE,\n  MAX_INBAND_ATTACHMENT_SIZE, MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nexport default class TopicDescEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: Tinode.isMeTopicName(this.props.topic),\n      owner: acs && acs.isOwner(),\n      fullName: topic.public ? topic.public.fn : undefined,\n      private: topic.private ? topic.private.comment : null,\n      description: topic.public ? topic.public.note : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      tags: topic.tags() || [],\n      newAvatar: null,\n      newAvatarMime: null\n    };\n\n    this.previousOnTags = null;\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageUpdated = this.handleImageUpdated.bind(this);\n    this.handleAvatarCropped = this.handleAvatarCropped.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleDescriptionUpdate = this.handleDescriptionUpdate.bind(this);\n    this.uploadAvatar = this.uploadAvatar.bind(this);\n    this.handleAvatarCropCancel = this.handleAvatarCropCancel.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    this.previousOnTags = topic.onTagsUpdated;\n    topic.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onTagsUpdated = this.previousOnTags;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn && this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(fn, null));\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onUpdateTopicDesc(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleDescriptionUpdate(desc) {\n    desc = desc.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (desc) {\n      this.setState({description: desc});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, null, null, desc));\n    }\n  }\n\n  // AvatarUpload widget has changed the avatar: received a new file or deleted the avatar.\n  handleImageUpdated(mime, img) {\n    // This will show the AvatarCropView is img is not null.\n    this.setState({newAvatar: img, newAvatarMime: mime});\n    if (!img) {\n      // Deleting the avatar.\n      this.setState({avatar: null});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, Tinode.DEL_CHAR));\n    }\n  }\n\n  // AvatarCropView calls this method when the user has cropped the image.\n  handleAvatarCropped(mime, blob, width, height) {\n    const url = blob ? URL.createObjectURL(blob) : null;\n    this.setState({avatar: url, newAvatar: null, newAvatarMime: null});\n    if (blob) {\n      this.uploadAvatar(mime, blob, width, height);\n    }\n  }\n\n  // Utility method for converting cropped avatar blob to bytes for sending inband or\n  // for uploading it to the server out of band.\n  uploadAvatar(mime, blob, width, height) {\n    const readyToUpload = (mime, blob, width, height) => {\n      if (blob.size > MAX_AVATAR_BYTES) {\n        // Too large to send inband - uploading out of band and sending as a link.\n        const uploader = this.props.tinode.getLargeFileHelper();\n\n        this.setState({uploading: true});\n        uploader.upload(blob)\n          .then((url) => {\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, url));\n          })\n          .catch((err) => {\n            this.props.onError(err, 'err');\n          })\n          .finally(() => {\n            this.setState({uploading: false});\n          });\n      } else {\n        this.setState({uploading: true});\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageUrl({data: base64bits, type: mime});\n          this.setState({source: du});\n          this.props.onUpdateTopicDesc(this.props.topic, theCard(null, du));\n          this.setState({uploading: false});\n        });\n      }\n    };\n\n    if (width > AVATAR_SIZE || height > AVATAR_SIZE || width != height) {\n      // Avatar is not square or too large even after cropping. Shrink it and make square.\n      imageScaled(blob, AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n        readyToUpload,\n        (err) => {\n          this.props.onError(err, 'err');\n        });\n    } else {\n      readyToUpload(mime, blob, width, height);\n    }\n  }\n\n  handleAvatarCropCancel(img) {\n    this.setState({newAvatar: null, newAvatarMime: null});\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    if (this.state.newAvatar) {\n      return (\n        <AvatarCrop\n          avatar={this.state.newAvatar}\n          mime={this.state.newAvatarMime}\n          onSubmit={this.handleAvatarCropped}\n          onCancel={this.handleAvatarCropCancel}\n          onError={this.props.onError} />\n      );\n    }\n\n    const editable = this.state.isMe || this.state.owner;\n\n    return (\n      <>\n      <div className=\"panel-form-column\">\n        <center>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            readOnly={!editable}\n            uid={this.props.topic}\n            title={this.state.fullName}\n            onImageUpdated={this.handleImageUpdated}\n            onError={this.props.onError} />\n        </center>\n        {this.state.isMe ?\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n                description=\"Input placeholder for person's full name\">{\n                (full_name_placeholder) => <InPlaceEdit\n                  placeholder={full_name_placeholder}\n                  value={this.state.fullName}\n                  required={true}\n                  onFinished={this.handleFullNameUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n        :\n          <>\n            <div className=\"group\">\n              <div><label className=\"small\">\n                <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                  description=\"Label for editing topic name\" />\n              </label></div>\n              <div>\n                <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n                  description=\"Prompt for entering topic name\">{\n                  (group_name_placeholder) => <InPlaceEdit\n                    placeholder={group_name_placeholder}\n                    readOnly={!editable}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                    description=\"Label for editing 'private'\" />\n                </label>\n              </div>\n              <div>\n                <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n                  description=\"Placeholder for editing 'private'\">{\n                  (private_placeholder) => <InPlaceEdit\n                    placeholder={private_placeholder}\n                    value={this.state.private}\n                    onFinished={this.handlePrivateUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n          </>\n        }\n        {editable || this.state.description ?\n          <div className=\"group\">\n            <div><label className=\"small\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label></div>\n            <div>\n              <FormattedMessage id=\"description_editing_placeholder\"\n                defaultMessage=\"Description (optional)\"\n                description=\"Placeholder for editing topic description\">{\n                (private_placeholder) => <InPlaceEdit\n                  placeholder={private_placeholder}\n                  readOnly={!editable}\n                  value={this.state.description}\n                  multiline={2}\n                  onFinished={this.handleDescriptionUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          : null\n        }\n      </div>\n      {editable ?\n        <>\n          <div className=\"hr\" />\n          <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n            description=\"Section title for TagManager\">{\n              (title_tag_manager) => <TagManager\n                tinode={this.props.tinode}\n                title={title_tag_manager}\n                activated={false}\n                tags={this.state.tags}\n                onSubmit={this.handleTagsUpdated} />\n          }</FormattedMessage>\n        </>\n        : null\n      }\n      </>\n    );\n  }\n};\n","// View for editing topic (including 'me' topic) parameters.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport TopicDescEdit from '../widgets/topic-desc-edit.jsx';\n\nimport { arrayEqual, asEmail, asPhone } from '../lib/utils.js';\n\nexport default class TopicCommon extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: this.props.topic == 'me',\n      owner: acs && acs.isOwner(),\n      credentials: (topic.getCredentials ? topic.getCredentials() : null) || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      tags: []\n    };\n\n    this.previousTagsUpdated = undefined;\n\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    topic.onCredsUpdated = this.tnCredsUpdated;\n\n    if (topic.onTagsUpdated != this.onTagsUpdated) {\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onCredsUpdated = undefined;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    const value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  // Server informs that the tags have been updated.\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated(tags);\n    }\n  }\n\n  // Request server to change tags.\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdateRequest(this.props.topic, tags);\n    }\n  }\n\n  render() {\n    const credentials = [];\n    if (this.state.isMe) {\n      this.state.credentials.map((cred) => {\n        credentials.push(\n          <div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n            <span> {!cred.done ?\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n                <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                  description=\"Validate credentail call to action\" />\n              </a>\n            : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n              className=\"material-icons gray\">delete_outline</i></a></span>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className=\"scrollable-panel\">\n        <TopicDescEdit\n          tinode={this.props.tinode}\n          topic={this.props.topic}\n          onUpdateTopicDesc={this.props.onUpdateTopicDesc}\n          onUpdateTags={this.handleTagsUpdated}\n          onError={this.props.onError} />\n        {this.state.isMe ?\n          <>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n                description=\"Label for user contacts\" />\n              </label>\n              <div className=\"quoted\">\n                {credentials}\n                {this.state.addCredActive ?\n                  <input type=\"text\" value={this.state.value}\n                    className={this.state.addCredInvalid ? 'invalid' : null}\n                    placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                    onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n                  : null}\n                <div>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                    <i className=\"material-icons\">add</i>\n                    <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n                  </a></div>\n              </div>\n            </div>\n          </>\n        : null\n      }\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from './in-place-edit.jsx';\n\nimport { NO_ACCESS_MODE } from '../config.js';\n\nconst messages = defineMessages({\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  topic_delete: {\n    id: 'topic_delete',\n    defaultMessage: 'Delete Conversation',\n    description: 'Alert title when deleting the topic.'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n});\n\nclass TopicSecurity extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleDeleteTopic = this.handleDeleteTopic.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n  }\n\n  handleDeleteTopic(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.topic_delete), // title\n      formatMessage(messages.topic_delete_warning), // content\n      (() => { this.props.onDeleteTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.props.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          {!this.props.channel ?\n            <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n              <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages)\n              }\n            </a>\n            :\n            null\n          }\n          {this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleDeleteTopic}>\n              <i className=\"material-icons\">delete</i> &nbsp;{formatMessage(messages.topic_delete)}\n            </a>\n            :\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n            </a>\n          }\n          {!this.props.groupTopic ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n              <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n            </a>\n            :\n            null\n          }\n          {!this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n              <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n            </a>\n            :\n            null\n          }\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          {this.props.groupTopic ?\n            <>\n              <div className=\"group\">\n                <label>\n                  <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                    description=\"Label for current user permissions\" />\n                </label> <tt className=\"clickable\"\n                  onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                  {this.props.access}\n                </tt>\n              </div>\n              <div className=\"group\">\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                    description=\"Label for default access mode\" />\n                  </label>\n                </div>\n                <div className=\"quoted\">\n                  <div>Auth: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('auth')}}>{this.props.auth}</tt>\n                  </div>\n                  <div>Anon: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('anon')}}>{this.props.anon}</tt>\n                  </div>\n                </div>\n              </div>\n            </>\n            :\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                    description=\"Section title\" />\n                </label>\n              </div>\n              <div className=\"quoted\">\n                <div>\n                  <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                    description=\"Label for the current user\" /> <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                    {this.props.access}\n                  </tt>\n                </div>\n                <div>{this.props.fullName ? this.props.fullName : formatMessage(messages.other_user)}:\n                  &nbsp;<tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('given')}}>\n                    {this.props.modeGiven2}\n                  </tt>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TopicSecurity);\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\nimport TopicSecurity from '../widgets/topic-security.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'panel_title_info',\n    description: 'Title for InfoView',\n    defaultMessage: 'Info'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  members: {\n    id: 'panel_title_members',\n    description: 'Title for managing group members view.',\n    defaultMessage: 'Members'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  perm_want: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  perm_given: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  perm_auth: {\n    id: 'permissions_authenticated',\n    defaultMessage: 'Authenticated',\n    description: 'Title for editing default authenticated permissions'\n  },\n  perm_anon: {\n    id: 'permissions_anonymous',\n    defaultMessage: 'Anonymous',\n    description: 'Title for editing default anonymous permissions'\n  },\n  perm_user: {\n    id: 'permissions_user',\n    defaultMessage: 'User\\'s Permissions',\n    description: 'Title for editing user\\'s permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n});\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      description: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      trustedBadges: [],\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.resetTags = this.resetTags.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n    this.handleBackNavigate = this.handleBackNavigate.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n      this.resetTags(topic);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    const badges = [];\n    if (topic.trusted) {\n      for (const [key, val] of Object.entries(topic.trusted)) {\n        if (val) {\n          badges.push(key);\n        }\n      }\n    }\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: _clip(topic.public ? topic.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(topic.public ? topic.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      trustedBadges: badges,\n      private: _clip(topic.private ? topic.private.comment : null, MAX_TITLE_LENGTH),\n      archived: topic.isArchived(),\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType() || topic.chan,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n  }\n\n  resetTags(topic) {\n    if (topic.getType() != 'grp') {\n      return;\n    }\n\n    const acs = topic.getAccessMode();\n    if (acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handleUnarchive(ignored, ignored2) {\n    this.props.onTopicUnArchive(this.props.topic);\n  }\n\n  handlePermissionsChanged(which, perm) {\n    switch (which) {\n      case 'auth':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.handleBackNavigate();\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.perm_want);\n        titleCompare = formatMessage(messages.perm_given);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.error(\"Unknown permission editing mode '\" + which + \"'\");\n        return;\n    }\n    this.setState({\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n    this.props.onNavigate(`perm/${which}`);\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.props.onNavigate('members');\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.props.onNavigate('info');\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleBackNavigate() {\n    const args = (this.props.panel || 'info').split('/');\n    if (args[0] == 'info') {\n      this.props.onNavigate(null);\n    } else if (args[0] == 'perm') {\n      if (args[1] == 'user') {\n        this.props.onNavigate('info');\n      } else {\n        this.props.onNavigate('security');\n      }\n    } else {\n      this.props.onNavigate('info');\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const isMe = this.props.tinode.isMe(params.topicName);\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: () => {\n        this.handleLaunchPermissionsEditor(isMe ? 'want' : 'user', params.topicName);\n      }}\n    ];\n    if (!isMe) {\n      menuItems.push('member_delete');\n    }\n    menuItems.push(user.acs.isMuted() ? 'member_unmute' : 'member_mute');\n    if (!isMe) {\n      menuItems.push(user.acs.isJoiner() ? 'member_block' : 'member_unblock');\n    }\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const args = (this.props.panel || 'info').split('/');\n    const view = args[0];\n    args.shift();\n\n    const {formatMessage} = this.props.intl;\n    const panelTitle = formatMessage((view == 'perm' ? messages['perm_' + args[0]] : messages[view])\n      || messages['info']);\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">{panelTitle}</div>\n          <div>\n            <MenuCancel onCancel={this.handleBackNavigate} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {view == 'members' ?\n          <GroupManager\n            tinode={this.props.tinode}\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleBackNavigate}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        view == 'perm' && args.length > 0 ?\n          <PermissionsEditor\n            tinode={this.props.tinode}\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={(mode) => this.handlePermissionsChanged(args[0], mode)}\n            onCancel={this.handleBackNavigate} />\n          :\n        view == 'general' ?\n          <TopicCommon\n            tinode={this.props.tinode}\n            topic={this.props.topic}\n            onCredAdd={this.props.onCredAdd}\n            onTopicTagsUpdateRequest={this.props.onTopicTagsUpdateRequest}\n            onCredConfirm={this.props.onCredConfirm}\n            onCredDelete={this.props.onCredDelete}\n            onUpdateTopicDesc={this.props.onTopicDescUpdateRequest}\n            onError={this.props.onError} />\n          :\n        view == 'security' ?\n          <TopicSecurity\n            topic={this.props.topic}\n            owner={this.state.owner}\n            admin={this.state.admin}\n            sharer={this.state.sharer}\n            deleter={this.state.deleter}\n            muted={this.state.muted}\n\n            groupTopic={this.state.groupTopic}\n            channel={this.state.channel}\n            access={this.state.access}\n            modeGiven={this.state.modeGiven}\n            modeWant={this.state.modeWant}\n            modeGiven2={this.state.modeGiven2}\n            modeWant2={this.state.modeWant2}\n            auth={this.state.auth}\n            anon={this.state.anon}\n\n            onShowAlert={this.props.onShowAlert}\n            onDeleteMessages={this.props.onDeleteMessages}\n            onLeaveTopic={this.props.onLeaveTopic}\n            onBlockTopic={this.props.onBlockTopic}\n            onReportTopic={this.props.onReportTopic}\n            onLaunchPermissionsEditor={this.handleLaunchPermissionsEditor}\n            onNavigate={this.props.onNavigate} />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-column\">\n              <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n                <i className=\"material-icons\">edit</i>&nbsp;\n                <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n              </a>\n              <center>\n                <AvatarUpload\n                  tinode={this.props.tinode}\n                  avatar={this.state.avatar}\n                  readOnly={true}\n                  uid={this.props.topic}\n                  title={this.state.fullName} />\n              </center>\n              <div className=\"group\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div className=\"large ellipsized\">{this.state.fullName}\n                {this.state.channel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}</div>\n              </div>\n              {this.state.private ?\n                <div className=\"group\">\n                  <div><label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label></div>\n                  <div className=\"large ellipsized\">{this.state.private}</div>\n                </div>\n                : null\n              }\n              <div className=\"group\">\n                <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                  description=\"Label for user address (ID)\" /></label>&nbsp;\n                <tt>{this.state.address}</tt>\n              </div>\n              <div className=\"group\">\n                <BadgeList trustedBadges={this.state.trustedBadges} />\n              </div>\n              {this.state.description ?\n                <div className=\"group\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                      description=\"Label for editing topic description\" />\n                  </label>\n                  <div>{this.state.description}</div>\n                </div> : null}\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <label>\n                <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                  description=\"Label for Muting/unmuting the topic\" />\n              </label>\n              <CheckBox name=\"P\" checked={this.state.muted} onChange={this.handleMuted} />\n            </div>\n            {this.state.archived ?\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_unarchive_topic\" defaultMessage=\"Archived:\"\n                    description=\"Label for unarchiving the topic\" />\n                </label>\n                <CheckBox name=\"archived\" checked={true} onChange={this.handleUnarchive} />\n              </div>\n              :\n              null\n            }\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n                <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n                  defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n              </a>\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-row\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                      description=\"Section title or label\" />\n                  </label>\n                </div>\n                <div className=\"panel-form-row\">\n                  <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                    <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                      defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                  </a>\n                </div>\n                <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                  description=\"Shown in place of group members\">{\n                  (no_members) => <ContactList\n                    tinode={this.props.tinode}\n                    contacts={this.state.contactList}\n                    myUserId={this.props.myUserId}\n                    emptyListMessage={no_members}\n                    topicSelected={this.state.selectedContact}\n                    showOnline={false}\n                    showUnread={false}\n                    showMode={true}\n                    noScroll={true}\n                    onTopicSelected={this.handleMemberSelected}\n                    showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                  />\n                }</FormattedMessage>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\n\nimport { fullFormatter, quoteFormatter } from '../lib/formatters.js';\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nclass BaseChatMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.formatterContext = {\n      getFormatter: (tp) => { return tp == 'QQ' ? quoteFormatter : null; },\n      formatMessage: props.intl.formatMessage.bind(props.intl),\n      viewportWidth: props.viewportWidth,\n      authorizeURL: props.tinode.authorizeURL.bind(props.tinode),\n      onImagePreview: this.handleImagePreview,\n      onFormButtonClick: this.handleFormButtonClick,\n      onQuoteClick: this.handleQuoteClick\n    };\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    if (this.props.userIsWriter &&\n        this.props.received > Tinode.MESSAGE_STATUS_FAILED &&\n        this.props.received < Tinode.MESSAGE_STATUS_DEL_RANGE) {\n      menuItems.push('menu_item_reply');\n    }\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX, pickReply: this.props.pickReply }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const replyToSeq = this.props.replyToSeq;\n    if (replyToSeq) {\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, (att, i) => {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name}\n          uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime}\n          size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      const tree = Drafty.format(content, fullFormatter, this.formatterContext);\n      content = React.createElement(React.Fragment, null, tree);\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n        <FormattedMessage id=\"invalid_content\"\n          defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i></>\n    }\n\n    return (\n      <li ref={this.props.innerRef} className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                tinode={this.props.tinode}\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              {this.props.userName ||\n                <i><FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\" /></i>\n              }\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\nconst IntlChatMessage = injectIntl(BaseChatMessage);\nconst ChatMessage = React.forwardRef((props, ref) => <IntlChatMessage innerRef = {ref} {...props} />);\n\nexport default ChatMessage;\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\nimport { quoteFormatter, replyFormatter } from '../lib/formatters.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.replyTo && this.props.onQuoteClick) {\n      const replyToSeq = this.props.replyTo.seq;\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n\n    const quote = this.props.replyTo ?\n      Drafty.format(this.props.replyTo.content, replyFormatter, {\n        formatMessage: formatMessage.bind(this.props.intl),\n        authorizeURL: this.props.tinode.authorizeURL.bind(this.props.tinode)\n      }) :\n      null;\n\n    return (\n      <div id=\"send-message-wrapper\">\n      {quote ?\n        <div id=\"reply-quote-preview\">\n          <div className=\"cancel\">\n            <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancelReply();}}><i className=\"material-icons gray\">close</i></a>\n          </div>\n          {quote}\n        </div>\n      :\n      null}\n\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          tinode={this.props.tinode}\n          replyTo={this.props.replyTo}\n          onCancelReply={this.props.onCancelReply}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            tinode={this.props.tinode}\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            tinode={this.props.tinode}\n            replyTo={this.props.replyTo}\n            onCancelReply={this.props.onCancelReply}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].replace('#', '').split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        const item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlInfoPanel(hash, infopanel) {\n    const parsed = this.parseUrlHash(hash);\n    if (infopanel) {\n      parsed.params.info = infopanel;\n    } else {\n      delete parsed.params.info;\n    }\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport ContactBadges from '../widgets/contact-badges.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY,\n  IMAGE_THUMBNAIL_DIM } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, base64ToBlob, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat, letterTileColorId } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  invalid_content: {\n    id: 'invalid_content',\n    defaultMessage: 'invalid content',\n    description: 'Shown when the message is unreadable'\n  },\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.retrySend = this.retrySend.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleMessageUpdate = this.handleMessageUpdate.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.handlePickReply = this.handlePickReply.bind(this);\n    this.handleCancelReply = this.handleCancelReply.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.chatMessageRefs = {};\n    this.getOrCreateMessageRef = this.getOrCreateMessageRef.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  getOrCreateMessageRef(seqId) {\n    if (this.chatMessageRefs.hasOwnProperty(seqId)) {\n      return this.chatMessageRefs[seqId];\n    }\n    const ref = React.createRef();\n    this.chatMessageRefs[seqId] = ref;\n    return ref;\n  }\n\n  componentDidMount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messageCount != this.state.messageCount) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleMessageUpdate;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if ((this.state.topic != prevState.topic) || !prevProps.ready) {\n      this.subscribe(topic);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messageCount: 0,\n        latestClearId: -1,\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        isVerified: false,\n        isStaff: false,\n        isDangerous: false,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false,\n        reply: null\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        reply: null\n      };\n\n      if (topic) {\n        // Topic exists.\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        Object.assign(nextState, {\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          messageCount: topic.messageCount(),\n          latestClearId: topic.maxClearId(),\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messageCount: 0,\n          latestClearId: -1,\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  subscribe(topic) {\n    if (!topic || topic.isSubscribed() || !this.props.ready) {\n      return;\n    }\n\n    // Is this a new topic?\n    const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n    // Don't request the tags. They are useless unless the user\n    // is the owner and is editing the topic.\n    let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n    if (this.state.isReader || newTopic) {\n      // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n      getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n      if (this.state.isReader) {\n        getQuery = getQuery.withLaterDel();\n      }\n      // And show \"loading\" spinner.\n      this.setState({ fetchingMessages: true });\n    }\n\n    const setQuery = newTopic ? this.props.newTopicParams : undefined;\n    topic.subscribe(getQuery.build(), setQuery)\n      .then((ctrl) => {\n        if (ctrl.code == 303) {\n          // Redirect to another topic requested.\n          HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n          return;\n        }\n        if (this.state.topic != ctrl.topic) {\n          this.setState({topic: ctrl.topic});\n        }\n        this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n        // If there are unsent messages, try sending them now.\n        topic.queuedMessages((pub) => {\n          if (!pub._sending && topic.isSubscribed()) {\n            this.retrySend(pub);\n          }\n        });\n      })\n      .catch((err) => {\n        console.error(\"Failed subscription to\", this.state.topic);\n        this.props.onError(err.message, 'err');\n        const blankState = MessagesView.getDerivedStateFromProps({}, {});\n        blankState.title = this.props.intl.formatMessage(messages.not_found);\n        this.setState(blankState);\n      });\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (this.state.fetchingMessages) {\n      return;\n    }\n\n    if (event.target.scrollTop <= 0) {\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n        this.setState({fetchingMessages: true}, () => {\n          topic.getMessagesPage(MESSAGES_PAGE)\n            .catch((err) => this.props.onError(err.message, 'err'))\n            .finally(() => this.setState({fetchingMessages: false}));\n          });\n      }\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  // The 'msg' could be false-ish if some message ranges were deleted.\n  handleMessageUpdate(msg) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (!msg) {\n      // msg could be null if one or more messages were deleted.\n      // Updating state to force redraw.\n      this.setState({latestClearId: topic.maxClearId()});\n      return;\n    }\n\n    clearTimeout(this.keyPressTimer)\n    this.setState({messageCount: topic.messageCount(), typingIndicator: false});\n\n    // Scroll to the bottom if the message is added to the end of the message list.\n    // TODO: This should be replaced by showing a \"scroll to bottom\" button.\n    if (topic.isNewMessage(msg.seq)) {\n      this.setState({scrollPosition: 0});\n    }\n\n    // Aknowledge messages except own messages. They are\n    // automatically assumed to be read and recived.\n    const status = topic.msgStatus(msg, true);\n    if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n      this.postReadNotification(msg.seq);\n    }\n    // This will send \"received\" notifications right away.\n    this.props.onData(msg);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        this.keyPressTimer = setTimeout(() => {\n          this.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.info(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.info(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // sendMessage sends the message with an optional subscription to topic first.\n  sendMessage(msg, uploadCompletionPromise, uploader) {\n    let head;\n    if (this.state.reply && this.state.reply.content) {\n      head = {reply: '' + this.state.reply.seq};\n      // Turn it into Drafty so we can make a quoted Drafty object later.\n      if (typeof msg == 'string') {\n        msg = Drafty.parse(msg);\n      }\n      msg = Drafty.append(this.state.reply.content, msg);\n      this.setState({reply: null});\n    }\n    this.props.sendMessage(msg, uploadCompletionPromise, uploader, head);\n  }\n\n  // Retry sending a message.\n  retrySend(pub) {\n    this.props.sendMessage(pub.content, undefined, undefined, pub.head);\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyMine, tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.parse(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.parse(caption));\n      }\n      this.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (mime, blob, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const found = topic.findMessage(seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  handlePickReply(seq, content) {\n    this.setState({reply: null});\n\n    if (!seq || !content) {\n      return;\n    }\n\n    if (typeof content == 'string') {\n      content = Drafty.init(content);\n    }\n    if (Drafty.isValid(content)) {\n      content = Drafty.preview(content, 30);\n    } else {\n      // /!\\ invalid content.\n      content = Drafty.append(Drafty.init('\\u26A0 '),\n        Drafty.wrapInto(this.props.intl.formatMessage(messages.invalid_content), 'EM'));\n    }\n\n    // Get the author.\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const msg = topic.findMessage(seq);\n    let senderName, senderId;\n    if (msg) {\n      senderId = msg.from || 'chan';\n      if (senderId != this.props.myUserId) {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const user = topic.userDesc(senderId);\n        if (user && user.public) {\n          senderName = user.public.fn;\n        }\n      } else {\n        senderName = this.props.myUserName;\n      }\n    }\n\n    // Make small image previews.\n    const images = [];\n    Drafty.entities(content, (data, idx, tp) => {\n      if (tp == 'IM-disable') {\n        images.push({\n          tp: tp,\n          data: data\n        });\n      }\n    });\n\n    // Turn all images into thumbnails.\n    const promises = images.map((ex) => {\n      return new Promise((resolve, reject) => {\n        const handleFailure = () => {\n          delete ex.data.val;\n          delete ex.data.name;\n          ex.data.width = IMAGE_THUMBNAIL_DIM;\n          ex.data.height = IMAGE_THUMBNAIL_DIM;\n          ex.data.maxWidth = IMAGE_THUMBNAIL_DIM;\n          ex.data.maxHeight = IMAGE_THUMBNAIL_DIM;\n        };\n        const scale = (origBlob) => {\n          imageScaled(origBlob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, false,\n            // Success\n            (mime, blob, width, height, unused) => {\n              ex.data.mime = mime;\n              ex.data.size = blob.size;\n              ex.data.width = width;\n              ex.data.height = height;\n              delete ex.data.ref;\n              // Keeping the original file name, if provided: ex.data.name;\n\n              blobToBase64(blob, (blobMime, tinyBits64) => {\n                ex.data.val = tinyBits64;\n                resolve(true);\n              });\n            },\n            // Failure\n            (err) => {\n              handleFailure();\n              reject(`Could not scale image: ${err}`);\n            });\n        }\n        if (ex.data.val) {\n          const b = base64ToBlob(ex.data.val, ex.data.mime);\n          if (b) {\n            scale(b);\n          } else {\n            handleFailure();\n          }\n        } else {\n          fetch(this.props.tinode.authorizeURL(sanitizeImageUrl(ex.data.ref)))\n            .then(e => {\n              if (e.ok) {\n                return e.blob();\n              } else {\n                handleFailure();\n                reject(`Image fetch unsuccessful: ${e.status} ${e.statusText}`);\n              }\n            })\n            .then((b) => scale(b))\n            .catch((err) => reject(`Error fetching image data: ${err}`));\n          return;\n        }\n      });\n    });\n\n    Promise.all(promises)\n      .catch((err) => {\n        this.props.onError(err, 'err');\n      })\n      .finally(() => {\n        // All done. Create a reply quote.\n        this.setState({\n          reply: {\n            content: Drafty.quote(senderName, senderId, content),\n            seq: seq\n          }\n        });\n      });\n  }\n\n  handleCancelReply() {\n    this.setState({reply: null})\n  }\n\n  handleQuoteClick(replyToSeq) {\n    const ref = this.getOrCreateMessageRef(replyToSeq);\n    if (ref && ref.current) {\n      ref.current.scrollIntoView({block: \"center\", behavior: \"smooth\"});\n      ref.current.classList.add('flash');\n      setTimeout(() => { ref.current.classList.remove('flash') } , 1000);\n    } else {\n      console.error(\"Unresolved message ref\", replyToSeq);\n    }\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            tinode={this.props.tinode}\n            replyTo={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            tinode={this.props.tinode}\n            replyTo={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        const icon_badges = [];\n        if (topic.trusted) {\n          if (topic.trusted.verified) {\n            icon_badges.push({icon: 'verified', color: 'badge-inv'});\n          }\n          if (topic.trusted.staff) {\n            icon_badges.push({icon: 'staff', color: 'badge-inv'});\n          }\n          if (topic.trusted.danger) {\n            icon_badges.push({icon: 'dangerous', color: 'badge-inv'});\n          }\n        }\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        topic.messages((msg, prev, next, i) => {\n          let nextFrom = next ? (next.from || null) : 'chan';\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          // Ref for this chat message.\n          const ref = this.getOrCreateMessageRef(msg.seq);\n          let replyToSeq = msg.head ? parseInt(msg.head.reply) : null;\n          if (!replyToSeq || isNaN(replyToSeq)) {\n            replyToSeq = null;\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}  // Used by `formatter`.\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              pickReply={this.handlePickReply}\n              replyToSeq={replyToSeq}\n              onQuoteClick={this.handleQuoteClick}\n              ref={ref}\n              userIsWriter={this.state.isWriter}\n              key={msg.seq} />\n          );\n        });\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  tinode={this.props.tinode}\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }<ContactBadges badges={icon_badges} /></div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  tinode={this.props.tinode}\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                tinode={this.props.tinode}\n                disabled={!this.state.isWriter}\n                onKeyPress={this.sendKeyPress}\n                onSendMessage={this.sendMessage}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError}\n                replyTo={this.state.reply}\n                onQuoteClick={this.handleQuoteClick}\n                onCancelReply={this.handleCancelReply} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    const icon_badges = [];\n    if (this.props.trustedBadges) {\n      this.props.trustedBadges.map((b) => {\n        icon_badges.push({icon: b, color: 'badge-inv'});\n      });\n    }\n    let avatar = null;\n    if (this.props.tinode) {\n      avatar = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n    }\n    return (\n      <div id=\"side-caption-panel\" className=\"caption-panel\">\n        {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n        {avatar ?\n          <div id=\"self-avatar\" className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={avatar}\n              topic={this.props.myUserId}\n              title={this.props.title} />\n          </div>\n          :\n          null}\n        <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}<ContactBadges badges={icon_badges}/></div>\n        {this.props.state === 'login' ?\n            <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n          this.props.state === 'contacts' ?\n            <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n          null}\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nexport default class AccountSettingsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: _clip(me.public ? me.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(me.public ? me.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              avatar={this.state.avatar}\n              readOnly={true}\n              uid={this.props.myUserId}\n              title={this.state.fullName} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large ellipsized\">{this.state.fullName}</div>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n              description=\"Label for user address (ID)\" /></label>&nbsp;\n            <tt>{this.props.myUserId}</tt>\n          </div>\n          <div className=\"group\">\n            <BadgeList trustedBadges={this.props.trustedBadges} />\n          </div>\n          {this.state.description ?\n            <div className=\"group\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                  description=\"Label for editing topic description\" />\n              </label>\n              <div>{this.state.description}</div>\n            </div> : null}\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n              defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          tinode={this.props.tinode}\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_warning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdatePassword(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccountDesc('me', undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fullName = React.createRef();\n\n    this.state = {\n      fullName: '', // full/formatted name\n      private: '',\n      description: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFieldEdit = this.handleFieldEdit.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    // this.fullName.current.focus();\n  }\n\n  handleFieldEdit(name, e) {\n    this.setState({[name]: e.target.value || ''});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fullName.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    const description = this.state.description.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, description, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-column\">\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              onError={this.props.onError}\n              onImageChanged={this.handleImageChanged} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                ref={this.fullName} value={this.state.fullName} onChange={this.handleFieldEdit.bind(this, 'fullName')}\n                autoFocus required tabIndex={0} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handleFieldEdit.bind(this, 'private')} tabIndex={1} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-desc\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label>\n            <FormattedMessage id=\"description_editing_placeholder\" defaultMessage=\"Description (optional)\"\n              description=\"Placeholder for editing topic description\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-desc\" placeholder={placeholder}\n                value={this.state.description} onChange={this.handleFieldEdit.bind(this, 'description')} tabIndex={2} />\n            }</FormattedMessage>\n          </div>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} tabIndex={3} onChange={this.handleChannelToggle} />&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tinode={this.props.tinode}\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tabIndex={4}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(uid) {\n    if (this.state.tabSelected == 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(uid);\n    }\n  }\n\n  handleNewGroupSubmit(name, description, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined,\n      {public: theCard(name, dataUrl, null, description), private: priv, tags: tags}, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                tinode={this.props.tinode}\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      sent: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else if (this.state.sent) {\n      this.props.onCancel();\n    } else {\n      const email = this.state.email.trim();\n      this.setState({email: email});\n      this.props.onRequest('email', email).then(() => {\n        this.setState({sent: true});\n      });\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {(this.state.token && this.state.scheme) ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n        : this.state.sent ?\n          <>\n            <br/>\n            <center><i className=\"material-icons huge green\">task_alt</i></center>\n            <br/>\n            <center><FormattedMessage id=\"password_reset_email_sent\"\n              defaultMessage=\"An email has been sent to {email}. Follow the directions in the email to reset your password.\"\n              values={{ email: <tt>{this.state.email}</tt> }}\n              description=\"Notification that the email with password reset instructions has been sent\" /></center>\n          </>\n        :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{\n            (this.state.token && this.state.scheme) ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" />\n            : this.state.sent ?\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\"\n              description=\"Button [OK]\" />\n            :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['def', 'ws', 'lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\n\nimport AccountSettingsView from './account-settings-view.jsx';\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for AccountSettingsView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar, badges;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n      badges = this.props.trustedBadges;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n      badges = null;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          tinode={this.props.tinode}\n          trustedBadges={badges}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            tinode={this.props.tinode}\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <AccountSettingsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            trustedBadges={this.props.trustedBadges}\n            onNavigate={this.props.onNavigate} /> :\n\n          (view === 'general' || view === 'crop') ?\n          <TopicCommon\n            topic=\"me\"\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateTopicDesc={this.props.onUpdateAccountDesc}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccountDesc={this.props.onUpdateAccountDesc}\n            onUpdatePassword={this.props.onUpdatePassword}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword}\n            onCancel={this.props.onCancel} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdatePasswordRequest = this.handleUpdatePasswordRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdateRequest = this.handleTagsUpdateRequest.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteTopicRequest = this.handleDeleteTopicRequest.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && !!settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      myTrustedBadges: [],\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      infoPanel: undefined,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n\n    // Process background notifications from the service worker.\n    if (typeof BroadcastChannel == 'function') {\n      const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n      serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n    } else {\n      // Safari is broken by design.\n      console.warn(\"Your browser does not support BroadcastChannel. Some features will not be available\");\n    }\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n      }\n\n      // Save possible topic name and navigate to blank state.\n      this.setState({requestedTopic: parsedNav.path[1]});\n      HashNavigation.navigateTo('');\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(data) {\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.error(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n\n        // Google could not be bothered to mention that onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // Handhe FCM pushes\n        // (a) for channels always,\n        // (b) pushes when the app is in foreground but has not focus.\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general','crop',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.warn(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      let topicName = hash.path[1] || null;\n      if (topicName != this.state.topicSelected) {\n        if (!Tinode.topicType(topicName)) {\n          // Clear invalid topic name.\n          topicName = null;\n        }\n        const newState = {\n          topicSelected: topicName\n        };\n        const acs = this.tinode.getTopicAccessMode(topicName);\n        if (acs) {\n          newState.topicSelectedAcs = acs;\n        }\n        this.setState(newState);\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: '', topicSelected: null});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      infoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    let token = this.tinode.getAuthToken();\n    if (login && password) {\n      token = null;\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        if (token) {\n          this.handleLogout();\n        }\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.trusted) {\n        const badges = [];\n        for (const [key, val] of Object.entries(desc.trusted)) {\n          if (val) {\n            badges.push(key);\n          }\n        }\n        this.setState({\n          myTrustedBadges: badges,\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.info(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n\n    const past = new Date(0);\n    newState.chatList.sort((a, b) => {\n      return (a.touched || past).getTime() - (b.touched || past).getTime();\n    });\n\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        infoPanel: undefined\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        infoPanel: undefined\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  //  - head - head dictionary to be attached to the message\n  handleSendMessage(msg, promise, uploader, head) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (head) {\n      msg.head = Object.assign(msg.head || {}, head);\n    }\n\n    if (!topic.isSubscribed()) {\n      // Topic is not subscribed yet. Subscribe.\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise\n        .then(() => topic.subscribe())\n        .then(() => {\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              this.sendMessage(pub);\n            }\n          });\n        });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.warn(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleToggleIncognitoMode(on) {\n    // Make state undefined.\n    this.setState({incognitoMode: null});\n\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      // Request failed, keep existing state.\n      this.setState({incognitoMode: !on});\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      this.setState({desktopAlerts: null});\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          Promise.resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.error(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.error(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.error(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('crop' == parsed.path[0]) {\n      path = 'general';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Sidepanel navigator. No need to bind to 'this'.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Topic info navigator. No need to bind to 'this'.\n  infoNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlInfoPanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, newTopicParams, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: newTopicParams.public, private: {comment: newTopicParams.private}};\n      params.tags = newTopicParams.tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was created, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, defacs) {\n    this.handleError();\n\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      let attachments;\n      if (pub) {\n        if (pub.photo) {\n          if (pub.photo.ref && pub.photo.ref != Tinode.DEL_CHAR) {\n            attachments = [pub.photo.ref];\n          } else if (!pub.photo.data || pub.photo.data == Tinode.DEL_CHAR) {\n            pub.photo = Tinode.DEL_CHAR;\n          }\n        }\n        params.public = pub;\n      }\n\n      if (typeof priv == 'string') {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      topic.setMeta({desc: params, attachments: attachments}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleUnarchive(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.archive(false);\n    }\n  }\n\n  handleUpdatePasswordRequest(password)  {\n    this.handleError();\n\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdateRequest(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    clearInterval(this.reconnectCountdown);\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request to hard-delete topic.\n    topic.delTopic(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: this.selfRef.current.getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      archived ? 'topic_restore' : 'topic_archive',\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', 'info'));\n    this.setState({infoPanel: 'info'});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    return this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\" ref={this.selfRef}>\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          trustedBadges={this.state.myTrustedBadges}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccountDesc={this.handleTopicUpdateRequest}\n          onUpdatePassword={this.handleUpdatePasswordRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.infoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          // User public.fn.\n          myUserName={this.state.sidePanelTitle}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.infoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n            panel={this.state.infoPanel}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onNavigate={this.infoNavigator}\n            onTopicDescUpdateRequest={this.handleTopicUpdateRequest}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteTopic={this.handleDeleteTopicRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdateRequest={this.handleTagsUpdateRequest}\n            onTopicUnArchive={this.handleUnarchive}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst htmlLang = allMessages[language] ? langauge : allMessages[baseLanguage] ? baseLanguage : 'en';\nconst messages = allMessages[htmlLang];\n\n// Set lang attribute of the HTML element: <html lang=\"XX\">\ndocument.getElementsByTagName('html')[0].setAttribute('lang', htmlLang);\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n      <TinodeWeb />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[478](0, __webpack_exports__, __webpack_require__);\n"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","IMAGE_THUMBNAIL_DIM","MAX_TITLE_LENGTH","MAX_TOPIC_DESCRIPTION_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","reply","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","selfRef","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","replyToMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","current","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","error","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","pickReply","menu","count","map","push","key","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","ref","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","idToColorClass","light","fg","userId","abs","value","hash","i","charCodeAt","stringToColorHash","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","createElement","type","rel","href","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","note","card","trim","mimeType","matches","exec","photo","data","substring","indexOf","arrayEqual","a","b","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","sanitizeImageUrl","sanitizedUrl","deliveryMarker","received","name","color","LetterTile","avatar","isGroup","iconColor","letter","charAt","authorizeURL","alt","src","onerror","LoadSpinner","large","clear","centered","show","AvatarUpload","state","source","handleFileReceived","componentDidUpdate","prevProps","setState","image","files","onImageUpdated","URL","createObjectURL","randId","random","substr","readOnly","uid","accept","onChange","htmlFor","uploading","icon_mapping","badge_verified","badge_staff","badge_danger","BadgeList","badges","trustedBadges","comment","CheckBox","handleChange","checked","ContactBadges","icon","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","LazyImage","loading","whenDone","FileProgress","width","progress","onCancel","UploadingImage","onCancelUpload","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","startsWith","fitImageSize","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","revokeObjectURL","dim","canvas","ctx","getContext","imageSmoothingEnabled","drawImage","mime","includes","blob","Promise","resolve","toBlob","clearRect","fname","idx","ext","at","lastIndexOf","fileNameForMime","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","drafty_form","drafty_attachment","drafty_image","handleImageData","el","attr","viewportWidth","minWidth","minHeight","Drafty","max","onImagePreview","shortenFileName","filename","slice","fullFormatter","values","call","onFormButtonClick","inner","child","undefined","val","onQuoteClick","concat","previewFormatter","inlineImageAttr","quoteFormatter","quoteImage","promise","base64ToBlob","Error","fetch","evt","ok","status","statusText","scaled","b64","bits","replyFormatter","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","icon_badges","isVerified","isStaff","isDangerous","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","showCheckmark","selected","showOnline","isChannel","unread","small","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","showUnread","connected","onTopicSelected","trusted","verified","staff","danger","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","ErrorPanel","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","avatarDisabled","autoFocus","tabIndex","onFocus","onBlur","onKeyDown","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","splice","query","instance","added","Object","keys","k","onSubmit","doContactFiltering","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","Cropper","panX","panY","originX","originY","zoom","minZoom","maxZoom","overlay","cutout","boundingBox","imageWidth","imageHeight","mouseX","mouseY","prevDistance","cutoutRect","bBoxRect","initScaling","onZoom","handleZoom","mouseDown","mouseUp","mouseMove","mouseTouch","positionAll","translate","passive","getBoundingClientRect","currPan","nextDiff","imgRect","imgLeft","imgRight","coLeft","coRight","imgTop","imgBottom","coTop","coBottom","touches","body","dX","dY","checkBound","touch0","touch1","distance","sqrt","t3d","orig","transform","transformOrigin","onLoad","step","AvatarCrop","objURL","imageCrop","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","spanText","spanClass","multiline","element","rows","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","TopicDescEdit","getAccessMode","isMe","fullName","description","newAvatar","newAvatarMime","previousOnTags","tnNewTags","handleFullNameUpdate","handleImageUpdated","handleAvatarCropped","handlePrivateUpdate","handleDescriptionUpdate","uploadAvatar","handleAvatarCropCancel","handleTagsUpdated","onTagsUpdated","onUpdateTopicDesc","desc","readyToUpload","uploader","getLargeFileHelper","upload","finally","unused","base64bits","du","onUpdateTags","editable","full_name_placeholder","group_name_placeholder","private_placeholder","title_tag_manager","TopicCommon","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousTagsUpdated","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","getType","creds","method","asPhone","asEmail","onCredAdd","onTopicTagsUpdateRequest","cred","meth","done","onCredConfirm","onCredDelete","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","other_user","TopicSecurity","handleDeleteTopic","handleDeleteMessages","handleLeave","handleBlock","handleReport","onDeleteTopic","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","channel","groupTopic","onLaunchPermissionsEditor","access","auth","anon","modeGiven2","general","security","crop","perm_want","perm_given","perm_auth","perm_anon","perm_user","_clip","str","InfoView","admin","muted","address","selectedContact","modeGiven","modeWant","modeWant2","contactList","previousMetaDesc","previousSubsUpdated","resetSubs","resetDesc","resetTags","onMetaDesc","onSubsUpdated","handleImageChanged","handleMuted","handleUnarchive","handlePermissionsChanged","handleLaunchPermissionsEditor","handleShowAddMembers","handleMemberUpdateRequest","handleMemberSelected","handleContextMenu","handleBackNavigate","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","entries","isAdmin","isSharer","isDeleter","archived","isArchived","isGroupType","isChannelType","chan","getMeta","startMetaQuery","withTags","build","subs","onTopicDescUpdate","ignored","onChangePermissions","ignored2","onTopicUnArchive","which","perm","onTopicDescUpdateRequest","userPermissionsEdited","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onNavigate","onInitFind","onMemberUpdateRequest","args","panel","menuItems","view","shift","panelTitle","displayMobile","errorLevel","errorText","searchableContacts","no_members","Attachment","downloader","downloadFile","mimetype","download","loaded","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","BaseChatMessage","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","handleQuoteClick","formatterContext","getFormatter","tp","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","userIsWriter","MESSAGE_STATUS_DEL_RANGE","ratio","replyToSeq","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","att","tree","innerRef","userName","IntlChatMessage","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","imageFileScaledToBase64","imageFileToBase64","filePasted","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","replyTo","messagePrompt","quote","onCancelReply","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","maxlength","Invitation","handleButtonAction","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","infopanel","online_now","last_seen","not_found","invalid_content","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendMessage","retrySend","sendImageAttachment","sendFileAttachment","sendKeyPress","subscribe","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleMessageUpdate","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","handlePickReply","handleCancelReply","chatMessageRefs","getOrCreateMessageRef","readNotificationQueue","readNotificationTimer","seqId","messagesScroller","messageCount","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","ready","nextState","docPreview","imagePreview","imagePostview","typingIndicator","fetchingMessages","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","latestClearId","maxClearId","isWriter","isReader","readingBlocked","unconformed","unconfirmed","isSubscribed","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","withLaterData","withLaterDel","setQuery","code","onNewTopicCreated","queuedMessages","pub","_sending","navigateTo","setUrlTopic","blankState","oldTopicName","isTopicCached","oldTopic","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","sendAt","noteRead","setMilliseconds","getMilliseconds","clearTimeout","keyPressTimer","isNewMessage","from","what","forceUpdate","attachJSON","parse","searchParams","set","search","open","messageSpecificMenuItems","onNewChat","noteKeyPress","uploadCompletionPromise","append","maxInbandAttachmentSize","urlPromise","maxExternAttachmentSize","limit","tinyMine","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","bits64","found","findMessage","_cancelled","init","isValid","wrapInto","senderName","senderId","userDesc","myUserName","images","entities","promises","handleFailure","origBlob","bin","atob","buf","ArrayBuffer","arr","Uint8Array","Blob","scrollIntoView","behavior","classList","add","remove","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","prev","next","nextFrom","thisFrom","isReply","parseInt","isNaN","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","AccountSettingsView","me","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","onImageChanged","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","showPermissionEditorFor","handlePasswordUpdate","handleHidePermissionsEditor","handleDeleteAccount","pwd","onUpdatePassword","onUpdateAccountDesc","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handleFieldEdit","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","dataUrl","priv","no_contacts_placeholder","searchResults","PasswordResetView","sent","token","scheme","onReset","onRequest","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","notif","support","newtpk","reset","SidepanelView","handleNewTopic","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdatePasswordRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleTagsUpdateRequest","handleLogout","handleDeleteTopicRequest","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","myTrustedBadges","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","infoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","play","foundContacts","merged","updated","past","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","on","enabled","updateObject","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","infoNavigator","setUrlInfoPanel","newGroupTopicName","oldName","newName","updateAccountBasic","getCurrentLogin","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","btoa","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","htmlLang","allMessages","langauge","setAttribute","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","__webpack_modules__"],"sourceRoot":""}