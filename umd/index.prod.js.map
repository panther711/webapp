{"version":3,"sources":["webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/views/topic-security-view.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/badge-list.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/more-button.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/account-settings-view.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/widgets/cropper.jsx","webpack://tinode-webapp/./src/widgets/avatar-crop.jsx","webpack://tinode-webapp/./src/widgets/topic-desc-edit.jsx","webpack://tinode-webapp/./src/views/topic-common-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","MAX_TITLE_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","selfRef","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","current","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","count","menu","map","push","key","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","ref","injectIntl","VisiblePassword","state","value","handleVisibility","handeTextChange","handleKeyDown","handleEditingFinished","setState","onChange","onFinished","setTimeout","activeElement","trim","tabIndex","onBlur","type","placeholder","required","autoFocus","autoComplete","onKeyDown","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","componentDidUpdate","prevProps","prevState","newValue","readOnly","focus","event","checkValidity","spanText","spanClass","multiline","element","attr","rows","CheckBox","handleChange","name","checked","icon_mapping","ContactBadges","badges","b","color","icon","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","LetterTile","avatar","isGroup","iconColor","abs","hash","i","charCodeAt","stringHash","letter","charAt","alt","src","onerror","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","createElement","rel","href","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","note","card","mimeType","matches","exec","photo","data","substring","indexOf","arrayEqual","a","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","sanitizeImageUrl","sanitizedUrl","deliveryMarker","received","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","drafty_image","drafty_form","drafty_attachment","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","isVerified","isStaff","isDangerous","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","Drafty","draftyFormatter","comment","showCheckmark","selected","showOnline","isChannel","unread","values","el","concat","mime","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","startsWith","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","URL","revokeObjectURL","dim","canvas","ctx","getContext","imageSmoothingEnabled","drawImage","includes","blob","Promise","resolve","toBlob","clearRect","fname","idx","ext","at","lastIndexOf","fileNameForMime","createObjectURL","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","handleSubmit","handleCancel","val","onSubmit","onCancel","names","skip","compare","c","userTitle","userAvatar","modeTitle","compareTitle","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","TopicSecurityView","me","getMeTopic","contacts","blockedCount","defacs","getDefaultAccess","auth","anon","showPermissionEditorFor","undefined","handleLaunchPermissionsEditor","handleHidePermissionsEditor","handlePermissionsChanged","handleDeleteMessages","handleLeave","handleBlock","handleReport","which","editedPermissions","perm","onUpdateAccountDesc","newState","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","channel","groupTopic","LoadSpinner","large","clear","centered","show","AvatarUpload","source","handleFileReceived","image","files","onImageUpdated","randId","random","substr","authorizeURL","uid","accept","htmlFor","uploading","badge_verified","badge_staff","badge_danger","BadgeList","trustedBadges","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","showUnread","connected","onTopicSelected","trusted","verified","staff","danger","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","ErrorPanel","level","onClearError","warn","text","whiteSpace","actionText","Chip","invalid","noAvatar","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","avatarDisabled","onFocus","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","m","delta","present","keepInitial","stat","sel","userId","status","splice","query","instance","added","Object","keys","k","doContactFiltering","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","requested","granted","other_user","_clip","str","InfoView","admin","muted","address","fullName","description","selectedContact","access","modeGiven","modeWant","modeGiven2","modeWant2","contactList","showMemberPanel","previousMetaDesc","previousSubsUpdated","previousTagsUpdated","resetSubs","resetDesc","onMetaDesc","onSubsUpdated","onTagsUpdated","handleFullNameUpdate","handlePrivateUpdate","handleImageChanged","handleMuted","handleShowAddMembers","handleHideAddMembers","handleMemberUpdateRequest","handleMemberSelected","handleTagsUpdated","handleContextMenu","getType","user2","subscriber","getGiven","getWant","subscribers","sub","getAccessMode","entries","isAdmin","isSharer","isDeleter","isGroupType","isChannelType","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","ignored","onChangePermissions","userPermissionsEdited","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","onMemberUpdateRequest","onTopicTagsUpdate","menuItems","displayMobile","errorLevel","errorText","searchableContacts","onNavigate","moreInfoExpanded","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","getLargeFileHelper","download","loaded","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","UploadingImage","ChatMessage","uploader","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","onImagePreview","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","ratio","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","att","userName","notFound","viewportWidth","minWidth","minHeight","loading","inner","child","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","error","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","getBoundingClientRect","maxlength","max","Invitation","handleButtonAction","evt","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","args","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","infopanel","online_now","last_seen","not_found","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleNewMessage","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","readNotificationQueue","readNotificationTimer","messagesScroller","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","setUrlTopic","blankState","nextState","docPreview","imagePreview","imagePostview","typingIndicator","msgs","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","isTopicCached","oldTopic","finally","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","shift","sendAt","noteRead","setMilliseconds","getMilliseconds","isNewMessage","from","what","clearTimeout","keyPressTimer","forceUpdate","sendMessage","attachJSON","parse","searchParams","set","search","open","messageSpecificMenuItems","onNewChat","noteKeyPress","maxInbandAttachmentSize","uploadCompletionPromise","upload","urlPromise","maxExternAttachmentSize","limit","tinyMine","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","init","bits64","found","find","_cancelled","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","nextFrom","thisFrom","isReply","userDesc","hi","ts","_uploader","lastSeen","cont","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","AccountSettingsView","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","onImageChanged","full_name_prompt","email_prompt","stay_logged_in","Cropper","panX","panY","originX","originY","zoom","minZoom","maxZoom","overlay","cutout","boundingBox","imageWidth","imageHeight","mouseX","mouseY","prevDistance","cutoutRect","bBoxRect","initScaling","onZoom","handleZoom","mouseDown","mouseUp","mouseMove","mouseTouch","positionAll","translate","passive","currPan","nextDiff","imgRect","imgLeft","imgRight","coLeft","coRight","imgTop","imgBottom","coTop","coBottom","touches","body","dX","dY","checkBound","touch0","touch1","distance","sqrt","t3d","orig","transform","transformOrigin","onLoad","step","AvatarCrop","objURL","imageCrop","TopicDescEdit","isMe","newAvatar","newAvatarMime","previousOnTags","tnNewTags","handleImageUpdated","handleAvatarCropped","handleDescriptionUpdate","uploadAvatar","handleAvatarCropCancel","onUpdateTopicDesc","readyToUpload","unused","base64bits","du","onUpdateTags","editable","full_name_placeholder","private_placeholder","title_tag_manager","TopicCommonView","credentials","getCredentials","addCredActive","addCredInvalid","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","creds","newCred","method","asPhone","asEmail","onCredAdd","cred","meth","done","onCredConfirm","onCredDelete","EditAccountView","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","handlePasswordUpdate","handleDeleteAccount","pwd","onUpdatePassword","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handlePrivateChange","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","dataUrl","priv","no_contacts_placeholder","searchResults","PasswordResetView","token","scheme","onReset","onRequest","reset","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","general","security","crop","notif","support","newtpk","SidepanelView","handleNewTopic","view","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdatePasswordRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleLogout","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleHideInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","myTrustedBadges","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","infoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","archived","isArchived","play","foundContacts","merged","updated","past","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","on","enabled","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","infoNavigator","setUrlInfoPanel","newGroupTopicName","oldName","newName","updateAccountBasic","getCurrentLogin","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","btoa","atob","base64ReEncode","panel","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","call","__webpack_modules__"],"mappings":"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","file":"index.prod.js","sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.18.0-alpha1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: when image dimensions are greater or the image is not square, it's resized to\n// a square of this size or less.\nexport const AVATAR_SIZE = 384;\n\n// Maximum size of an avatar in bytes for sending in-band. Bigger avatars will be sent out of band (as uploads).\nexport const MAX_AVATAR_BYTES = 4096;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n// Maximum length of topic description.\nexport const MAX_TOPIC_DESCRIPTION_LENGTH = 360;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation?',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  unarchive: {\n    id: 'menu_item_restore_topic',\n    defaultMessage: 'Restore',\n    description: 'Restore topic from archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'topic_restore': {\n        id: 'topic_restore',\n        title: formatMessage(messages.unarchive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(false).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (this.selfRef.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position} ref={this.selfRef}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n   handleStartEditing() {\n    if (!this.props.readOnly) {\n      this.setState({active: true}, () => {\n        if (this.selfRef.current) {\n          this.selfRef.current.focus();\n        }\n      });\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    const value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (!this.state.active) {\n      let spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      let spanClass = 'in-place-edit' + (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (!this.props.multiline || this.props.multiline == 1) {\n        spanClass += ' short';\n      }\n\n      return (<span className={spanClass} onClick={this.handleStartEditing}>\n        <span>{spanText}</span>\n      </span>);\n    }\n\n    let element;\n    const attr = {};\n    let value = null;\n    if (this.props.type == 'password') {\n      element = VisiblePassword;\n      attr.onFinished = this.handlePasswordFinished;\n    } else {\n      if (this.props.multiline > 1) {\n        element = 'textarea';\n        attr.rows = this.props.multiline;\n        attr.className = 'inplace-edit';\n        value = this.state.value;\n      } else {\n        element = 'input';\n        attr.type = this.props.type || 'text';\n        attr.value = this.state.value;\n      }\n      attr.onChange = this.handeTextChange;\n      attr.onKeyDown = this.handleKeyDown;\n      attr.onBlur = this.handleEditingFinished;\n    }\n    attr.placeholder = this.props.placeholder;\n    attr.required = this.props.required ? 'required' : '';\n    attr.autoComplete = this.props.autoComplete;\n    attr.autoFocus = true;\n    attr.ref = this.selfRef;\n\n    return React.createElement(element, attr, value);\n  }\n};\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block', 'staff': 'verified_user'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n  render() {\n    let badges = null;\n    if (this.props.badges && this.props.badges.length > 0) {\n      badges = [];\n      this.props.badges.map((b) => {\n        const color = (b.color ? ' ' + b.color : '');\n        if (b.icon) {\n          badges.push(<i className={'material-icons as-badge' + color} key={b.key || b.icon}>{icon_mapping[b.icon] || b.icon}</i>);\n        } else {\n          badges.push(<span className={'badge' + color} key={b.key || b.name}>{b.name}</span>);\n        }\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"../img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType, note) {\n  let card = null;\n  fn = fn && fn.trim();\n  note = note && note.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (typeof note == 'string') {\n    card = card || {};\n    card.note = note ? note : Tinode.DEL_CHAR;\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1),\n        ref: Tinode.DEL_CHAR\n      };\n    } else {\n      card.photo = {\n        data: Tinode.DEL_CHAR,\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (typeof url != 'string') {\n    return url;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'danger-color' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  },\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n});\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.isVerified) {\n      icon_badges.push({icon: 'verified', color: 'verified-color'});\n    }\n    if (this.props.isStaff) {\n      icon_badges.push({icon: 'staff', color: 'staff-color'});\n    }\n    if (this.props.isDangerous) {\n      icon_badges.push({icon: 'dangerous', color: 'danger-color'});\n    }\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, draftyFormatter, this))) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <ContactBadges badges={icon_badges} /><UnreadBadge count={this.props.unread} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            <div className=\"contact-comment\">{marker}{subtitle || '\\u00A0'}</div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\n\n// Converts Drafty object into a one-line preview.\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  if (el) {\n    const { formatMessage } = this.props.intl;\n    switch (style) {\n      case 'BR':\n        // Replace new line with a space.\n        el = React.Fragment;\n        values = [' '];\n        break;\n      case 'HL':\n        // Make highlight less prominent in preview.\n        attr.className = 'highlight preview';\n        break;\n      case 'LN':\n        // Disable links in previews.\n        el = 'span';\n        break;\n      case 'IM':\n        // Replace image with '[icon] Image'.\n        el = React.Fragment;\n        values = [<i key=\"im\" className=\"material-icons\">photo</i>, formatMessage(messages.drafty_image)];\n        break;\n      case 'BN':\n        el = 'span';\n        attr.className = 'flat-button faux';\n        break;\n      case 'FM':\n        el = React.Fragment;\n        values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n          formatMessage(messages.drafty_form)].concat(values || []);\n        break;\n      case 'RW':\n        el = React.Fragment;\n        break;\n      case 'EX':\n        if (data && data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, formatMessage(messages.drafty_attachment)];\n        break;\n      default:\n        if (el == '_UNKN') {\n          el = React.Fragment;\n          values = [<i key=\"unkn\" className=\"material-icons\">extension</i>];\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n\nexport default injectIntl(Contact);\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Get an URL from a theCard photo: either create a data: URL or return reference URL.\nexport function makeImageUrl(photo) {\n  if (typeof photo == 'object') {\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n    return photo.ref;\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(mime, blob, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Scale and crop image according to specified dimensions.\n// The coordinates are in unscaled image pixels, i.e. cut the rectangle first then scale it.\nexport function imageCrop(mime, objURL, left, top, width, height, scale, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    let canvas = document.createElement('canvas');\n    canvas.width = width * scale;\n    canvas.height = height * scale;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, left, top, width, height, 0, 0, canvas.width, canvas.height);\n\n    mime = SUPPORTED_IMAGE_FORMATS.includes(mime) ? mime : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n    // Allow GC.\n    canvas = null;\n    onSuccess(mime, blob, width, height);\n  };\n  img.src = objURL;\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.error(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.error(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    let idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    var mode = (this.state.mode || 'N').split('').sort().join('');\n    var before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box\"><Contact\n            item={this.props.item}\n            title={this.props.userTitle}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n});\n\nclass TopicSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined\n    };\n\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccountDesc('me', undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            {!this.state.channel ?\n              <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n                <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                  formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n                }\n              </a>\n              :\n              null\n            }\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n            </a>\n            {!this.state.groupTopic ?\n              <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n                <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n              </a>\n              :\n              null\n            }\n            {!this.state.owner ?\n              <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n                <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n              </a>\n              :\n              null\n            }\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(TopicSecurityView);\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    const className = 'load-spinner-box' + (this.props.large ? ' large' : '')\n      + (this.props.clear ? ' clear' : '') + (this.props.centered ? ' centered' : '');\n    return (this.props.show ?\n      <div className={className}><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport LoadSpinner from './load-spinner.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nimport { AVATAR_SIZE } from '../config.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      source: props.avatar\n    };\n\n    this.handleFileReceived = this.handleFileReceived.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({source: this.props.avatar});\n    }\n  }\n\n  handleFileReceived(e) {\n    const image = e.target.files[0];\n    this.props.onImageUpdated(image.type, URL.createObjectURL(image), image.name);\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.source ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageUpdated();}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.source ?\n          <img src={this.props.tinode.authorizeURL(sanitizeImageUrl(this.state.source))} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileReceived} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n        <LoadSpinner show={this.props.uploading} large={true} clear={true} centered={true} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst icon_mapping = {'staff': 'verified_user'};\n\nconst messages = defineMessages({\n  badge_verified: {\n    id: 'badge_verified',\n    defaultMessage: 'Verified/official',\n    description: 'Explanation of a verified account or topic badge'\n  },\n  badge_staff: {\n    id: 'badge_staff',\n    defaultMessage: 'Staff-managed',\n    description: 'Explanation of a staff-managed account or topic badge'\n  },\n  badge_danger: {\n    id: 'badge_danger',\n    defaultMessage: 'Untrustworthy',\n    description: 'Suspicious or untrustworthy account or topic badge'\n  },\n});\n\n\n/* Trusted badges with labels: verified, staff, danger */\nclass BadgeList extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let badges = null;\n    if (this.props.trustedBadges && this.props.trustedBadges.length > 0) {\n      badges = [];\n      this.props.trustedBadges.map((b) => {\n        const comment = formatMessage(messages['badge_' + b]);\n        const style = 'material-icons ' + b + '-color';\n        badges.push(<div className=\"trusted-badge\" key={b}><i className={style}>{icon_mapping[b] || b}</i> {comment}</div>);\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n\nexport default injectIntl(BadgeList);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              isVerified={c.trusted && c.trusted.verified}\n              isStaff={c.trusted && c.trusted.staff}\n              isDangerous={c.trusted && c.trusted.danger}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          autoFocus />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// Toggle [Title text >] -> [Title text v]\n\nimport React from 'react';\n\nexport default class MoreButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    const open = !this.state.open;\n    this.setState({open: open});\n    if (this.props.onToggle) {\n      this.props.onToggle(open);\n    }\n  }\n\n  render() {\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\n        <i className=\"material-icons\">chevron_right</i>}\n      </label>);\n  }\n}\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags,\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\n      return {tags: nextProps.tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport TopicSecurityView from './topic-security-view.jsx';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport MoreButton from '../widgets/more-button.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  requested: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  granted: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n});\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      description: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      tags: [],\n      trustedBadges: [],\n      showMemberPanel: false,\n      showPermissionEditorFor: undefined,\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n      previousTagsUpdated: undefined\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    const badges = [];\n    if (topic.trusted) {\n      for (const [key, val] of Object.entries(topic.trusted)) {\n        if (val) {\n          badges.push(key);\n        }\n      }\n    }\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: _clip(topic.public ? topic.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(topic.public ? topic.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      trustedBadges: badges,\n      private: _clip(topic.private ? topic.private.comment : null, MAX_TITLE_LENGTH),\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType(),\n      showMemberPanel: false,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onTopicDescUpdate(this.props.topic, theCard(fn, null), null);\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(perm) {\n    switch (this.state.showPermissionEditorFor) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.requested);\n        titleCompare = formatMessage(messages.granted);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        break;\n    }\n    this.setState({\n      showPermissionEditorFor: which,\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.setState({showMemberPanel: true});\n  }\n\n  handleHideAddMembers() {\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const instance = this;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: function() {\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\n      }},\n      'member_delete',\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\n    ];\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\n          </div>\n          <div>\n            <MenuCancel onCancel={this.props.onCancel} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {this.state.showMemberPanel ?\n          <GroupManager\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleHideAddMembers}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        this.state.showPermissionEditorFor ?\n          <PermissionsEditor\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={this.handlePermissionsChanged}\n            onCancel={this.handleHidePermissionsEditor}\n            />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-column\">\n              <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n                <i className=\"material-icons\">edit</i>&nbsp;\n                <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n              </a>\n              <center>\n                <AvatarUpload\n                  tinode={this.props.tinode}\n                  avatar={this.state.avatar}\n                  readOnly={true}\n                  uid={this.props.topic}\n                  title={this.state.fullName} />\n              </center>\n              <div className=\"group\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div className=\"large ellipsized\">{this.state.fullName}</div>\n              </div>\n              {this.state.private ?\n                <div className=\"group\">\n                  <div><label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label></div>\n                  <div className=\"large ellipsized\">{this.state.private}</div>\n                </div>\n                : null\n              }\n              <div className=\"group\">\n                <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                  description=\"Label for user address (ID)\" /></label>&nbsp;\n                <tt>{this.state.address}</tt>\n              </div>\n              <div className=\"group\">\n                <BadgeList trustedBadges={this.state.trustedBadges} />\n              </div>\n              {this.state.description ?\n                <div className=\"group\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                      description=\"Label for editing topic description\" />\n                  </label>\n                  <div>{this.state.description}</div>\n                </div> : null}\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted} onChange={this.handleMuted} />\n              </div>\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n                <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n                  defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n              </a>\n              {this.state.moreInfoExpanded ?\n                <div className=\"panel-form-column\">\n                  {this.state.groupTopic ?\n                    <div className=\"panel-form-row\">\n                      <label>\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                          description=\"Label for current user permissions\" />\n                      </label>\n                      <tt className=\"clickable\"\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                        {this.state.access}\n                      </tt>\n                    </div>\n                    :\n                    <div>\n                      <div>\n                        <label className=\"small\">\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                            description=\"Section title\" />\n                        </label>\n                      </div>\n                      <div className=\"quoted\">\n                        <div>\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                          {this.state.access}\n                        </tt></div>\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\n                          {this.state.modeGiven2}\n                          </tt>\n                        </div>\n                      </div>\n                    </div>\n                  }\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\n                  <div>\n                    <div>\n                      <label className=\"small\">\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\n                          description=\"Section title\" />\n                      </label>\n                    </div>\n                    <div className=\"quoted\">\n                      <div>Auth: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\n                          {this.state.auth}\n                        </tt>\n                        :\n                        <tt>{this.state.auth}</tt>\n                      }\n                      </div>\n                      <div>Anon: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\n                          {this.state.anon}\n                        </tt>\n                        :\n                        <tt>{this.state.anon}</tt>\n                      }\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  null\n                }\n                </div>\n              :\n              null\n              }\n            </div>\n            <div className=\"hr\" />\n            {this.state.owner ?\n              <>\n                <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n                  description=\"Section title for TagManager\">{\n                  (tags) => <TagManager\n                    title={tags}\n                    tags={this.state.tags}\n                    activated={false}\n                    tinode={this.props.tinode}\n                    onSubmit={this.handleTagsUpdated} />\n                }</FormattedMessage>\n                <div className=\"hr\" />\n              </>\n              :\n              null\n            }\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                        description=\"Section title or label\" />\n                    </label>\n                  </div>\n                  <div className=\"panel-form-row\">\n                    <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                      <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                        defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                    </a>\n                  </div>\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                    description=\"Shown in place of group members\">{\n                    (no_members) => <ContactList\n                      contacts={this.state.contactList}\n                      myUserId={this.props.myUserId}\n                      emptyListMessage={no_members}\n                      topicSelected={this.state.selectedContact}\n                      showOnline={false}\n                      showUnread={false}\n                      showMode={true}\n                      noScroll={true}\n                      onTopicSelected={this.handleMemberSelected}\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                    />\n                  }</FormattedMessage>\n                </div>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name} uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime} size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement(React.Fragment, null, Drafty.format(content, draftyFormatter, this));\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\n// Converts Drafty elements into React classes.\n// 'this' is set by the caller.\nfunction draftyFormatter(style, data, values, key) {\n  if (style == 'EX') {\n    // attachments are handled elsewhere.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'HL':\n        // Highlighted text. Assign class name.\n        attr.className = 'highlight';\n        break;\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = {\n            width: dim.dstWidth + 'px',\n            height: dim.dstHeight + 'px',\n            // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n            minWidth: dim.dstWidth + 'px',\n            minHeight: dim.dstHeight + 'px'\n          };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              attr.onClick = this.handleImagePreview;\n              attr.className += ' image-clickable';\n              attr.loading = 'lazy';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'RW':\n        // Form element formatting is dependent on element content.\n        break;\n      default:\n        if (el == '_UNKN') {\n          // Unknown element.\n          // TODO: make it prettier.\n          el = <><span className=\"material-icons\">extension</span></>;\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n    return (\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].substr(1).split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        const item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlInfoPanel(hash, infopanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params.info = infopanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport ContactBadges from '../widgets/contact-badges.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messages.length != this.state.messages.length) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleNewMessage;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n      if (this.state.isReader || newTopic) {\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (ctrl.code == 303) {\n            // Redirect to another topic requested.\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n            return;\n          }\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messages: [],\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        isVerified: false,\n        isStaff: false,\n        isDangerous: false,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const msgs = [];\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        topic.messages(function(msg) {\n          if (!msg.deleted) {\n            msgs.push(msg);\n          }\n        });\n\n        Object.assign(nextState, {\n          messages: msgs,\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messages: [],\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE).catch((err) => {\n              this.setState({fetchingMessages: false});\n              this.props.onError(err.message, 'err');\n            });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  handleNewMessage(msg) {\n    // Regenerate messages list\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const newState = {messages: []};\n    topic.messages((m) => {\n      if (!m.deleted) {\n        newState.messages.push(m);\n      }\n    });\n\n    // msg could be null if one or more messages were deleted.\n    if (msg && !msg.deleted) {\n      // If the message is added to the end of the message list,\n      // scroll to the bottom.\n      if (topic.isNewMessage(msg.seq)) {\n        newState.scrollPosition = 0;\n      }\n\n      // Aknowledge messages except own messages. They are\n      // automatically assumed to be read and recived.\n      const status = topic.msgStatus(msg, true);\n      if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n        this.postReadNotification(msg.seq);\n      }\n      this.props.onData(msg);\n    }\n    this.setState(newState);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyMine, tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.init(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      this.props.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (mime, blob, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const found = this.state.messages.find(msg => msg.seq == seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        const icon_badges = [];\n        if (topic.trusted) {\n          if (topic.trusted.verified) {\n            icon_badges.push({icon: 'verified', color: 'badge-inv'});\n          }\n          if (topic.trusted.staff) {\n            icon_badges.push({icon: 'staff', color: 'badge-inv'});\n          }\n          if (topic.trusted.danger) {\n            icon_badges.push({icon: 'dangerous', color: 'badge-inv'});\n          }\n        }\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        for (let i=0; i<this.state.messages.length; i++) {\n          let msg = this.state.messages[i];\n          let nextFrom = null;\n\n          if (i + 1 < this.state.messages.length) {\n            nextFrom = this.state.messages[i+1].from || 'chan';\n          }\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              key={msg.seq} />\n          );\n        }\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }<ContactBadges badges={icon_badges} /></div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    const icon_badges = [];\n    if (this.props.trustedBadges) {\n      this.props.trustedBadges.map((b) => {\n        icon_badges.push({icon: b, color: 'badge-inv'});\n      });\n    }\n    let avatar = null;\n    if (this.props.tinode) {\n      avatar = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n    }\n    return (\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\n          {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n          {avatar ?\n            <div id=\"self-avatar\" className=\"avatar-box\">\n              <LetterTile\n                avatar={avatar}\n                topic={this.props.myUserId}\n                title={this.props.title} />\n            </div>\n            :\n            null}\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}<ContactBadges badges={icon_badges}/></div>\n          {this.props.state === 'login' ?\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n            this.props.state === 'contacts' ?\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n            null}\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nexport default class AccountSettingsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: _clip(me.public ? me.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(me.public ? me.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              avatar={this.state.avatar}\n              readOnly={true}\n              uid={this.props.myUserId}\n              title={this.state.fullName} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large ellipsized\">{this.state.fullName}</div>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n              description=\"Label for user address (ID)\" /></label>&nbsp;\n            <tt>{this.props.myUserId}</tt>\n          </div>\n          <div className=\"group\">\n            <BadgeList trustedBadges={this.props.trustedBadges} />\n          </div>\n          {this.state.description ?\n            <div className=\"group\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                  description=\"Label for editing topic description\" />\n              </label>\n              <div>{this.state.description}</div>\n            </div> : null}\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n              defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Image zoom and crop widget.\n\nimport React from 'react';\n\nconst DEFAULT_MAX_ZOOM = 2.5;\n\nexport default class Cropper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Coordinates of the top left corner of the image in container coordinates.\n      panX: 0,\n      panY: 0,\n      // Origin of the zoom in image coordinates.\n      originX: 0,\n      originY: 0,\n      // Zoom scale.\n      zoom: 1,\n      // Zoom min and max.\n      minZoom: 0,\n      maxZoom: DEFAULT_MAX_ZOOM,\n    };\n\n    // References to DOM elements for hooking up events and getting screen dimensions.\n    // The transparent element which captures mouse moves (moves with the image).\n    this.overlay = React.createRef();\n    // The image cutout window or view port (static).\n    this.cutout = React.createRef();\n    // Scaled and translated image preview.\n    this.preview = React.createRef();\n    // The main container (static).\n    this.boundingBox = React.createRef();\n\n    // The original image width and height before any scaling.\n    this.imageWidth = 0;\n    this.imageHeight = 0;\n\n    // Mouse position when dragging.\n    this.mouseX = 0\n    this.mouseY = 0;\n    // Length of the previous mouse move when dragging.\n    this.prevDistance = 0;\n\n    // Bounding rectangles of static elements.\n    this.cutoutRect = {};\n    this.bBoxRect = {};\n    // Center of the bounding box.\n    this.originX = 0;\n    this.originY = 0;\n\n    this.initScaling = this.initScaling.bind(this);\n    this.onZoom = this.onZoom.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseTouch = this.mouseTouch.bind(this);\n    this.positionAll = this.positionAll.bind(this);\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.overlay.current.addEventListener('mousedown', this.mouseDown, { passive: true });\n    this.overlay.current.addEventListener('touchstart', this.mouseDown, { passive: true });\n\n    // The rectangle position is in viewport coordinates.\n    this.bBoxRect = this.boundingBox.current.getBoundingClientRect();\n    // Center of the bounding box in container coordinates.\n    this.originX = this.bBoxRect.width / 2;\n    this.originY = this.bBoxRect.height / 2;\n\n    // The rectangle position is in viewport coordinates.\n    this.cutoutRect = this.cutout.current.getBoundingClientRect();\n  }\n\n  componentWillUnmount() {\n    this.overlay.current.removeEventListener('mousedown', this.mouseDown);\n    this.overlay.current.removeEventListener('touchstart', this.mouseDown);\n  }\n\n  // Position all elements.\n  positionAll(panX, panY, zoom) {\n    // Zoom origin in image preview coordinates.\n    this.setState({\n      panX: panX,\n      panY: panY,\n      zoom: zoom,\n      originX: this.originX - panX,\n      originY: this.originY - panY,\n    });\n\n    // Pass cut out coordinates to caller.\n    const left = (this.originX - panX) * zoom - this.originX;\n    const top = (this.originY - panY) * zoom - this.originY;\n    this.props.onChange(\n      (left + this.cutoutRect.left - this.bBoxRect.left) / zoom,\n      (top + this.cutoutRect.top - this.bBoxRect.top) / zoom,\n      this.cutoutRect.width / zoom,\n      this.cutoutRect.height / zoom,\n      zoom);\n  }\n\n  // Check if new location is within the limits.\n  static checkBound(currPan, img, cutout, delta) {\n    let nextDiff = Math.min(0, cutout[0] - img[0] - delta, img[1] - cutout[1] + delta);\n    if (nextDiff == 0) {\n      // Cutout is completely within the image.\n      currPan += delta;\n    } else if (Math.min(0, cutout[0] - img[0], img[1] - cutout[1]) < nextDiff) {\n      // Cutout is outside of the range but closer to the bound.\n      currPan += delta;\n    }\n    return currPan;\n  }\n\n  initScaling() {\n    // Initialize components.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    this.imageWidth = imgRect.width;\n    this.imageHeight = imgRect.height;\n\n    // Set zoom slider's min and max values. Make sure the scaled image cannot be smaller than the cutout.\n    const minZoom = Math.max(this.cutoutRect.width / imgRect.width, this.cutoutRect.height / imgRect.height);\n    this.setState({\n      minZoom: minZoom,\n      maxZoom: Math.max(DEFAULT_MAX_ZOOM, minZoom + 1)\n    });\n\n    // Initial zoom level fills the bounding box at the smallest image dimension and overflows the largest, i.e. \"fill\" not \"fit\".\n    const zoom = Math.max(this.bBoxRect.width / imgRect.width, this.bBoxRect.height / imgRect.height);\n    // Converting from viewport coordinates to container, then panning.\n    const panX = this.cutoutRect.left - this.bBoxRect.left -\n      (imgRect.width - this.cutoutRect.width) / 2;\n    const panY = this.cutoutRect.top - this.bBoxRect.top -\n      (imgRect.height - this.cutoutRect.height) / 2;\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  onZoom(e) {\n    this.handleZoom(e.target.value);\n  }\n\n  handleZoom(zoom) {\n    let panX = this.state.panX;\n    let panY = this.state.panY;\n\n    // Ensure that the image at the new zoom is not outside of the cutout boundaries.\n    // Calculate image coordinates at the new zoom.\n    const imgLeft = this.originX - (this.originX - panX) * zoom;\n    const imgRight = imgLeft + this.imageWidth * zoom;\n    // Cutout in the same coordinates as the image.\n    const coLeft = this.cutoutRect.left - this.bBoxRect.left;\n    const coRight = coLeft + this.cutoutRect.width;\n    if (coLeft < imgLeft) {\n      panX -= imgLeft - coLeft;\n    } else if (coRight > imgRight) {\n      panX += coRight - imgRight;\n    }\n    const imgTop = this.originY - (this.originY - panY) * zoom;\n    const imgBottom = imgTop + this.imageHeight * zoom;\n    const coTop = this.cutoutRect.top - this.bBoxRect.top;\n    const coBottom = coTop + this.cutoutRect.height;\n    if (coTop < imgTop) {\n      panY -= imgTop - coTop;\n    } else if (coBottom > imgBottom) {\n      panY += coBottom - imgBottom;\n    }\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  mouseDown(e) {\n    if (e.touches) {\n      this.mouseX = e.touches[0].pageX;\n      this.mouseY = e.touches[0].pageY;\n    } else {\n      this.mouseX = e.pageX;\n      this.mouseY = e.pageY;\n    }\n\n    window.addEventListener('mousemove', this.mouseMove, { passive: false });\n    window.addEventListener('touchmove', this.mouseTouch, { passive: false });\n    window.addEventListener('mouseup', this.mouseUp, { passive: true });\n    window.addEventListener('touchend', this.mouseUp, { passive: true });\n    // Disable text selection in the entire document.\n    document.body.style['userSelect'] = 'none';\n  }\n\n  // Perform image panning.\n  translate(pageX, pageY) {\n    const dX = pageX - this.mouseX;\n    const dY = pageY - this.mouseY;\n\n    this.mouseX = pageX;\n    this.mouseY = pageY;\n\n    // Make sure the image is within the cutout window.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    // Check if the new position is within the boundaries, and if not if it's closer to them.\n    let panX = Cropper.checkBound(this.state.panX, [imgRect.left, imgRect.right],\n      [this.cutoutRect.left, this.cutoutRect.right], dX);\n    let panY = Cropper.checkBound(this.state.panY, [imgRect.top, imgRect.bottom],\n      [this.cutoutRect.top, this.cutoutRect.bottom], dY);\n\n    this.positionAll(panX, panY, this.state.zoom);\n  }\n\n  // Image panning.\n  mouseMove(e) {\n    e.preventDefault();\n    this.translate(e.pageX, e.pageY);\n  }\n\n  mouseTouch(e) {\n    e.preventDefault();\n\n    if (e.touches.length == 1) {\n      this.translate(e.touches[0].pageX, e.touches[0].pageY);\n      return;\n    }\n\n    // Image zooming by pinching.\n    const [touch0, touch1] = e.touches;\n    const distance = Math.sqrt((touch0.pageX - touch1.pageX) * (touch0.pageX - touch1.pageX) +\n      (touch0.pageY - touch1.pageY) * (touch0.pageY - touch1.pageY));\n\n    if (!this.prevDistance) {\n        this.prevDistance = distance / this.state.zoom;\n    }\n\n    let scale = (distance / this.prevDistance);\n    this.handleZoom(Math.max(this.minZoom, Math.min(this.maxZoom, scale)));\n  }\n\n  mouseUp(e) {\n    window.removeEventListener('mousemove', this.mouseMove);\n    window.removeEventListener('touchmove', this.mouseTouch);\n    window.removeEventListener('mouseup', this.mouseUp);\n    window.removeEventListener('touchend', this.mouseUp);\n    // Re-enable text selection.\n    document.body.style['userSelect'] = '';\n\n    this.positionAll(this.state.panX, this.state.panY, this.state.zoom);\n  }\n\n  render() {\n    // transform3d: position and scale.\n    const t3d = `translate3d(${this.state.panX}px, ${this.state.panY}px, 0) scale(${this.state.zoom})`;\n    // transformOrigin: zoom origin.\n    const orig = `${this.state.originX}px ${this.state.originY}px`;\n\n    // Overlay position and size are exactly equal to the position and size of the transformed image\n    // except it uses different coordinates.\n    const overlay = {\n      top: `${this.originY - this.state.originY * this.state.zoom}px`,\n      left: `${this.originX - this.state.originX * this.state.zoom}px`,\n      width: `${this.imageWidth * this.state.zoom}px`,\n      height: `${this.imageHeight * this.state.zoom}px`\n    };\n    return (\n      <div className=\"cropper\">\n        <div className=\"bounding-box\" ref={this.boundingBox}>\n          <img src={this.props.source} className=\"preview\" alt=\"\"\n            style={{transform: t3d, transformOrigin: orig}} ref={this.preview} onLoad={this.initScaling} />\n          <div className=\"cutout circle\" ref={this.cutout} />\n          <div className=\"overlay\" style={overlay} ref={this.overlay} />\n        </div>\n        <div className=\"zoom-wrapper\">\n          <input type=\"range\" className=\"zoomer\"\n            step=\"0.001\" min={this.state.minZoom} max={this.state.maxZoom} value={this.state.zoom} onChange={this.onZoom} />\n        </div>\n      </div>\n    );\n  }\n}\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Cropper from './cropper.jsx';\nimport { imageCrop } from '../lib/blob-helpers.js';\n\nexport default class AvatarCrop extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n      scale: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Cut out in image coordinates and desired scale factor.\n  handleChange(left, top, width, height, scale) {\n    this.setState({\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      scale: scale\n    });\n  }\n\n  handleSubmit() {\n    imageCrop(this.props.mime, this.props.avatar,\n      this.state.left, this.state.top,\n      this.state.width, this.state.height,\n      this.state.scale,\n      (mime, blob, width, height) => {\n        this.props.onSubmit(mime, blob, width, height);\n      },\n      (err) => {\n        this.props.onError(err);\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <Cropper\n            source={this.props.avatar}\n            onChange={this.handleChange} />\n        </div>\n        <div className=\"dialog-buttons\">\n          {this.props.onCancel ?\n            <button className=\"secondary\" onClick={this.props.onCancel}>\n              <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n            </button>\n            : null}\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","// Widget for editing topic description.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarCrop from './avatar-crop.jsx';\nimport AvatarUpload from './avatar-upload.jsx';\nimport InPlaceEdit from './in-place-edit.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { AVATAR_SIZE, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE,\n  MAX_INBAND_ATTACHMENT_SIZE, MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nexport default class TopicDescEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: Tinode.isMeTopicName(this.props.topic),\n      owner: acs && acs.isOwner(),\n      fullName: topic.public ? topic.public.fn : undefined,\n      private: topic.private ? topic.private.comment : null,\n      description: topic.public ? topic.public.note : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      tags: topic.tags(),\n      newAvatar: null,\n      newAvatarMime: null,\n      previousOnTags: topic.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageUpdated = this.handleImageUpdated.bind(this);\n    this.handleAvatarCropped = this.handleAvatarCropped.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleDescriptionUpdate = this.handleDescriptionUpdate.bind(this);\n    this.uploadAvatar = this.uploadAvatar.bind(this);\n    this.handleAvatarCropCancel = this.handleAvatarCropCancel.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onTagsUpdated = this.state.previousOnTags;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn && this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(fn, null));\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleDescriptionUpdate(desc) {\n    desc = desc.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (desc) {\n      this.setState({description: desc});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, null, null, desc));\n    }\n  }\n\n  // AvatarUpload widget has changed the avatar: received a new file or deleted the avatar.\n  handleImageUpdated(mime, img) {\n    // This will show the AvatarCropView is img is not null.\n    this.setState({newAvatar: img, newAvatarMime: mime});\n    if (!img) {\n      // Deleting the avatar.\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, Tinode.DEL_CHAR));\n    }\n  }\n\n  // AvatarCropView calls this method when the user has cropped the image.\n  handleAvatarCropped(mime, blob, width, height) {\n    const url = blob ? URL.createObjectURL(blob) : null;\n    this.setState({avatar: url, newAvatar: null, newAvatarMime: null});\n    if (blob) {\n      this.uploadAvatar(mime, blob, width, height);\n    }\n  }\n\n  // Utility method for converting cropped avatar blob to bytes for sending inband or\n  // for uploading it to the server out of band.\n  uploadAvatar(mime, blob, width, height) {\n    const readyToUpload = (mime, blob, width, height) => {\n      if (blob.size > MAX_AVATAR_BYTES) {\n        // Too large to send inband - uploading out of band and sending as a link.\n        const uploader = this.props.tinode.getLargeFileHelper();\n\n        this.setState({uploading: true});\n        uploader.upload(blob)\n          .then((url) => {\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, url));\n          })\n          .catch((err) => {\n            this.props.onError(err, 'err');\n          })\n          .finally(() => {\n            this.setState({uploading: false});\n          });\n      } else {\n        this.setState({uploading: true});\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageUrl({data: base64bits, type: mime});\n          this.setState({source: du});\n          this.props.onUpdateTopicDesc(this.props.topic, theCard(null, du));\n          this.setState({uploading: false});\n        });\n      }\n    };\n\n    if (width > AVATAR_SIZE || height > AVATAR_SIZE || width != height) {\n      // Avatar is not square or too large even after cropping. Shrink it and make square.\n      imageScaled(blob, AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n        readyToUpload,\n        (err) => {\n          this.props.onError(err, 'err');\n        });\n    } else {\n      readyToUpload(mime, blob, width, height);\n    }\n  }\n\n  handleAvatarCropCancel(img) {\n    this.setState({newAvatar: null, newAvatarMime: null});\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    if (this.state.newAvatar) {\n      return (\n        <AvatarCrop\n          avatar={this.state.newAvatar}\n          mime={this.state.newAvatarMime}\n          onSubmit={this.handleAvatarCropped}\n          onCancel={this.handleAvatarCropCancel}\n          onError={this.props.onError} />\n      );\n    }\n\n    const editable = this.state.isMe || this.state.owner;\n\n    return (\n      <>\n      <div className=\"panel-form-column\">\n        <center>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            readOnly={!editable}\n            uid={this.props.topic}\n            title={this.state.fullName}\n            onImageUpdated={this.handleImageUpdated}\n            onError={this.props.onError} />\n        </center>\n        {this.state.isMe ?\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n                description=\"Input placeholder for person's full name\">{\n              (full_name_placeholder) => <InPlaceEdit\n                placeholder={full_name_placeholder}\n                value={this.state.fullName}\n                required={true}\n                onFinished={this.handleFullNameUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n        :\n          <>\n            <div className=\"group\">\n              <div><label className=\"small\">\n                <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                  description=\"Label for editing topic name\" />\n              </label></div>\n              <div>\n                <InPlaceEdit\n                  placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                  readOnly={!this.state.owner}\n                  value={this.state.fullName}\n                  required={true}\n                  onFinished={this.handleFullNameUpdate} />\n              </div>\n            </div>\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                    description=\"Label for editing 'private'\" />\n                </label>\n              </div>\n              <div>\n                <FormattedMessage id=\"private_editing_placeholder\"\n                  defaultMessage=\"Visible to you only\"\n                  description=\"Placeholder for editing 'private'\">{\n                  (private_placeholder) => <InPlaceEdit\n                    placeholder={private_placeholder}\n                    value={this.state.private}\n                    onFinished={this.handlePrivateUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n          </>\n        }\n        <div className=\"group\">\n          <div><label className=\"small\">\n            <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n              description=\"Label for editing topic description\" />\n          </label></div>\n          <div>\n            <FormattedMessage id=\"description_editing_placeholder\"\n              defaultMessage=\"Optional description\"\n              description=\"Placeholder for editing topic description\">{\n              (private_placeholder) => <InPlaceEdit\n                placeholder={private_placeholder}\n                readOnly={!editable}\n                value={this.state.description}\n                multiline={2}\n                onFinished={this.handleDescriptionUpdate} />\n            }</FormattedMessage>\n          </div>\n        </div>\n      </div>\n      {editable ?\n        <>\n          <div className=\"hr\" />\n          <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n            description=\"Section title for TagManager\">{\n              (title_tag_manager) => <TagManager\n                title={title_tag_manager}\n                activated={false}\n                tags={this.state.tags}\n                tinode={this.props.tinode}\n                onSubmit={this.handleTagsUpdated} />\n          }</FormattedMessage>\n        </>\n        : null\n      }\n      </>\n    );\n  }\n};\n","// View for editing topic (including 'me' topic) parameters.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\nimport TopicDescEdit from '../widgets/topic-desc-edit.jsx';\n\nimport { AVATAR_SIZE, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE,\n  MAX_INBAND_ATTACHMENT_SIZE, MAX_TITLE_LENGTH } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, asEmail, asPhone, theCard } from '../lib/utils.js';\n\nexport default class TopicCommonView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: this.props.tinode.isMe(this.props.topic),\n      owner: acs && acs.isOwner(),\n      credentials: topic.getCredentials() || [],\n      addCredActive: false,\n      addCredInvalid: false\n    };\n\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n  }\n\n  componentDidMount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onCredsUpdated = this.tnCredsUpdated;\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onCredsUpdated = undefined;\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    const value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  render() {\n    const credentials = [];\n    if (this.state.isMe) {\n      this.state.credentials.map((cred) => {\n        credentials.push(\n          <div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n            <span> {!cred.done ?\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n                <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                  description=\"Validate credentail call to action\" />\n              </a>\n            : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n              className=\"material-icons gray\">delete_outline</i></a></span>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className=\"scrollable-panel\">\n        <TopicDescEdit\n          tinode={this.props.tinode}\n          topic={this.props.topic}\n          onUpdateTopicDesc={this.props.onUpdateTopicDesc}\n          onUpdateTags={this.props.onUpdateTags}\n          onError={this.props.onError} />\n        {this.state.isMe ?\n          <>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n                description=\"Label for user contacts\" />\n              </label>\n              <div className=\"quoted\">\n                {credentials}\n                {this.state.addCredActive ?\n                  <input type=\"text\" value={this.state.value}\n                    className={this.state.addCredInvalid ? 'invalid' : null}\n                    placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                    onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n                  : null}\n                <div>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                    <i className=\"material-icons\">add</i>\n                    <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n                  </a></div>\n              </div>\n            </div>\n          </>\n        : null\n      }\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_warning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdatePassword(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccountDesc('me', undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fn: '', // full/formatted name\n      private: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handlePrivateChange(e) {\n    this.setState({private: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\n            }</FormattedMessage>\n            <br />\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handlePrivateChange} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onError={this.props.onError}\n            onImageChanged={this.handleImageChanged} />\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} onChange={this.handleChannelToggle}/>&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tinode={this.props.tinode}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel);\n    }\n  }\n\n  handleNewGroupSubmit(name, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, theCard(name, dataUrl), priv, tags, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else {\n      this.props.onRequest('email', this.state.email.trim());\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    let reset = (this.state.token && this.state.scheme);\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {reset ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n          :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{reset ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" /> :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['def', 'ws', 'lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\n\nimport AccountSettingsView from './account-settings-view.jsx';\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport TopicCommonView from './topic-common-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for AccountSettingsView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'sidepanel_title_acc_general',\n    description: 'Sidepanel title for TopicCommonView.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'sidepanel_title_acc_security',\n    description: 'Sidepanel title for AccSecurityView.',\n    defaultMessage: 'Security'\n  },\n  crop: {\n    id: 'sidepanel_title_crop',\n    description: 'Sidepanel title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar, badges;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n      badges = this.props.trustedBadges;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n      badges = null;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          tinode={this.props.tinode}\n          trustedBadges={badges}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            tinode={this.props.tinode}\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <AccountSettingsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            trustedBadges={this.props.trustedBadges}\n            onNavigate={this.props.onNavigate} /> :\n\n          (view === 'general' || view === 'crop') ?\n          <TopicCommonView\n            topic=\"me\"\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateTopicDesc={this.props.onUpdateAccountDesc}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccountDesc={this.props.onUpdateAccountDesc}\n            onUpdatePassword={this.props.onUpdatePassword}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdatePasswordRequest = this.handleUpdatePasswordRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      myTrustedBadges: [],\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      infoPanel: undefined,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n\n    // Process background notifications from the service worker.\n    if (typeof BroadcastChannel == 'function') {\n      const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n      serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n    } else {\n      // Safari is broken by design.\n      console.warn('Your browser does not support BroadcastChannel. Some features will not be available');\n    }\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n      }\n\n      // Save possible topic name and navigate to blank state.\n      this.setState({requestedTopic: parsedNav.path[1]});\n      HashNavigation.navigateTo('');\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(data) {\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.error(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n\n        // Google could not be bothered to mention that onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // Handhe FCM pushes\n        // (a) for channels always,\n        // (b) pushes when the app is in foreground but has not focus.\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general','crop',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.warn(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      let topicName = hash.path[1] || null;\n      if (topicName != this.state.topicSelected) {\n        if (!Tinode.topicType(topicName)) {\n          // Clear invalid topic name.\n          topicName = null;\n        }\n        const newState = {\n          topicSelected: topicName\n        };\n        const acs = this.tinode.getTopicAccessMode(topicName);\n        if (acs) {\n          newState.topicSelectedAcs = acs;\n        }\n        this.setState(newState);\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: '', topicSelected: null});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      infoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    const token = this.tinode.getAuthToken();\n    if (login && password) {\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        localStorage.removeItem('auth-token');\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.trusted) {\n        const badges = [];\n        for (const [key, val] of Object.entries(desc.trusted)) {\n          if (val) {\n            badges.push(key);\n          }\n        }\n        this.setState({\n          myTrustedBadges: badges,\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.info(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n\n    const past = new Date(0);\n    newState.chatList.sort((a, b) => {\n      return (a.touched || past).getTime() - (b.touched || past).getTime();\n    });\n\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        infoPanel: undefined\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        infoPanel: undefined\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.warn(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          Promise.resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.error(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.error(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.error(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('crop' == parsed.path[0]) {\n      path = 'general';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Sidepanel navigator. No need to bind to 'this'.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Topic info navigator. No need to bind to 'this'.\n  infoNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlInfoPanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, defacs) {\n    this.handleError();\n\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n        if (pub.photo && pub.photo.ref) {\n          params.attachments = [pub.photo.ref];\n        }\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      topic.setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleUpdatePasswordRequest(password)  {\n    this.handleError();\n\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    clearInterval(this.reconnectCountdown);\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: this.selfRef.current.getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      !archived ? 'topic_restore' : 'topic_archive',\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', 'info'));\n    this.setState({infoPanel: 'info'});\n  }\n\n  handleHideInfoView() {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\n    this.setState({infoPanel: undefined});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\" ref={this.selfRef}>\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          trustedBadges={this.state.myTrustedBadges}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccountDesc={this.handleTopicUpdateRequest}\n          onUpdatePassword={this.handleUpdatePasswordRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.infoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.infoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n            panel={this.state.infoPanel}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onNavigate={this.infoNavigator}\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onCancel={this.handleHideInfoView}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n      <TinodeWeb />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[367](0, __webpack_exports__, __webpack_require__);\n"],"sourceRoot":""}