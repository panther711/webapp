{"version":3,"file":"index.prod.js","mappings":"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","sources":["webpack://tinode-webapp/external var \"React\"","webpack://tinode-webapp/external var \"ReactDOM\"","webpack://tinode-webapp/external var \"ReactIntl\"","webpack://tinode-webapp/external var \"firebase\"","webpack://tinode-webapp/external var \"Tinode\"","webpack://tinode-webapp/external var [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/lazy-image.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/lib/formatters.js","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/widgets/forward-dialog.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/badge-list.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/cropper.jsx","webpack://tinode-webapp/./src/widgets/avatar-crop.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/widgets/topic-desc-edit.jsx","webpack://tinode-webapp/./src/widgets/topic-common.jsx","webpack://tinode-webapp/./src/widgets/topic-security.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/account-settings-view.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.18.0-beta2\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: when image dimensions are greater or the image is not square, it's resized to\n// a square of this size or less.\nexport const AVATAR_SIZE = 384;\n\n// Maximum size of an avatar in bytes for sending in-band. Bigger avatars will be sent out of band (as uploads).\nexport const MAX_AVATAR_BYTES = 4096;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Linear dimensions of image thumbnail: shrink image under this size for thumbnails in reply quote previews.\nexport const IMAGE_THUMBNAIL_DIM = 36;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n// Maximum length of topic description.\nexport const MAX_TOPIC_DESCRIPTION_LENGTH = 360;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Length of a quote in quoted reply (for outgoing messages).\nexport const QUOTED_REPLY_LENGTH = 30;\n// Length of a preview of a forwarded message.\nexport const FORWARDED_PREVIEW_LENGTH = 84;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  reply: {\n    id: 'menu_item_reply',\n    defaultMessage: 'Reply',\n    description: 'Reply to message'\n  },\n  forward: {\n    id: 'menu_item_forward',\n    defaultMessage: 'Forward',\n    description: 'Forward message'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  unarchive: {\n    id: 'menu_item_restore_topic',\n    defaultMessage: 'Restore',\n    description: 'Restore topic from archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'menu_item_reply': {\n        id: 'menu_item_reply',\n        title: formatMessage(messages.reply),\n        handler: (params, errorHandler) => {\n          return this.replyToMessage(params, errorHandler);\n        }\n      },\n      'menu_item_forward': {\n        id: 'menu_item_forward',\n        title: formatMessage(messages.forward),\n        handler: () => {} /* the action is taken directly in tinode-web */\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'topic_restore': {\n        id: 'topic_restore',\n        title: formatMessage(messages.unarchive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(false).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (this.selfRef.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.error(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  replyToMessage(params, errorHandler) {\n    params.pickReply(params.seq, params.content, params.forwarded, params.userFrom, params.userName, errorHandler);\n  }\n\n  render() {\n    const menu = [];\n    let count = 0;\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position} ref={this.selfRef}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block', 'staff': 'verified_user'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n  render() {\n    let badges = null;\n    if (this.props.badges && this.props.badges.length > 0) {\n      badges = [];\n      this.props.badges.map((b) => {\n        const color = (b.color ? ' ' + b.color : '');\n        if (b.icon) {\n          badges.push(<i className={'material-icons as-badge' + color} key={b.key || b.icon}>{icon_mapping[b.icon] || b.icon}</i>);\n        } else {\n          badges.push(<span className={'badge' + color} key={b.key || b.name}>{b.name}</span>);\n        }\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Shorten a file name to be under maxLength by clipping out the middle.\nexport function shortenFileName(filename, maxLength) {\n  if (typeof filename != 'string') {\n    return filename;\n  }\n  return filename.length > maxLength ?\n    filename.slice(0, maxLength/2 - 1) + '…' + filename.slice(1 - maxLength/2) : filename;\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nfunction stringToColorHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n\n// User avatar letter color id.\nexport function letterTileColorId(userId) {\n  return Math.abs(stringToColorHash(userId)) % 16;\n}\n\n// Converts user or topic ID to a CSS color class. Ideally it should produce the same color value as Java version.\n// params:\n// - {string} id: user or topic ID\n// - {boolean} light: light or dark version of the color.\n// - {boolean} fg: foreground (text) or background color.\nexport function idToColorClass(id, light, fg) {\n  return (light ? 'lt-' : 'dk-') + (fg ? 'fg-' : 'bg-') + letterTileColorId(id);\n}\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType, note) {\n  let card = null;\n  fn = fn && fn.trim();\n  note = note && note.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (typeof note == 'string') {\n    card = card || {};\n    card.note = note ? note : Tinode.DEL_CHAR;\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1),\n        ref: Tinode.DEL_CHAR\n      };\n    } else {\n      card.photo = {\n        data: Tinode.DEL_CHAR,\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (typeof url != 'string') {\n    return url;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'danger-color' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n\n// Wraps a promise to make it cancelable.\nexport function cancelablePromise(promise) {\n  let hasCanceled = false;\n\n  const wrappedPromise = new Promise((resolve, reject) => {\n    promise.then(\n      result => hasCanceled ? reject({isCanceled: true}) : resolve(result),\n      error => hasCanceled ? reject({isCanceled: true}) : reject(error)\n    );\n  });\n\n  return {\n    promise: wrappedPromise,\n    cancel( ) {\n      hasCanceled = true;\n    },\n  };\n};\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { idToColorClass } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = idToColorClass(this.props.topic, isGroup);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      const url = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={url}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"../img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// Image with a placeholder which is replaced when the promise is resolved.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class LazyImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      src: 'img/placeholder.png',\n      style: Object.assign({padding: '4px'}, this.props.style),\n      className: this.props.className,\n      alt: this.props.alt,\n      onClick: this.props.onClick,\n    };\n  }\n\n  componentDidMount() {\n    // whenDone is a wrapper around an actual promise to be able to cancel it.\n    this.props.whenDone\n      .promise\n      .then(data => this.setState({src: data.src, style: {...this.state.style, padding: 0}}))\n      .catch(() => this.setState({src: 'img/broken_image.png'}));\n  }\n\n  componentWillUnmount() {\n    this.props.whenDone.cancel();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.whenDone != this.props.whenDone) {\n      this.setState({src: 'img/placeholder.png', style: {...this.state.style, padding: '4px'}});\n      this.props.whenDone\n        .then(data => this.setState({src: data.src, style: {...this.state.style, padding: 0}}))\n        .catch(() => this.setState({src: 'img/broken_image.png'}));\n    }\n  }\n\n  render() {\n    return React.createElement('img', this.state);\n  }\n};\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Get an URL from a theCard photo: either create a data: URL or return reference URL.\nexport function makeImageUrl(photo) {\n  if (photo && typeof photo == 'object') {\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n    return photo.ref;\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// Returns a promise which is resolven on success or rejected on failure.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.onerror = function(err) {\n      reject(new Error(\"Image format unrecognized\"));\n    }\n    img.onload = async function() {\n      // Once the image is loaded, the URL is no longer needed.\n      URL.revokeObjectURL(img.src);\n\n      // Calculate the desired image dimensions.\n      const dim = fitImageSize(img.width, img.height, maxWidth, maxHeight, forceSquare);\n      if (!dim) {\n        reject(new Error(\"Invalid image\"));\n        return;\n      }\n      let canvas = document.createElement('canvas');\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      let ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n      ctx.drawImage(img, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n\n      const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n      // Generate blob to check size of the image.\n      let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n      if (!blob) {\n        reject(new Error(\"Unsupported image format\"));\n        return;\n      }\n      // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n      // Do nothing if maxsize is <= 0.\n      while (maxSize > 0 && blob.length > maxSize) {\n        dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n        dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n        canvas.width = dim.dstWidth;\n        canvas.height = dim.dstHeight;\n        ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n          0, 0, dim.dstWidth, dim.dstHeight);\n        blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n      }\n\n      canvas = null;\n      resolve({mime: mime, blob: blob, width: dim.dstWidth, height: dim.dstHeight, name: fileNameForMime(fileOrBlob.name, mime)});\n    };\n    img.src = URL.createObjectURL(fileOrBlob);\n  });\n}\n\n// Scale and crop image according to specified dimensions.\n// The coordinates are in unscaled image pixels, i.e. cut the rectangle first then scale it.\n// returns a promise.\nexport function imageCrop(mime, objURL, left, top, width, height, scale) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.onerror = (err) => {\n      reject(new Error(\"Image format unrecognized\"));\n    };\n    img.onload = () => {\n      // Once the image is loaded, the URL is no longer needed.\n      URL.revokeObjectURL(img.src);\n\n      let canvas = document.createElement('canvas');\n      canvas.width = width * scale;\n      canvas.height = height * scale;\n      let ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n      ctx.drawImage(img, left, top, width, height, 0, 0, canvas.width, canvas.height);\n\n      mime = SUPPORTED_IMAGE_FORMATS.includes(mime) ? mime : 'image/jpeg';\n      // Generate blob to check size of the image.\n      canvas.toBlob((blob) => {\n        // Allow GC.\n        canvas = null;\n        if (blob) {\n          resolve({mime: mime, blob: blob, width: width, height: height});\n        } else {\n          reject(new Error(\"Unsupported image format\"));\n        }\n      }, mime);\n    };\n    img.src = objURL;\n  });\n}\n\n// Convert file to base64 string.\nexport function fileToBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = (evt) => {\n      reject(reader.error);\n    };\n    reader.onload = () => {\n      resolve({mime: file.type, bits: reader.result.split(',')[1], name: file.name});\n    };\n    reader.readAsDataURL(file);\n  });\n}\n\n// Convert Blob to base64 string. Returns a promise resolved with the base64 string and mime.\nexport function blobToBase64(blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = (evt) => {\n      reject(reader.error);\n    };\n    reader.onload = () => {\n      resolve({mime: blob.type, bits: reader.result.split(',')[1]});\n    };\n    reader.readAsDataURL(blob);\n  });\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  const items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  if (!Array.isArray(items)) {\n    return false;\n  }\n\n  for (let i in items) {\n    const item = items[i];\n    if (item.kind === 'file') {\n      const file = item.getAsFile();\n      if (!file) {\n        console.error(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        onError(\"Failed to get file object from pasted file item\");\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        onImageSuccess(file);\n      } else {\n        onAttachmentSuccess(file);\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.error(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n\n// Convert a base64 encoded string with the provided mime type into a Blob.\nexport function base64ToBlob(str, mime) {\n  if (!str) {\n    return null;\n  }\n\n  try {\n    // Make blob.\n    const bin = atob(str);\n    const length = bin.length;\n    const buf = new ArrayBuffer(length);\n    const arr = new Uint8Array(buf);\n    for (let i = 0; i < length; i++) {\n      arr[i] = bin.charCodeAt(i);\n    }\n\n    return new Blob([buf], { type: mime });\n  } catch(err) {\n    console.error(\"Failed to convert base64 to blob: \", err);\n  }\n\n  return null;\n}\n","import React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport LazyImage from '../widgets/lazy-image.jsx'\nimport UploadingImage from '../widgets/uploading-image.jsx'\n\nimport { IMAGE_THUMBNAIL_DIM, BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { base64ToBlob, blobToBase64, fitImageSize, imageScaled } from './blob-helpers.js';\nimport { idToColorClass, shortenFileName } from './strformat.js';\nimport { cancelablePromise, sanitizeImageUrl } from './utils.js';\n\nconst messages = defineMessages({\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  }\n});\n\n// Size the already scaled image.\nfunction handleImageData(el, data, attr) {\n  if (!data) {\n    attr.src = 'img/broken_image.png';\n    attr.style = {\n      width: IMAGE_THUMBNAIL_DIM + 'px',\n      height: IMAGE_THUMBNAIL_DIM + 'px',\n    };\n    return el;\n  }\n\n  attr.className = 'inline-image';\n  const dim = fitImageSize(data.width, data.height,\n    this.viewportWidth > 0 ? Math.min(this.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5) :\n      REM_SIZE * 34.5, REM_SIZE * 24, false) ||\n      {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n  attr.style = {\n    width: dim.dstWidth + 'px',\n    height: dim.dstHeight + 'px',\n    // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n    minWidth: dim.dstWidth + 'px',\n    minHeight: dim.dstHeight + 'px'\n  };\n  if (!Drafty.isProcessing(data)) {\n    attr.src = this.authorizeURL(sanitizeImageUrl(attr.src));\n    attr.alt = data.name;\n    if (attr.src) {\n      if (Math.max(data.width || 0, data.height || 0) > IMAGE_THUMBNAIL_DIM) {\n        // Allow previews for large enough images.\n        attr.onClick = this.onImagePreview;\n        attr.className += ' image-clickable';\n      }\n      attr.loading = 'lazy';\n    } else {\n      attr.src = 'img/broken_image.png';\n    }\n  } else {\n    // Use custom element instead of <img>.\n    el = UploadingImage;\n  }\n\n  return el;\n}\n\nfunction quotedImage(data) {\n  let promise;\n  // Get the blob from the image data.\n  if (data.val) {\n    const blob = base64ToBlob(data.val, data.mime);\n    promise = blob ? Promise.resolve(blob) : Prmise.reject(new Error(\"Invalid image\"));\n  } else {\n    promise = fetch(this.authorizeURL(sanitizeImageUrl(data.ref))).then(evt => {\n      if (evt.ok) {\n        return evt.blob();\n      } else {\n        throw new Error(`Image fetch unsuccessful: ${evt.status} ${evt.statusText}`);\n      }\n    });\n  }\n\n  // Scale the blob.\n  return promise\n    .then(blob => {\n      return imageScaled(blob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, true)\n    }).then(scaled => {\n      data.mime = scaled.mime;\n      data.size = scaled.blob.size;\n      data.width = scaled.width;\n      data.height = scaled.height;\n      delete data.ref;\n      // Keeping the original file name, if provided: ex.data.name;\n\n      return blobToBase64(scaled.blob);\n    }).then(b64 => {\n      data.val = b64.bits;\n      return data;\n    }).catch(err => {\n      delete data.val;\n      delete data.name;\n      data.width = IMAGE_THUMBNAIL_DIM;\n      data.height = IMAGE_THUMBNAIL_DIM;\n      data.maxWidth = IMAGE_THUMBNAIL_DIM;\n      data.maxHeight = IMAGE_THUMBNAIL_DIM;\n      // Rethrow.\n      throw err;\n    });\n}\n\n// The main Drafty formatter: converts Drafty elements into React classes. 'this' is set by the caller.\n// 'this' must contain:\n//    viewportWidth: this.props.viewportWidth;\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onImagePreview: this.handleImagePreview\n//    onFormButtonClick: this.handleFormButtonClick\n//    onQuoteClick: this.handleQuoteClick (optional)\nexport function fullFormatter(style, data, values, key) {\n  if (!style) {\n    // Unformatted.\n    return values;\n  }\n\n  if (style == 'HD') {\n    // Hidden.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  const attr = Drafty.attrValue(style, data) || {};\n  attr.key = key;\n  switch (style) {\n    case 'HL':\n      // Highlighted text. Assign class name.\n      attr.className = 'highlight';\n      break;\n    case 'IM':\n      // Additional processing for images\n      el = handleImageData.call(this, el, data, attr);\n      // Image element cannot have content.\n      values = null;\n      break;\n    case 'BN':\n      // Button\n      attr.onClick = this.onFormButtonClick;\n      let inner = React.Children.map(values, (child) => {\n        return typeof child == 'string' ? child : undefined;\n      });\n      if (!inner || inner.length == 0) {\n        inner = [attr.name]\n      }\n      // Get text which will be sent back when the button is clicked.\n      attr['data-title'] = inner.join('');\n      break;\n    case 'MN':\n      // Mention\n      attr.className = 'mention'\n      if (data) {\n        attr.className += ' ' + idToColorClass(data.val, false, true);\n      }\n      break;\n    case 'FM':\n      // Form\n      attr.className = 'bot-form';\n      break;\n    case 'RW':\n      // Form element formatting is dependent on element content.\n      break;\n    case 'QQ':\n      // Quote/citation.\n      attr.className = 'reply-quote'\n      attr.onClick = this.onQuoteClick;\n      break;\n    default:\n      if (el == '_UNKN') {\n        // Unknown element.\n        el = React.Fragment;\n        values = [<i className=\"material-icons gray\">extension</i>, ' '].concat(values || []);\n      }\n      break;\n  }\n  if (!el) {\n    return values;\n  }\n  return React.createElement(el, attr, values);\n};\n\n// Converts Drafty object into a one-line preview. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\nexport function previewFormatter(style, data, values, key) {\n  if (!style) {\n    // Unformatted.\n    return values;\n  }\n\n  if (style == 'HD') {\n    // Hidden.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  switch (style) {\n    case 'BR':\n      // Replace new line with a space.\n      el = React.Fragment;\n      values = [' '];\n      break;\n    case 'HL':\n      // Make highlight less prominent in preview.\n      attr.className = 'highlight preview';\n      break;\n    case 'LN':\n    case 'MN':\n      // Disable links in previews.\n      el = 'span';\n      break;\n    case 'IM':\n      // Replace image with '[icon] Image'.\n      el = React.Fragment;\n      values = [<i key=\"im\" className=\"material-icons\">photo</i>, this.formatMessage(messages.drafty_image)];\n      break;\n    case 'BN':\n      el = 'span';\n      attr.className = 'flat-button faux';\n      break;\n    case 'FM':\n      el = React.Fragment;\n      values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n        this.formatMessage(messages.drafty_form)].concat(' ', values || []);\n      break;\n    case 'RW':\n      el = React.Fragment;\n      break;\n    case 'EX':\n      if (data) {\n        if (data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        // Clear payload.\n        delete data.val;\n        delete data.ref;\n      }\n      el = React.Fragment;\n      values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, this.formatMessage(messages.drafty_attachment)];\n      break;\n    default:\n      if (el == '_UNKN') {\n        el = React.Fragment;\n        values = [<i key=\"unkn\" className=\"material-icons\">extension</i>, ' '].concat(values || []);\n      }\n      break;\n  }\n  if (!el) {\n    return values;\n  }\n  return React.createElement(el, attr, values);\n};\n\n// Converts Drafty object into a quoted reply. 'this' is set by the caller.\nfunction inlineImageAttr(attr, data) {\n  attr.style = {\n    width: IMAGE_THUMBNAIL_DIM + 'px',\n    height: IMAGE_THUMBNAIL_DIM + 'px',\n    maxWidth: IMAGE_THUMBNAIL_DIM + 'px',\n    maxHeight: IMAGE_THUMBNAIL_DIM + 'px',\n  }\n  attr.className = 'inline-image';\n  attr.alt = this.formatMessage(messages.drafty_image);\n  if (!data) {\n    attr.src = 'img/broken_image.png';\n  }\n  attr.title = attr.alt;\n  return attr;\n}\n\n// Displays a portion of Drafty within 'QQ' quotes. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onQuoteClick: this.handleQuoteClick (optional)\nexport function quoteFormatter(style, data, values, key) {\n  if (['BR', 'EX', 'IM', 'MN', 'QQ'].includes(style)) {\n    let el = Drafty.tagName(style);\n    let attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch(style) {\n      case 'IM':\n        attr = inlineImageAttr.call(this, attr, data);\n        values = [React.createElement('img', attr, null), ' ', attr.alt];\n        el = React.Fragment;\n        // Fragment attributes.\n        attr = {key: key};\n        break;\n      case 'MN':\n        el = 'span';\n        attr.className = 'mention'\n        if (data) {\n          attr.className += ' ' + idToColorClass(data.val, false, true);\n        }\n        break;\n      case 'QQ':\n        attr.className = 'reply-quote';\n        attr.onClick = this.onQuoteClick;\n        break;\n      case 'EX':\n        let fname;\n        if (data) {\n          if (data.mime == 'application/json') {\n            // Ignore JSON attachments: they are form response payloads.\n            return null;\n          }\n          fname = data.name;\n          // Clear payload.\n          delete data.val;\n          delete data.ref;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>,\n          shortenFileName(fname, 16) || this.formatMessage(messages.drafty_attachment)];\n        break;\n    }\n    return React.createElement(el, attr, values);\n  }\n  return previewFormatter.call(this, style, data, values, key);\n}\n\n// Create image thumbnail suitable for inclusion in a quote.\nfunction quoteImage(data) {\n  let promise;\n  // Get the blob from the image data.\n  if (data.val) {\n    const blob = base64ToBlob(data.val, data.mime);\n    promise = blob ? Promise.resolve(blob) : Promise.reject(new Error(\"Invalid image\"));\n  } else {\n    promise = fetch(this.authorizeURL(sanitizeImageUrl(data.ref))).then(evt => {\n      if (evt.ok) {\n        return evt.blob();\n      } else {\n        throw new Error(`Image fetch unsuccessful: ${evt.status} ${evt.statusText}`);\n      }\n    });\n  }\n\n  // Scale the blob.\n  return promise\n    .then(blob => {\n      // Cut the square from the center of the image and shrink it.\n      return imageScaled(blob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, true)\n    }).then(scaled => {\n      data.mime = scaled.mime;\n      data.size = scaled.blob.size;\n      data.width = scaled.width;\n      data.height = scaled.height;\n      delete data.ref;\n      // Keeping the original file name, if provided: ex.data.name;\n\n      data.src = URL.createObjectURL(scaled.blob);\n      return blobToBase64(scaled.blob);\n    }).then(b64 => {\n      data.val = b64.bits;\n      return data;\n    }).catch(err => {\n      delete data.val;\n      delete data.src;\n      data.width = IMAGE_THUMBNAIL_DIM;\n      data.height = IMAGE_THUMBNAIL_DIM;\n      // Rethrow.\n      throw err;\n    });\n}\n\n// Create a preview of a reply.\nexport function replyFormatter(style, data, values, key) {\n  if (style != 'IM') {\n    return quoteFormatter.call(this, style, data, values, key);\n  }\n  const attr = inlineImageAttr.call(this, {key: key}, data);\n  attr.whenDone = cancelablePromise(quoteImage.call(this, data));\n  values = [React.createElement(LazyImage, attr, null), ' ', attr.alt];\n  return React.createElement(React.Fragment, {key: key}, values);\n}\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { previewFormatter } from '../lib/formatters.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.isVerified) {\n      icon_badges.push({icon: 'verified', color: 'verified-color'});\n    }\n    if (this.props.isStaff) {\n      icon_badges.push({icon: 'staff', color: 'staff-color'});\n    }\n    if (this.props.isDangerous) {\n      icon_badges.push({icon: 'dangerous', color: 'danger-color'});\n    }\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        Drafty.isValid(this.props.preview) ?\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, previewFormatter,\n          {formatMessage: this.props.intl.formatMessage})) :\n        <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n          <FormattedMessage id=\"invalid_content\"\n            defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i>\n        </>\n      ) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            tinode={this.props.tinode}\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <ContactBadges badges={icon_badges} /><UnreadBadge count={this.props.unread} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            this.props.small ? null : <div className=\"contact-comment\">{marker}<span>{subtitle || '\\u00A0'}</span></div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let forwarded;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              forwarded = msg.head ? msg.head.forwarded : null;\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH, undefined, forwarded != null);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              tinode={this.props.tinode}\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              forwarded={forwarded}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              isVerified={c.trusted && c.trusted.verified}\n              isStaff={c.trusted && c.trusted.staff}\n              isDangerous={c.trusted && c.trusted.danger}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <input className=\"search\" type=\"text\"\n              placeholder={this.props.placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          {this.state.search ?\n            <a href=\"#\" onClick={this.handleClear}><i className=\"material-icons\">highlight_off</i></a>\n            :\n            <span><i className=\"material-icons\">&nbsp;</i></span>}\n        </div>\n      </div>\n    );\n  }\n};\n","// Forward Menu: message forwarding popup/dropdown menu.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from './contact-list.jsx';\nimport SearchContacts from './search-contacts.jsx';\n\nexport default class ForwardDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: null\n    };\n\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      // Not forwarding the message.\n      this.props.hide(false);\n    }\n  }\n\n  handleClose(e) {\n    e.preventDefault();\n    this.props.hide(false);\n  }\n\n  handleSearchContacts(query) {\n    this.setState({ query: Tinode.isNullValue(query) ? null : query });\n    this.props.onSearchContacts(query);\n  }\n\n  handleContactSelected(uid) {\n    this.props.onTopicSelected(uid);\n    this.props.hide(true);\n  }\n\n  render() {\n    let contacts = this.state.query != null ? this.props.searchResults : this.props.contacts;\n    // Filter out contacts without a 'W' or 'J' permissions as well as the current topic.\n    contacts = contacts.filter((c) => {\n      return (c.name != this.props.topicSelected) && c.acs.isJoiner() && c.acs.isWriter();\n    });\n\n    return (\n      <div className=\"alert-container\">\n        <div className=\"forward-dialog\">\n          <div className=\"title with-control\">\n            <div><FormattedMessage id=\"forward_to\" defaultMessage=\"Forward to\"\n              desription=\"Title of the contact selector dialog when forwarding a message\" /></div>\n            <div><a href=\"#\" onClick={this.handleClose}><i className=\"material-icons\">close</i></a></div>\n          </div>\n          <FormattedMessage id=\"forward_to_search_placeholder\" defaultMessage=\"Search contacts\"\n            description=\"Contact search prompt when forwarding a message.\">{\n            (search_placeholder) => <SearchContacts\n              placeholder={search_placeholder}\n              onSearchContacts={this.handleSearchContacts} />\n          }</FormattedMessage>\n          <FormattedMessage id=\"search_no_results\" defaultMessage=\"Search returned no results\"\n              description=\"Text shown in contacts view when query returned no results.\">{\n            (not_found_placeholder) => <ContactList\n              tinode={this.props.tinode}\n              contacts={contacts}\n              myUserId={this.props.myUserId}\n              emptyListMessage={not_found_placeholder}\n              showOnline={false}\n              showUnread={false}\n              showContextMenu={false}\n              onTopicSelected={this.handleContactSelected} />\n          }</FormattedMessage>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    const className = 'load-spinner-box' + (this.props.large ? ' large' : '')\n      + (this.props.clear ? ' clear' : '') + (this.props.centered ? ' centered' : '');\n    return (this.props.show ?\n      <div className={className}><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport LoadSpinner from './load-spinner.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nimport { AVATAR_SIZE } from '../config.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      source: props.avatar\n    };\n\n    this.handleFileReceived = this.handleFileReceived.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({source: this.props.avatar});\n    }\n  }\n\n  handleFileReceived(e) {\n    const image = e.target.files[0];\n    this.props.onImageUpdated(image.type, URL.createObjectURL(image), image.name);\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.source ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageUpdated();}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.source ?\n          <img src={this.props.tinode.authorizeURL(sanitizeImageUrl(this.state.source))} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                tinode={this.props.tinode}\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileReceived} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n        <LoadSpinner show={this.props.uploading} large={true} clear={true} centered={true} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst icon_mapping = {'staff': 'verified_user'};\n\nconst messages = defineMessages({\n  badge_verified: {\n    id: 'badge_verified',\n    defaultMessage: 'Verified/official',\n    description: 'Explanation of a verified account or topic badge'\n  },\n  badge_staff: {\n    id: 'badge_staff',\n    defaultMessage: 'Staff-managed',\n    description: 'Explanation of a staff-managed account or topic badge'\n  },\n  badge_danger: {\n    id: 'badge_danger',\n    defaultMessage: 'Untrustworthy',\n    description: 'Suspicious or untrustworthy account or topic badge'\n  },\n});\n\n\n/* Trusted badges with labels: verified, staff, danger */\nclass BadgeList extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let badges = null;\n    if (this.props.trustedBadges && this.props.trustedBadges.length > 0) {\n      badges = [];\n      this.props.trustedBadges.map((b) => {\n        const comment = formatMessage(messages['badge_' + b]);\n        const style = 'material-icons ' + b + '-color';\n        badges.push(<div className=\"trusted-badge\" key={b}><i className={style}>{icon_mapping[b] || b}</i> {comment}</div>);\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n\nexport default injectIntl(BadgeList);\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked === true ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n        this.props.checked === false ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i> :\n          <i className=\"material-icons lt-blue\">indeterminate_check_box</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          tinode={this.props.tinode}\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    const autoFocus = !(this.props.tabIndex > 0);\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          tabIndex={this.props.tabIndex}\n          autoFocus={autoFocus} />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            tinode={this.props.tinode}\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          tinode={this.props.tinode}\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    const idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    const mode = (this.state.mode || 'N').split('').sort().join('');\n    const before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box small\"><Contact\n            tinode={this.props.tinode}\n            item={this.props.item}\n            title={this.props.userTitle}\n            small={true}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Image zoom and crop widget.\n\nimport React from 'react';\n\nconst DEFAULT_MAX_ZOOM = 2.5;\n\nexport default class Cropper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Coordinates of the top left corner of the image in container coordinates.\n      panX: 0,\n      panY: 0,\n      // Origin of the zoom in image coordinates.\n      originX: 0,\n      originY: 0,\n      // Zoom scale.\n      zoom: 1,\n      // Zoom min and max.\n      minZoom: 0,\n      maxZoom: DEFAULT_MAX_ZOOM,\n    };\n\n    // References to DOM elements for hooking up events and getting screen dimensions.\n    // The transparent element which captures mouse moves (moves with the image).\n    this.overlay = React.createRef();\n    // The image cutout window or view port (static).\n    this.cutout = React.createRef();\n    // Scaled and translated image preview.\n    this.preview = React.createRef();\n    // The main container (static).\n    this.boundingBox = React.createRef();\n\n    // The original image width and height before any scaling.\n    this.imageWidth = 0;\n    this.imageHeight = 0;\n\n    // Mouse position when dragging.\n    this.mouseX = 0\n    this.mouseY = 0;\n    // Length of the previous mouse move when dragging.\n    this.prevDistance = 0;\n\n    // Bounding rectangles of static elements.\n    this.cutoutRect = {};\n    this.bBoxRect = {};\n    // Center of the bounding box.\n    this.originX = 0;\n    this.originY = 0;\n\n    this.initScaling = this.initScaling.bind(this);\n    this.onZoom = this.onZoom.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseTouch = this.mouseTouch.bind(this);\n    this.positionAll = this.positionAll.bind(this);\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.overlay.current.addEventListener('mousedown', this.mouseDown, { passive: true });\n    this.overlay.current.addEventListener('touchstart', this.mouseDown, { passive: true });\n\n    // The rectangle position is in viewport coordinates.\n    this.bBoxRect = this.boundingBox.current.getBoundingClientRect();\n    // Center of the bounding box in container coordinates.\n    this.originX = this.bBoxRect.width / 2;\n    this.originY = this.bBoxRect.height / 2;\n\n    // The rectangle position is in viewport coordinates.\n    this.cutoutRect = this.cutout.current.getBoundingClientRect();\n  }\n\n  componentWillUnmount() {\n    this.overlay.current.removeEventListener('mousedown', this.mouseDown);\n    this.overlay.current.removeEventListener('touchstart', this.mouseDown);\n  }\n\n  // Position all elements.\n  positionAll(panX, panY, zoom) {\n    // Zoom origin in image preview coordinates.\n    this.setState({\n      panX: panX,\n      panY: panY,\n      zoom: zoom,\n      originX: this.originX - panX,\n      originY: this.originY - panY,\n    });\n\n    // Pass cut out coordinates to caller.\n    const left = (this.originX - panX) * zoom - this.originX;\n    const top = (this.originY - panY) * zoom - this.originY;\n    this.props.onChange(\n      (left + this.cutoutRect.left - this.bBoxRect.left) / zoom,\n      (top + this.cutoutRect.top - this.bBoxRect.top) / zoom,\n      this.cutoutRect.width / zoom,\n      this.cutoutRect.height / zoom,\n      zoom);\n  }\n\n  // Check if new location is within the limits.\n  static checkBound(currPan, img, cutout, delta) {\n    let nextDiff = Math.min(0, cutout[0] - img[0] - delta, img[1] - cutout[1] + delta);\n    if (nextDiff == 0) {\n      // Cutout is completely within the image.\n      currPan += delta;\n    } else if (Math.min(0, cutout[0] - img[0], img[1] - cutout[1]) < nextDiff) {\n      // Cutout is outside of the range but closer to the bound.\n      currPan += delta;\n    }\n    return currPan;\n  }\n\n  initScaling() {\n    // Initialize components.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    this.imageWidth = imgRect.width;\n    this.imageHeight = imgRect.height;\n\n    // Set zoom slider's min and max values. Make sure the scaled image cannot be smaller than the cutout.\n    const minZoom = Math.max(this.cutoutRect.width / imgRect.width, this.cutoutRect.height / imgRect.height);\n    this.setState({\n      minZoom: minZoom,\n      maxZoom: Math.max(DEFAULT_MAX_ZOOM, minZoom + 1)\n    });\n\n    // Initial zoom level fills the bounding box at the smallest image dimension and overflows the largest, i.e. \"fill\" not \"fit\".\n    const zoom = Math.max(this.bBoxRect.width / imgRect.width, this.bBoxRect.height / imgRect.height);\n    // Converting from viewport coordinates to container, then panning.\n    const panX = this.cutoutRect.left - this.bBoxRect.left -\n      (imgRect.width - this.cutoutRect.width) / 2;\n    const panY = this.cutoutRect.top - this.bBoxRect.top -\n      (imgRect.height - this.cutoutRect.height) / 2;\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  onZoom(e) {\n    this.handleZoom(e.target.value);\n  }\n\n  handleZoom(zoom) {\n    let panX = this.state.panX;\n    let panY = this.state.panY;\n\n    // Ensure that the image at the new zoom is not outside of the cutout boundaries.\n    // Calculate image coordinates at the new zoom.\n    const imgLeft = this.originX - (this.originX - panX) * zoom;\n    const imgRight = imgLeft + this.imageWidth * zoom;\n    // Cutout in the same coordinates as the image.\n    const coLeft = this.cutoutRect.left - this.bBoxRect.left;\n    const coRight = coLeft + this.cutoutRect.width;\n    if (coLeft < imgLeft) {\n      panX -= imgLeft - coLeft;\n    } else if (coRight > imgRight) {\n      panX += coRight - imgRight;\n    }\n    const imgTop = this.originY - (this.originY - panY) * zoom;\n    const imgBottom = imgTop + this.imageHeight * zoom;\n    const coTop = this.cutoutRect.top - this.bBoxRect.top;\n    const coBottom = coTop + this.cutoutRect.height;\n    if (coTop < imgTop) {\n      panY -= imgTop - coTop;\n    } else if (coBottom > imgBottom) {\n      panY += coBottom - imgBottom;\n    }\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  mouseDown(e) {\n    if (e.touches) {\n      this.mouseX = e.touches[0].pageX;\n      this.mouseY = e.touches[0].pageY;\n    } else {\n      this.mouseX = e.pageX;\n      this.mouseY = e.pageY;\n    }\n\n    window.addEventListener('mousemove', this.mouseMove, { passive: false });\n    window.addEventListener('touchmove', this.mouseTouch, { passive: false });\n    window.addEventListener('mouseup', this.mouseUp, { passive: true });\n    window.addEventListener('touchend', this.mouseUp, { passive: true });\n    // Disable text selection in the entire document.\n    document.body.style['userSelect'] = 'none';\n  }\n\n  // Perform image panning.\n  translate(pageX, pageY) {\n    const dX = pageX - this.mouseX;\n    const dY = pageY - this.mouseY;\n\n    this.mouseX = pageX;\n    this.mouseY = pageY;\n\n    // Make sure the image is within the cutout window.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    // Check if the new position is within the boundaries, and if not if it's closer to them.\n    let panX = Cropper.checkBound(this.state.panX, [imgRect.left, imgRect.right],\n      [this.cutoutRect.left, this.cutoutRect.right], dX);\n    let panY = Cropper.checkBound(this.state.panY, [imgRect.top, imgRect.bottom],\n      [this.cutoutRect.top, this.cutoutRect.bottom], dY);\n\n    this.positionAll(panX, panY, this.state.zoom);\n  }\n\n  // Image panning.\n  mouseMove(e) {\n    e.preventDefault();\n    this.translate(e.pageX, e.pageY);\n  }\n\n  mouseTouch(e) {\n    e.preventDefault();\n\n    if (e.touches.length == 1) {\n      this.translate(e.touches[0].pageX, e.touches[0].pageY);\n      return;\n    }\n\n    // Image zooming by pinching.\n    const [touch0, touch1] = e.touches;\n    const distance = Math.sqrt((touch0.pageX - touch1.pageX) * (touch0.pageX - touch1.pageX) +\n      (touch0.pageY - touch1.pageY) * (touch0.pageY - touch1.pageY));\n\n    if (!this.prevDistance) {\n        this.prevDistance = distance / this.state.zoom;\n    }\n\n    let scale = (distance / this.prevDistance);\n    this.handleZoom(Math.max(this.minZoom, Math.min(this.maxZoom, scale)));\n  }\n\n  mouseUp(e) {\n    window.removeEventListener('mousemove', this.mouseMove);\n    window.removeEventListener('touchmove', this.mouseTouch);\n    window.removeEventListener('mouseup', this.mouseUp);\n    window.removeEventListener('touchend', this.mouseUp);\n    // Re-enable text selection.\n    document.body.style['userSelect'] = '';\n\n    this.positionAll(this.state.panX, this.state.panY, this.state.zoom);\n  }\n\n  render() {\n    // transform3d: position and scale.\n    const t3d = `translate3d(${this.state.panX}px, ${this.state.panY}px, 0) scale(${this.state.zoom})`;\n    // transformOrigin: zoom origin.\n    const orig = `${this.state.originX}px ${this.state.originY}px`;\n\n    // Overlay position and size are exactly equal to the position and size of the transformed image\n    // except it uses different coordinates.\n    const overlay = {\n      top: `${this.originY - this.state.originY * this.state.zoom}px`,\n      left: `${this.originX - this.state.originX * this.state.zoom}px`,\n      width: `${this.imageWidth * this.state.zoom}px`,\n      height: `${this.imageHeight * this.state.zoom}px`\n    };\n    return (\n      <div className=\"cropper\">\n        <div className=\"bounding-box\" ref={this.boundingBox}>\n          <img src={this.props.source} className=\"preview\" alt=\"\"\n            style={{transform: t3d, transformOrigin: orig}} ref={this.preview} onLoad={this.initScaling} />\n          <div className=\"cutout circle\" ref={this.cutout} />\n          <div className=\"overlay\" style={overlay} ref={this.overlay} />\n        </div>\n        <div className=\"zoom-wrapper\">\n          <input type=\"range\" className=\"zoomer\"\n            step=\"0.001\" min={this.state.minZoom} max={this.state.maxZoom} value={this.state.zoom} onChange={this.onZoom} />\n        </div>\n      </div>\n    );\n  }\n}\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Cropper from './cropper.jsx';\nimport { imageCrop } from '../lib/blob-helpers.js';\n\nexport default class AvatarCrop extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n      scale: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Cut out in image coordinates and desired scale factor.\n  handleChange(left, top, width, height, scale) {\n    this.setState({\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      scale: scale\n    });\n  }\n\n  handleSubmit() {\n    imageCrop(this.props.mime, this.props.avatar,\n      this.state.left, this.state.top, this.state.width, this.state.height,\n      this.state.scale)\n      .then(img => {\n        this.props.onSubmit(img.mime, img.blob, img.width, img.height);\n      })\n      .catch(err => {\n        this.props.onError(err);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <Cropper\n            source={this.props.avatar}\n            onChange={this.handleChange} />\n        </div>\n        <div className=\"dialog-buttons\">\n          {this.props.onCancel ?\n            <button className=\"secondary\" onClick={this.props.onCancel}>\n              <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n            </button>\n            : null}\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value || ''});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n   handleStartEditing() {\n    if (!this.props.readOnly) {\n      this.setState({active: true}, () => {\n        if (this.selfRef.current) {\n          this.selfRef.current.focus();\n        }\n      });\n    }\n  }\n\n  handleEditingFinished(event) {\n    const value = this.state.value.trim();\n    if (this.props.required && (!event.target.checkValidity() || !value)) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (!this.state.active) {\n      let spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      let spanClass = 'in-place-edit' + (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (!this.props.multiline || this.props.multiline == 1) {\n        spanClass += ' short';\n      }\n\n      return (<span className={spanClass} onClick={this.handleStartEditing}>\n        <span>{spanText}</span>\n      </span>);\n    }\n\n    let element;\n    const attr = {};\n    if (this.props.type == 'password') {\n      element = VisiblePassword;\n      attr.onFinished = this.handlePasswordFinished;\n    } else {\n      if (this.props.multiline > 1) {\n        element = 'textarea';\n        attr.rows = this.props.multiline;\n        attr.className = 'inplace-edit';\n      } else {\n        element = 'input';\n        attr.type = this.props.type || 'text';\n      }\n      attr.value = this.state.value;\n      attr.onChange = this.handeTextChange;\n      attr.onKeyDown = this.handleKeyDown;\n      attr.onBlur = this.handleEditingFinished;\n    }\n    attr.placeholder = this.props.placeholder;\n    attr.required = this.props.required ? 'required' : '';\n    attr.autoComplete = this.props.autoComplete;\n    attr.autoFocus = true;\n    attr.ref = this.selfRef;\n\n    return React.createElement(element, attr, null);\n  }\n};\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags || [],\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const tags = nextProps.tags || [];\n    if (!arrayEqual(tags, prevState.tags) && !prevState.activated) {\n      return {tags: tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags || []});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags || []});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              tinode={this.props.tinode}\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              tabIndex={this.props.tabIndex}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// Widget for editing topic description.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarCrop from './avatar-crop.jsx';\nimport AvatarUpload from './avatar-upload.jsx';\nimport InPlaceEdit from './in-place-edit.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { AVATAR_SIZE, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE,\n  MAX_INBAND_ATTACHMENT_SIZE, MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nexport default class TopicDescEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: Tinode.isMeTopicName(this.props.topic),\n      owner: acs && acs.isOwner(),\n      fullName: topic.public ? topic.public.fn : undefined,\n      private: topic.private ? topic.private.comment : null,\n      description: topic.public ? topic.public.note : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      tags: topic.tags() || [],\n      newAvatar: null,\n      newAvatarMime: null\n    };\n\n    this.previousOnTags = null;\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageUpdated = this.handleImageUpdated.bind(this);\n    this.handleAvatarCropped = this.handleAvatarCropped.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleDescriptionUpdate = this.handleDescriptionUpdate.bind(this);\n    this.uploadAvatar = this.uploadAvatar.bind(this);\n    this.handleAvatarCropCancel = this.handleAvatarCropCancel.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    this.previousOnTags = topic.onTagsUpdated;\n    topic.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onTagsUpdated = this.previousOnTags;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn && this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(fn, null));\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onUpdateTopicDesc(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleDescriptionUpdate(desc) {\n    desc = desc.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (desc) {\n      this.setState({description: desc});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, null, null, desc));\n    }\n  }\n\n  // AvatarUpload widget has changed the avatar: received a new file or deleted the avatar.\n  handleImageUpdated(mime, img) {\n    // This will show the AvatarCropView is img is not null.\n    this.setState({newAvatar: img, newAvatarMime: mime});\n    if (!img) {\n      // Deleting the avatar.\n      this.setState({avatar: null});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, Tinode.DEL_CHAR));\n    }\n  }\n\n  // AvatarCropView calls this method when the user has cropped the image.\n  handleAvatarCropped(mime, blob, width, height) {\n    const url = blob ? URL.createObjectURL(blob) : null;\n    this.setState({avatar: url, newAvatar: null, newAvatarMime: null});\n    if (blob) {\n      this.uploadAvatar(mime, blob, width, height);\n    }\n  }\n\n  // Utility method for converting cropped avatar blob to bytes for sending inband or\n  // for uploading it to the server out of band.\n  uploadAvatar(mime, blob, width, height) {\n    const readyToUpload = (image) => {\n      let {mime, blob, width, height} = image;\n      if (blob.size > MAX_AVATAR_BYTES) {\n        // Too large to send inband - uploading out of band and sending as a link.\n        const uploader = this.props.tinode.getLargeFileHelper();\n\n        this.setState({uploading: true});\n        uploader.upload(blob)\n          .then((url) => {\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, url));\n          })\n          .catch((err) => {\n            this.props.onError(err, 'err');\n          })\n          .finally(() => {\n            this.setState({uploading: false});\n          });\n      } else {\n        this.setState({uploading: true});\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob)\n          .then(b64 => {\n            const du = makeImageUrl({data: b64.bits, type: mime});\n            this.setState({source: du});\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, du));\n            this.setState({uploading: false});\n          });\n      }\n    };\n\n    if (width > AVATAR_SIZE || height > AVATAR_SIZE || width != height) {\n      // Avatar is not square or too large even after cropping. Shrink it and make square.\n      imageScaled(blob, AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true)\n        .then(scaled => readyToUpload(scaled))\n        .catch(err => this.props.onError(err, 'err'));\n    } else {\n      readyToUpload({mime: mime, blob: blob, width: width, height: height});\n    }\n  }\n\n  handleAvatarCropCancel(img) {\n    this.setState({newAvatar: null, newAvatarMime: null});\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    if (this.state.newAvatar) {\n      return (\n        <AvatarCrop\n          avatar={this.state.newAvatar}\n          mime={this.state.newAvatarMime}\n          onSubmit={this.handleAvatarCropped}\n          onCancel={this.handleAvatarCropCancel}\n          onError={this.props.onError} />\n      );\n    }\n\n    const editable = this.state.isMe || this.state.owner;\n\n    return (\n      <>\n      <div className=\"panel-form-column\">\n        <center>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            readOnly={!editable}\n            uid={this.props.topic}\n            title={this.state.fullName}\n            onImageUpdated={this.handleImageUpdated}\n            onError={this.props.onError} />\n        </center>\n        {this.state.isMe ?\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n                description=\"Input placeholder for person's full name\">{\n                (full_name_placeholder) => <InPlaceEdit\n                  placeholder={full_name_placeholder}\n                  value={this.state.fullName}\n                  required={true}\n                  onFinished={this.handleFullNameUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n        :\n          <>\n            <div className=\"group\">\n              <div><label className=\"small\">\n                <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                  description=\"Label for editing topic name\" />\n              </label></div>\n              <div>\n                <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n                  description=\"Prompt for entering topic name\">{\n                  (group_name_placeholder) => <InPlaceEdit\n                    placeholder={group_name_placeholder}\n                    readOnly={!editable}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                    description=\"Label for editing 'private'\" />\n                </label>\n              </div>\n              <div>\n                <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n                  description=\"Placeholder for editing 'private'\">{\n                  (private_placeholder) => <InPlaceEdit\n                    placeholder={private_placeholder}\n                    value={this.state.private}\n                    onFinished={this.handlePrivateUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n          </>\n        }\n        {editable || this.state.description ?\n          <div className=\"group\">\n            <div><label className=\"small\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label></div>\n            <div>\n              <FormattedMessage id=\"description_editing_placeholder\"\n                defaultMessage=\"Description (optional)\"\n                description=\"Placeholder for editing topic description\">{\n                (private_placeholder) => <InPlaceEdit\n                  placeholder={private_placeholder}\n                  readOnly={!editable}\n                  value={this.state.description}\n                  multiline={2}\n                  onFinished={this.handleDescriptionUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          : null\n        }\n      </div>\n      {editable ?\n        <>\n          <div className=\"hr\" />\n          <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n            description=\"Section title for TagManager\">{\n              (title_tag_manager) => <TagManager\n                tinode={this.props.tinode}\n                title={title_tag_manager}\n                activated={false}\n                tags={this.state.tags}\n                onSubmit={this.handleTagsUpdated} />\n          }</FormattedMessage>\n        </>\n        : null\n      }\n      </>\n    );\n  }\n};\n","// View for editing topic (including 'me' topic) parameters.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport TopicDescEdit from '../widgets/topic-desc-edit.jsx';\n\nimport { arrayEqual, asEmail, asPhone } from '../lib/utils.js';\n\nexport default class TopicCommon extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: this.props.topic == 'me',\n      owner: acs && acs.isOwner(),\n      credentials: (topic.getCredentials ? topic.getCredentials() : null) || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      tags: []\n    };\n\n    this.previousTagsUpdated = undefined;\n\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    topic.onCredsUpdated = this.tnCredsUpdated;\n\n    if (topic.onTagsUpdated != this.onTagsUpdated) {\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onCredsUpdated = undefined;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    const value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  // Server informs that the tags have been updated.\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated(tags);\n    }\n  }\n\n  // Request server to change tags.\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdateRequest(this.props.topic, tags);\n    }\n  }\n\n  render() {\n    const credentials = [];\n    if (this.state.isMe) {\n      this.state.credentials.map((cred) => {\n        credentials.push(\n          <div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n            <span> {!cred.done ?\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n                <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                  description=\"Validate credentail call to action\" />\n              </a>\n            : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n              className=\"material-icons gray\">delete_outline</i></a></span>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className=\"scrollable-panel\">\n        <TopicDescEdit\n          tinode={this.props.tinode}\n          topic={this.props.topic}\n          onUpdateTopicDesc={this.props.onUpdateTopicDesc}\n          onUpdateTags={this.handleTagsUpdated}\n          onError={this.props.onError} />\n        {this.state.isMe ?\n          <>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n                description=\"Label for user contacts\" />\n              </label>\n              <div className=\"quoted\">\n                {credentials}\n                {this.state.addCredActive ?\n                  <input type=\"text\" value={this.state.value}\n                    className={this.state.addCredInvalid ? 'invalid' : null}\n                    placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                    onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n                  : null}\n                <div>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                    <i className=\"material-icons\">add</i>\n                    <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n                  </a></div>\n              </div>\n            </div>\n          </>\n        : null\n      }\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from './in-place-edit.jsx';\n\nimport { NO_ACCESS_MODE } from '../config.js';\n\nconst messages = defineMessages({\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  topic_delete: {\n    id: 'topic_delete',\n    defaultMessage: 'Delete Conversation',\n    description: 'Alert title when deleting the topic.'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n});\n\nclass TopicSecurity extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleDeleteTopic = this.handleDeleteTopic.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n  }\n\n  handleDeleteTopic(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.topic_delete), // title\n      formatMessage(messages.topic_delete_warning), // content\n      (() => { this.props.onDeleteTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.props.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          {!this.props.channel ?\n            <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n              <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages)\n              }\n            </a>\n            :\n            null\n          }\n          {this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleDeleteTopic}>\n              <i className=\"material-icons\">delete</i> &nbsp;{formatMessage(messages.topic_delete)}\n            </a>\n            :\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n            </a>\n          }\n          {!this.props.groupTopic ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n              <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n            </a>\n            :\n            null\n          }\n          {!this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n              <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n            </a>\n            :\n            null\n          }\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          {this.props.groupTopic ?\n            <>\n              <div className=\"group\">\n                <label>\n                  <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                    description=\"Label for current user permissions\" />\n                </label> <tt className=\"clickable\"\n                  onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                  {this.props.access}\n                </tt>\n              </div>\n              {!this.props.channel ?\n                <div className=\"group\">\n                  <div>\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                      description=\"Label for default access mode\" />\n                    </label>\n                  </div>\n                  <div className=\"quoted\">\n                    <div>Auth: <tt className={this.props.owner ? 'clickable' : null}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        if (this.props.owner) {\n                          this.props.onLaunchPermissionsEditor('auth');\n                        }\n                      }}>{this.props.auth}</tt>\n                    </div>\n                    <div>Anon: <tt className={this.props.owner ? 'clickable' : null}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        if (this.props.owner) {\n                          this.props.onLaunchPermissionsEditor('anon');\n                        }\n                      }}>{this.props.anon}</tt>\n                    </div>\n                  </div>\n                </div>\n              :\n                null\n              }\n            </>\n            :\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                    description=\"Section title\" />\n                </label>\n              </div>\n              <div className=\"quoted\">\n                <div>\n                  <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                    description=\"Label for the current user\" /> <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                    {this.props.access}\n                  </tt>\n                </div>\n                <div>{this.props.fullName ? this.props.fullName : formatMessage(messages.other_user)}:\n                  &nbsp;<tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('given')}}>\n                    {this.props.modeGiven2}\n                  </tt>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TopicSecurity);\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\nimport TopicSecurity from '../widgets/topic-security.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'panel_title_info',\n    description: 'Title for InfoView',\n    defaultMessage: 'Info'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  members: {\n    id: 'panel_title_members',\n    description: 'Title for managing group members view.',\n    defaultMessage: 'Members'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  perm_want: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  perm_given: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  perm_auth: {\n    id: 'permissions_authenticated',\n    defaultMessage: 'Authenticated',\n    description: 'Title for editing default authenticated permissions'\n  },\n  perm_anon: {\n    id: 'permissions_anonymous',\n    defaultMessage: 'Anonymous',\n    description: 'Title for editing default anonymous permissions'\n  },\n  perm_user: {\n    id: 'permissions_user',\n    defaultMessage: 'User\\'s Permissions',\n    description: 'Title for editing user\\'s permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n});\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      description: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      trustedBadges: [],\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.resetTags = this.resetTags.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n    this.handleBackNavigate = this.handleBackNavigate.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n      this.resetTags(topic);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    const badges = [];\n    if (topic.trusted) {\n      for (const [key, val] of Object.entries(topic.trusted)) {\n        if (val) {\n          badges.push(key);\n        }\n      }\n    }\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: _clip(topic.public ? topic.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(topic.public ? topic.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      trustedBadges: badges,\n      private: _clip(topic.private ? topic.private.comment : null, MAX_TITLE_LENGTH),\n      archived: topic.isArchived(),\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType() || topic.chan,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n  }\n\n  resetTags(topic) {\n    if (topic.getType() != 'grp') {\n      return;\n    }\n\n    const acs = topic.getAccessMode();\n    if (acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handleUnarchive(ignored, ignored2) {\n    this.props.onTopicUnArchive(this.props.topic);\n  }\n\n  handlePermissionsChanged(which, perm) {\n    switch (which) {\n      case 'auth':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.handleBackNavigate();\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.perm_want);\n        titleCompare = formatMessage(messages.perm_given);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.error(\"Unknown permission editing mode '\" + which + \"'\");\n        return;\n    }\n    this.setState({\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n    this.props.onNavigate(`perm/${which}`);\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.props.onNavigate('members');\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.props.onNavigate('info');\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleBackNavigate() {\n    const args = (this.props.panel || 'info').split('/');\n    if (args[0] == 'info') {\n      this.props.onNavigate(null);\n    } else if (args[0] == 'perm') {\n      if (args[1] == 'user') {\n        this.props.onNavigate('info');\n      } else {\n        this.props.onNavigate('security');\n      }\n    } else {\n      this.props.onNavigate('info');\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const isMe = this.props.tinode.isMe(params.topicName);\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: () => {\n        this.handleLaunchPermissionsEditor(isMe ? 'want' : 'user', params.topicName);\n      }}\n    ];\n    if (!isMe) {\n      menuItems.push('member_delete');\n    }\n    menuItems.push(user.acs.isMuted() ? 'member_unmute' : 'member_mute');\n    if (!isMe) {\n      menuItems.push(user.acs.isJoiner() ? 'member_block' : 'member_unblock');\n    }\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const args = (this.props.panel || 'info').split('/');\n    const view = args[0];\n    args.shift();\n\n    const {formatMessage} = this.props.intl;\n    const panelTitle = formatMessage((view == 'perm' ? messages['perm_' + args[0]] : messages[view])\n      || messages['info']);\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">{panelTitle}</div>\n          <div>\n            <MenuCancel onCancel={this.handleBackNavigate} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {view == 'members' ?\n          <GroupManager\n            tinode={this.props.tinode}\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleBackNavigate}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        view == 'perm' && args.length > 0 ?\n          <PermissionsEditor\n            tinode={this.props.tinode}\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={(mode) => this.handlePermissionsChanged(args[0], mode)}\n            onCancel={this.handleBackNavigate} />\n          :\n        view == 'general' ?\n          <TopicCommon\n            tinode={this.props.tinode}\n            topic={this.props.topic}\n            onCredAdd={this.props.onCredAdd}\n            onTopicTagsUpdateRequest={this.props.onTopicTagsUpdateRequest}\n            onCredConfirm={this.props.onCredConfirm}\n            onCredDelete={this.props.onCredDelete}\n            onUpdateTopicDesc={this.props.onTopicDescUpdateRequest}\n            onError={this.props.onError} />\n          :\n        view == 'security' ?\n          <TopicSecurity\n            topic={this.props.topic}\n            owner={this.state.owner}\n            admin={this.state.admin}\n            sharer={this.state.sharer}\n            deleter={this.state.deleter}\n            muted={this.state.muted}\n\n            groupTopic={this.state.groupTopic}\n            channel={this.state.channel}\n            access={this.state.access}\n            modeGiven={this.state.modeGiven}\n            modeWant={this.state.modeWant}\n            modeGiven2={this.state.modeGiven2}\n            modeWant2={this.state.modeWant2}\n            auth={this.state.auth}\n            anon={this.state.anon}\n\n            onShowAlert={this.props.onShowAlert}\n            onDeleteMessages={this.props.onDeleteMessages}\n            onLeaveTopic={this.props.onLeaveTopic}\n            onBlockTopic={this.props.onBlockTopic}\n            onReportTopic={this.props.onReportTopic}\n            onLaunchPermissionsEditor={this.handleLaunchPermissionsEditor}\n            onNavigate={this.props.onNavigate} />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-column\">\n              <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n                <i className=\"material-icons\">edit</i>&nbsp;\n                <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n              </a>\n              <center>\n                <AvatarUpload\n                  tinode={this.props.tinode}\n                  avatar={this.state.avatar}\n                  readOnly={true}\n                  uid={this.props.topic}\n                  title={this.state.fullName} />\n              </center>\n              <div className=\"group\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div className=\"large ellipsized\">{this.state.fullName}\n                {this.state.channel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}</div>\n              </div>\n              {this.state.private ?\n                <div className=\"group\">\n                  <div><label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label></div>\n                  <div className=\"large ellipsized\">{this.state.private}</div>\n                </div>\n                : null\n              }\n              <div className=\"group\">\n                <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                  description=\"Label for user address (ID)\" /></label>&nbsp;\n                <tt>{this.state.address}</tt>\n              </div>\n              <div className=\"group\">\n                <BadgeList trustedBadges={this.state.trustedBadges} />\n              </div>\n              {this.state.description ?\n                <div className=\"group\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                      description=\"Label for editing topic description\" />\n                  </label>\n                  <div>{this.state.description}</div>\n                </div> : null}\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <label>\n                <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                  description=\"Label for Muting/unmuting the topic\" />\n              </label>\n              <CheckBox name=\"P\" checked={this.state.muted} onChange={this.handleMuted} />\n            </div>\n            {this.state.archived ?\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_unarchive_topic\" defaultMessage=\"Archived:\"\n                    description=\"Label for unarchiving the topic\" />\n                </label>\n                <CheckBox name=\"archived\" checked={true} onChange={this.handleUnarchive} />\n              </div>\n              :\n              null\n            }\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n                <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n                  defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n              </a>\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-row\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                      description=\"Section title or label\" />\n                  </label>\n                </div>\n                <div className=\"panel-form-row\">\n                  <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                    <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                      defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                  </a>\n                </div>\n                <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                  description=\"Shown in place of group members\">{\n                  (no_members) => <ContactList\n                    tinode={this.props.tinode}\n                    contacts={this.state.contactList}\n                    myUserId={this.props.myUserId}\n                    emptyListMessage={no_members}\n                    topicSelected={this.state.selectedContact}\n                    showOnline={false}\n                    showUnread={false}\n                    showMode={true}\n                    noScroll={true}\n                    onTopicSelected={this.handleMemberSelected}\n                    showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                  />\n                }</FormattedMessage>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\n\nimport { fullFormatter, quoteFormatter } from '../lib/formatters.js';\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nclass BaseChatMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.formatterContext = {\n      getFormatter: (tp) => { return tp == 'QQ' ? quoteFormatter : null; },\n      formatMessage: props.intl.formatMessage.bind(props.intl),\n      viewportWidth: props.viewportWidth,\n      authorizeURL: props.tinode.authorizeURL.bind(props.tinode),\n      onImagePreview: this.handleImagePreview,\n      onFormButtonClick: this.handleFormButtonClick,\n      onQuoteClick: this.handleQuoteClick\n    };\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = [];\n    if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      menuItems.push('menu_item_send_retry');\n    }\n    if (this.props.userIsWriter &&\n        this.props.received > Tinode.MESSAGE_STATUS_FAILED &&\n        this.props.received < Tinode.MESSAGE_STATUS_DEL_RANGE) {\n      menuItems.push('menu_item_reply');\n    }\n    menuItems.push('menu_item_forward');\n\n    this.props.showContextMenu({\n      seq: this.props.seq,\n      content: this.props.content,\n      userFrom: this.props.userFrom,\n      userName: this.props.userName,\n      forwarded: this.props.forwarded,\n      y: e.pageY,\n      x: e.pageX,\n      pickReply: this.props.pickReply\n    }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const replyToSeq = this.props.replyToSeq;\n    if (replyToSeq) {\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.isGroup && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, (att, i) => {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name}\n          uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime}\n          size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      const tree = Drafty.format(content, fullFormatter, this.formatterContext);\n      content = React.createElement(React.Fragment, null, tree);\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n        <FormattedMessage id=\"invalid_content\"\n          defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i></>\n    }\n\n    return (\n      <li ref={this.props.innerRef} className={sideClass}>\n        {this.props.isGroup && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                tinode={this.props.tinode}\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              {this.props.userName ||\n                <i><FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\" /></i>\n              }\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\nconst IntlChatMessage = injectIntl(BaseChatMessage);\nconst ChatMessage = React.forwardRef((props, ref) => <IntlChatMessage innerRef = {ref} {...props} />);\n\nexport default ChatMessage;\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\nimport { quoteFormatter, replyFormatter } from '../lib/formatters.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.formatReply = this.formatReply.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n\n    this.setState({quote: this.formatReply()});\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n\n    if (prevProps.reply != this.props.reply) {\n      this.setState({quote: this.formatReply()});\n    }\n  }\n\n  formatReply() {\n    return this.props.reply ?\n      Drafty.format(this.props.reply.content, replyFormatter, {\n        formatMessage: this.props.intl.formatMessage.bind(this.props.intl),\n        authorizeURL: this.props.tinode.authorizeURL.bind(this.props.tinode)\n      }) : null;\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.reply && this.props.onQuoteClick) {\n      const replyToSeq = this.props.reply.seq;\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n\n    const quote =\n      (<div id=\"reply-quote-preview\">\n        <div className=\"cancel\">\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancelReply();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        {this.state.quote}\n      </div>);\n\n    return (\n      <div id=\"send-message-wrapper\">\n        {this.state.quote && !this.props.noInput ? quote : null}\n        <div id=\"send-message-panel\">\n          {!this.props.disabled ?\n            <>\n              {this.props.onAttachFile ?\n                <>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                    <i className=\"material-icons secondary\">photo</i>\n                  </a>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                    <i className=\"material-icons secondary\">attach_file</i>\n                  </a>\n                </>\n                :\n                null}\n              {this.props.noInput ?\n                (this.state.quote ? quote : <div className=\"hr thin\" />) :\n                <textarea id=\"sendMessage\" placeholder={prompt}\n                  value={this.state.message} onChange={this.handleMessageTyping}\n                  onKeyPress={this.handleKeyPress}\n                  ref={(ref) => {this.messageEditArea = ref;}}\n                  autoFocus />}\n              <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n                <i className=\"material-icons\">send</i>\n              </a>\n              <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n                onChange={this.handleAttachFile} style={{display: 'none'}} />\n              <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n                onChange={this.handleAttachImage} style={{display: 'none'}} />\n            </>\n            :\n            <div id=\"writing-disabled\">{prompt}</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize, shortenFileName } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.name}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n              description=\"Label for a file name\" /></b> {shortenFileName(this.props.content.name, 24) || '-'}</div>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          tinode={this.props.tinode}\n          reply={this.props.reply}\n          onCancelReply={this.props.onCancelReply}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            tinode={this.props.tinode}\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize, shortenFileName } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    const fname = shortenFileName(this.props.content.name, maxlength) || '-';\n\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.name}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{fname}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.name} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            tinode={this.props.tinode}\n            reply={this.props.reply}\n            onCancelReply={this.props.onCancelReply}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.name}>{fname}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].replace('#', '').split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        const item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlInfoPanel(hash, infopanel) {\n    const parsed = this.parseUrlHash(hash);\n    if (infopanel) {\n      parsed.params.info = infopanel;\n    } else {\n      delete parsed.params.info;\n    }\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport ContactBadges from '../widgets/contact-badges.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY,\n  MESSAGES_PAGE, MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE,\n  READ_DELAY, QUOTED_REPLY_LENGTH } from '../config.js';\nimport { blobToBase64, fileToBase64, imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n// Scroll distance before [go to latest message] button is shown.\nconst SHOW_GO_TO_LAST_DIST = 100;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  invalid_content: {\n    id: 'invalid_content',\n    defaultMessage: 'invalid content',\n    description: 'Shown when the message is unreadable'\n  },\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.retrySend = this.retrySend.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleMessageUpdate = this.handleMessageUpdate.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowMessageContextMenu = this.handleShowMessageContextMenu.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n    this.goToLatestMessage = this.goToLatestMessage.bind(this);\n\n    this.handlePickReply = this.handlePickReply.bind(this);\n    this.handleCancelReply = this.handleCancelReply.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.chatMessageRefs = {};\n    this.getOrCreateMessageRef = this.getOrCreateMessageRef.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  getOrCreateMessageRef(seqId) {\n    if (this.chatMessageRefs.hasOwnProperty(seqId)) {\n      return this.chatMessageRefs[seqId];\n    }\n    const ref = React.createRef();\n    this.chatMessageRefs[seqId] = ref;\n    return ref;\n  }\n\n  componentDidMount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller &&\n      (prevState.topic != this.state.topic || prevState.messageCount != this.state.messageCount)) {\n      // New message.\n      if (this.state.scrollPosition < SHOW_GO_TO_LAST_DIST) {\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight -\n          this.state.scrollPosition -\n          this.messagesScroller.offsetHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleMessageUpdate;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if ((this.state.topic != prevState.topic) || !prevProps.ready) {\n      this.subscribe(topic);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messageCount: 0,\n        latestClearId: -1,\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        isVerified: false,\n        isStaff: false,\n        isDangerous: false,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false,\n        reply: null,\n        showGoToLastButton: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n\n      let reply = null;\n      if (nextProps.forwardMessage) {\n        // We are forwarding a message. Show preview.\n        const preview = nextProps.forwardMessage.preview;\n        reply = {\n          content: preview,\n          forwarded: nextProps.forwardMessage.head.forwarded,\n          seq: null\n        };\n      }\n\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        reply: reply,\n        showGoToLastButton: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        Object.assign(nextState, {\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          messageCount: topic.messageCount(),\n          latestClearId: topic.maxClearId(),\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messageCount: 0,\n          latestClearId: -1,\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  subscribe(topic) {\n    if (!topic || topic.isSubscribed() || !this.props.ready) {\n      return;\n    }\n\n    // Is this a new topic?\n    const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n    // Don't request the tags. They are useless unless the user\n    // is the owner and is editing the topic.\n    let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n    if (this.state.isReader || newTopic) {\n      // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n      getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n      if (this.state.isReader) {\n        getQuery = getQuery.withLaterDel();\n      }\n      // And show \"loading\" spinner.\n      this.setState({ fetchingMessages: true });\n    }\n\n    const setQuery = newTopic ? this.props.newTopicParams : undefined;\n    topic.subscribe(getQuery.build(), setQuery)\n      .then((ctrl) => {\n        if (ctrl.code == 303) {\n          // Redirect to another topic requested.\n          HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n          return;\n        }\n        if (this.state.topic != ctrl.topic) {\n          this.setState({topic: ctrl.topic});\n        }\n        this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n        // If there are unsent messages, try sending them now.\n        topic.queuedMessages((pub) => {\n          if (!pub._sending && topic.isSubscribed()) {\n            this.retrySend(pub);\n          }\n        });\n      })\n      .catch((err) => {\n        console.error(\"Failed subscription to\", this.state.topic);\n        this.props.onError(err.message, 'err');\n        const blankState = MessagesView.getDerivedStateFromProps({}, {});\n        blankState.title = this.props.intl.formatMessage(messages.not_found);\n        this.setState(blankState);\n      });\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  // Don't use React.createRef as the ref.current is not available in componentDidMount in this component.\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages and show/hide [go to latest message] button.\n  handleScrollEvent(event) {\n    const pos = event.target.scrollHeight - event.target.scrollTop - event.target.offsetHeight;\n    this.setState({\n      scrollPosition: pos,\n      showGoToLastButton: pos > SHOW_GO_TO_LAST_DIST,\n    });\n\n    if (this.state.fetchingMessages) {\n      return;\n    }\n\n    if (event.target.scrollTop <= 0) {\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n        this.setState({fetchingMessages: true}, () => {\n          topic.getMessagesPage(MESSAGES_PAGE)\n            .catch((err) => this.props.onError(err.message, 'err'))\n            .finally(() => this.setState({fetchingMessages: false}));\n          });\n      }\n    }\n  }\n\n  goToLatestMessage() {\n    this.setState({scrollPosition: 0});\n    if (this.messagesScroller) {\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight;\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  // The 'msg' could be false-ish if some message ranges were deleted.\n  handleMessageUpdate(msg) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (!msg) {\n      // msg could be null if one or more messages were deleted.\n      // Updating state to force redraw.\n      this.setState({latestClearId: topic.maxClearId()});\n      return;\n    }\n\n    clearTimeout(this.keyPressTimer)\n    this.setState({messageCount: topic.messageCount(), typingIndicator: false});\n\n    // Scroll to the bottom if the message is added to the end of the message list.\n    // TODO: This should be replaced by showing a \"scroll to bottom\" button.\n    if (topic.isNewMessage(msg.seq)) {\n      console.log(\"new message\", this.state.scrollPosition, SHOW_GO_TO_LAST_DIST);\n      if (this.state.scrollPosition > SHOW_GO_TO_LAST_DIST) {\n        this.setState({showGoToLastButton: true});\n      } else {\n        this.setState({scrollPosition: 0});\n      }\n    }\n\n    // Aknowledge messages except own messages. They are\n    // automatically assumed to be read and recived.\n    const status = topic.msgStatus(msg, true);\n    if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n      this.postReadNotification(msg.seq);\n    }\n    // This will send \"received\" notifications right away.\n    this.props.onData(msg);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        this.keyPressTimer = setTimeout(() => {\n          this.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.info(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.info(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowMessageContextMenu(params, messageSpecificMenuItems) {\n    if (params.userFrom == 'chan') {\n      params.userFrom = this.state.topic;\n      params.userName = this.state.title;\n    }\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // sendMessage sends the message with an optional subscription to topic first.\n  sendMessage(msg, uploadCompletionPromise, uploader) {\n    let head;\n    if (this.props.forwardMessage) {\n      // We are forwarding a message.\n      msg = this.props.forwardMessage.msg;\n      head = this.props.forwardMessage.head;\n      this.handleCancelReply();\n    } else if (this.state.reply && this.state.reply.content) {\n      // We are replying to a message in this topic.\n      head = {reply: '' + this.state.reply.seq};\n      // Turn it into Drafty so we can make a quoted Drafty object later.\n      if (typeof msg == 'string') {\n        msg = Drafty.parse(msg);\n      }\n      msg = Drafty.append(this.state.reply.content, msg);\n      this.handleCancelReply();\n    }\n    this.props.sendMessage(msg, uploadCompletionPromise, uploader, head);\n  }\n\n  // Retry sending a message.\n  retrySend(pub) {\n    this.props.sendMessage(pub.content, undefined, undefined, pub.head);\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file)\n        .then(b64 => this.sendMessage(Drafty.attachFile(null, {mime: b64.mime, data: b64.bits, filename: b64.name})))\n        .catch(err => this.props.onError(err));\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({\n        docPreview: {\n          file: file,\n          name: file.name,\n          size: file.size,\n          type: file.type\n        }\n      });\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.mime;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.name;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false)\n        // Convert tiny image into base64 for serialization and previewing.\n        .then(scaled => blobToBase64(scaled.blob))\n        .then(b64 => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: b64.bits, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.parse(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.sendMessage(msg, uploadCompletionPromise, uploader);\n        }).catch((err) => {\n          this.props.onError(err, 'err');\n        });\n        return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob)\n      .then(b64 => {\n        let msg = Drafty.insertImage(null, 0, {\n          mime: b64.mime,\n          preview: b64.bits, // Serializable preview\n          width: width,\n          height: height,\n          filename: fname,\n          size: blob.size\n        });\n        if (caption) {\n          msg = Drafty.appendLineBreak(msg);\n          msg = Drafty.append(msg, Drafty.parse(caption));\n        }\n        this.sendMessage(msg);\n      });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false)\n      .then(scaled => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(scaled.blob),\n          blob: scaled.blob,\n          name: scaled.name,\n          width: scaled.width,\n          height: scaled.height,\n          size: scaled.blob.size,\n          mime: scaled.mime\n        }});\n      }).catch(err => {\n        this.props.onError(err, 'err');\n      });\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const found = topic.findMessage(seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  handlePickReply(seq, content, forwarded, senderId, senderName) {\n    this.setState({reply: null});\n\n    if (!seq || !content) {\n      return;\n    }\n\n    content = forwarded ?\n        Drafty.forwardedContent(content) :\n        typeof content == 'string' ? Drafty.init(content) : content;\n    if (Drafty.isValid(content)) {\n      content = Drafty.preview(content, QUOTED_REPLY_LENGTH, undefined, !forwarded);\n    } else {\n      // /!\\ invalid content.\n      content = Drafty.append(Drafty.init('\\u26A0 '),\n        Drafty.wrapInto(this.props.intl.formatMessage(messages.invalid_content), 'EM'));\n    }\n\n    this.setState({\n      reply: {\n        content: Drafty.quote(senderName, senderId, content),\n        seq: seq\n      }\n    });\n    this.props.onCancelForwardMessage();\n  }\n\n  handleCancelReply() {\n    this.setState({reply: null});\n    this.props.onCancelForwardMessage();\n  }\n\n  handleQuoteClick(replyToSeq) {\n    const ref = this.getOrCreateMessageRef(replyToSeq);\n    if (ref && ref.current) {\n      ref.current.scrollIntoView({block: \"center\", behavior: \"smooth\"});\n      ref.current.classList.add('flash');\n      setTimeout(() => { ref.current.classList.remove('flash') } , 1000);\n    } else {\n      console.error(\"Unresolved message ref\", replyToSeq);\n    }\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            tinode={this.props.tinode}\n            reply={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            tinode={this.props.tinode}\n            reply={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        const icon_badges = [];\n        if (topic.trusted) {\n          if (topic.trusted.verified) {\n            icon_badges.push({icon: 'verified', color: 'badge-inv'});\n          }\n          if (topic.trusted.staff) {\n            icon_badges.push({icon: 'staff', color: 'badge-inv'});\n          }\n          if (topic.trusted.danger) {\n            icon_badges.push({icon: 'dangerous', color: 'badge-inv'});\n          }\n        }\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        topic.messages((msg, prev, next, i) => {\n          let nextFrom = next ? (next.from || 'chan') : null;\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userFrom = thisFrom, userName, userAvatar;\n          const user = topic.userDesc(thisFrom);\n          if (user && user.public) {\n            userName = user.public.fn;\n            userAvatar = makeImageUrl(user.public.photo);\n          }\n          chatBoxClass = groupTopic ? 'chat-box group' : 'chat-box';\n\n          // Ref for this chat message.\n          const ref = this.getOrCreateMessageRef(msg.seq);\n          let replyToSeq = msg.head ? parseInt(msg.head.reply) : null;\n          if (!replyToSeq || isNaN(replyToSeq)) {\n            replyToSeq = null;\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              forwarded={msg.head ? msg.head.forwarded : null}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              isGroup={groupTopic}\n              isChan={this.state.channel}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}  // Used by `formatter`.\n              showContextMenu={this.handleShowMessageContextMenu}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              pickReply={this.handlePickReply}\n              replyToSeq={replyToSeq}\n              onQuoteClick={this.handleQuoteClick}\n              ref={ref}\n              userIsWriter={this.state.isWriter}\n              key={msg.seq} />\n          );\n        });\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  tinode={this.props.tinode}\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }<ContactBadges badges={icon_badges} /></div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  tinode={this.props.tinode}\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <button className={'action-button' + (this.state.showGoToLastButton ? '' : ' hidden')}\n                onClick={this.goToLatestMessage}>\n                <i className=\"material-icons\">arrow_downward</i>\n              </button>\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                tinode={this.props.tinode}\n                noInput={!!this.props.forwardMessage}\n                disabled={!this.state.isWriter}\n                onKeyPress={this.sendKeyPress}\n                onSendMessage={this.sendMessage}\n                onAttachFile={this.props.forwardMessage ? null : this.handleAttachFile}\n                onAttachImage={this.props.forwardMessage ? null : this.handleAttachImage}\n                onError={this.props.onError}\n                reply={this.state.reply}\n                onQuoteClick={this.handleQuoteClick}\n                onCancelReply={this.handleCancelReply} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    const icon_badges = [];\n    if (this.props.trustedBadges) {\n      this.props.trustedBadges.map((b) => {\n        icon_badges.push({icon: b, color: 'badge-inv'});\n      });\n    }\n    let avatar = null;\n    if (this.props.tinode) {\n      avatar = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n    }\n    return (\n      <div id=\"side-caption-panel\" className=\"caption-panel\">\n        {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n        {avatar ?\n          <div id=\"self-avatar\" className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={avatar}\n              topic={this.props.myUserId}\n              title={this.props.title} />\n          </div>\n          :\n          null}\n        <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}<ContactBadges badges={icon_badges}/></div>\n        {this.props.state === 'login' ?\n            <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n          this.props.state === 'contacts' ?\n            <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n          null}\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nexport default class AccountSettingsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: _clip(me.public ? me.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(me.public ? me.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              avatar={this.state.avatar}\n              readOnly={true}\n              uid={this.props.myUserId}\n              title={this.state.fullName} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large ellipsized\">{this.state.fullName}</div>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n              description=\"Label for user address (ID)\" /></label>&nbsp;\n            <tt>{this.props.myUserId}</tt>\n          </div>\n          <div className=\"group\">\n            <BadgeList trustedBadges={this.props.trustedBadges} />\n          </div>\n          {this.state.description ?\n            <div className=\"group\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                  description=\"Label for editing topic description\" />\n              </label>\n              <div>{this.state.description}</div>\n            </div> : null}\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n              defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          tinode={this.props.tinode}\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_warning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdatePassword(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccountDesc('me', undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fullName = React.createRef();\n\n    this.state = {\n      fullName: '', // full/formatted name\n      private: '',\n      description: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFieldEdit = this.handleFieldEdit.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    // this.fullName.current.focus();\n  }\n\n  handleFieldEdit(name, e) {\n    this.setState({[name]: e.target.value || ''});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fullName.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    const description = this.state.description.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, description, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-column\">\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              onError={this.props.onError}\n              onImageChanged={this.handleImageChanged} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                ref={this.fullName} value={this.state.fullName} onChange={this.handleFieldEdit.bind(this, 'fullName')}\n                autoFocus required tabIndex={0} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handleFieldEdit.bind(this, 'private')} tabIndex={1} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-desc\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label>\n            <FormattedMessage id=\"description_editing_placeholder\" defaultMessage=\"Description (optional)\"\n              description=\"Placeholder for editing topic description\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-desc\" placeholder={placeholder}\n                value={this.state.description} onChange={this.handleFieldEdit.bind(this, 'description')} tabIndex={2} />\n            }</FormattedMessage>\n          </div>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} tabIndex={3} onChange={this.handleChannelToggle} />&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tinode={this.props.tinode}\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tabIndex={4}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  },\n  search_placeholder: {\n    id: \"search_placeholder\",\n    defaultMessage: \"List like email:alice@example.com, tel:17025550003...\",\n    description: \"Placeholder in contacts search field\"\n  },\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(uid) {\n    if (this.state.tabSelected == 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(uid);\n    }\n  }\n\n  handleNewGroupSubmit(name, description, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined,\n      {public: theCard(name, dataUrl, null, description), private: priv, tags: tags}, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    const search_placeholder = formatMessage(messages.search_placeholder);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                placeholder={search_placeholder}\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                tinode={this.props.tinode}\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      sent: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else if (this.state.sent) {\n      this.props.onCancel();\n    } else {\n      const email = this.state.email.trim();\n      this.setState({email: email});\n      this.props.onRequest('email', email).then(() => {\n        this.setState({sent: true});\n      });\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {(this.state.token && this.state.scheme) ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n        : this.state.sent ?\n          <>\n            <br/>\n            <center><i className=\"material-icons huge green\">task_alt</i></center>\n            <br/>\n            <center><FormattedMessage id=\"password_reset_email_sent\"\n              defaultMessage=\"An email has been sent to {email}. Follow the directions in the email to reset your password.\"\n              values={{ email: <tt>{this.state.email}</tt> }}\n              description=\"Notification that the email with password reset instructions has been sent\" /></center>\n          </>\n        :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{\n            (this.state.token && this.state.scheme) ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" />\n            : this.state.sent ?\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\"\n              description=\"Button [OK]\" />\n            :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['def', 'ws', 'lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\n\nimport AccountSettingsView from './account-settings-view.jsx';\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for AccountSettingsView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar, badges;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n      badges = this.props.trustedBadges;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n      badges = null;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          tinode={this.props.tinode}\n          trustedBadges={badges}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            tinode={this.props.tinode}\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <AccountSettingsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            trustedBadges={this.props.trustedBadges}\n            onNavigate={this.props.onNavigate} /> :\n\n          (view === 'general' || view === 'crop') ?\n          <TopicCommon\n            topic=\"me\"\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateTopicDesc={this.props.onUpdateAccountDesc}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccountDesc={this.props.onUpdateAccountDesc}\n            onUpdatePassword={this.props.onUpdatePassword}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword}\n            onCancel={this.props.onCancel} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\nimport ForwardDialog from '../widgets/forward-dialog.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, FORWARDED_PREVIEW_LENGTH, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, QUOTED_REPLY_LENGTH, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdatePasswordRequest = this.handleUpdatePasswordRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdateRequest = this.handleTagsUpdateRequest.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteTopicRequest = this.handleDeleteTopicRequest.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n\n    this.handleShowForwardDialog = this.handleShowForwardDialog.bind(this);\n    this.handleHideForwardDialog = this.handleHideForwardDialog.bind(this);\n\n    this.sendMessageToTopic = this.sendMessageToTopic.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && !!settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      myTrustedBadges: [],\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      infoPanel: undefined,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      forwardDialogVisible: false,\n      forwardMessage: null,\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n\n    // Process background notifications from the service worker.\n    if (typeof BroadcastChannel == 'function') {\n      const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n      serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n    } else {\n      // Safari is broken by design.\n      console.warn(\"Your browser does not support BroadcastChannel. Some features will not be available\");\n    }\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n      }\n\n      // Save possible topic name and navigate to blank state.\n      this.setState({requestedTopic: parsedNav.path[1]});\n      HashNavigation.navigateTo('');\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(data) {\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.error(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n\n        // Google could not be bothered to mention that onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // Handhe FCM pushes\n        // (a) for channels always,\n        // (b) pushes when the app is in foreground but has not focus.\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general','crop',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.warn(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      let topicName = hash.path[1] || null;\n      if (topicName != this.state.topicSelected) {\n        if (!Tinode.topicType(topicName)) {\n          // Clear invalid topic name.\n          topicName = null;\n        }\n        const newState = {\n          topicSelected: topicName\n        };\n        const acs = this.tinode.getTopicAccessMode(topicName);\n        if (acs) {\n          newState.topicSelectedAcs = acs;\n        }\n        this.setState(newState);\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: '', topicSelected: null});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      infoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      forwardDialogVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    let token = this.tinode.getAuthToken();\n    if (login && password) {\n      token = null;\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        if (token) {\n          this.handleLogout();\n        }\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.trusted) {\n        const badges = [];\n        for (const [key, val] of Object.entries(desc.trusted)) {\n          if (val) {\n            badges.push(key);\n          }\n        }\n        this.setState({\n          myTrustedBadges: badges,\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.info(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n\n    const past = new Date(0);\n    newState.chatList.sort((a, b) => {\n      return (a.touched || past).getTime() - (b.touched || past).getTime();\n    });\n\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        infoPanel: undefined\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName),\n          forwardMessage: null\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        infoPanel: undefined,\n        forwardMessage: null\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  //  - head - head dictionary to be attached to the message\n  handleSendMessage(msg, promise, uploader, head) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n    this.sendMessageToTopic(topic, msg, promise, uploader, head);\n  }\n\n  sendMessageToTopic(topic, msg, promise, uploader, head) {\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (head) {\n      msg.head = Object.assign(msg.head || {}, head);\n    }\n\n    if (!topic.isSubscribed()) {\n      // Topic is not subscribed yet. Subscribe.\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise\n        .then(() => topic.subscribe())\n        .then(() => {\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              this.sendMessage(pub);\n            }\n          });\n        });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.warn(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleToggleIncognitoMode(on) {\n    // Make state undefined.\n    this.setState({incognitoMode: null});\n\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      // Request failed, keep existing state.\n      this.setState({incognitoMode: !on});\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      this.setState({desktopAlerts: null});\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          Promise.resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.error(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.error(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.error(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('crop' == parsed.path[0]) {\n      path = 'general';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Sidepanel navigator. No need to bind to 'this'.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Topic info navigator. No need to bind to 'this'.\n  infoNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlInfoPanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, newTopicParams, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: newTopicParams.public, private: {comment: newTopicParams.private}};\n      params.tags = newTopicParams.tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was created, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, defacs) {\n    this.handleError();\n\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      let attachments;\n      if (pub) {\n        if (pub.photo) {\n          if (pub.photo.ref && pub.photo.ref != Tinode.DEL_CHAR) {\n            attachments = [pub.photo.ref];\n          } else if (!pub.photo.data || pub.photo.data == Tinode.DEL_CHAR) {\n            pub.photo = Tinode.DEL_CHAR;\n          }\n        }\n        params.public = pub;\n      }\n\n      if (typeof priv == 'string') {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      topic.setMeta({desc: params, attachments: attachments}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleUnarchive(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.archive(false);\n    }\n  }\n\n  handleUpdatePasswordRequest(password)  {\n    this.handleError();\n\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdateRequest(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    clearInterval(this.reconnectCountdown);\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request to hard-delete topic.\n    topic.delTopic(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: this.selfRef.current.getBoundingClientRect()\n    });\n  }\n\n  handleShowForwardDialog(params) {\n    if (this.state.sidePanelSelected == 'newtpk') {\n      // If the Find panel is active, close it.\n      this.handleSidepanelCancel();\n    }\n    const header = '➦ ' + params.userName;\n    const content = params.forwarded ?\n        Tinode.Drafty.forwardedContent(params.content) :\n        typeof params.content == 'string' ?\n            Tinode.Drafty.init(params.content) : params.content;\n    const preview = Tinode.Drafty.preview(content, FORWARDED_PREVIEW_LENGTH,\n                                          undefined, params.forwarded != null);\n    const msg = Tinode.Drafty.append(\n        Tinode.Drafty.appendLineBreak(\n            Tinode.Drafty.mention(header, params.userFrom)),\n        content);\n    const msgPreview = Tinode.Drafty.quote(header, params.userFrom, preview);\n    const head = {\n      forwarded: params.topicName + ':' + params.seq\n    };\n    this.setState({\n      forwardDialogVisible: true,\n      forwardMessage: { head: head, msg: msg, preview: msgPreview }\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      archived ? 'topic_restore' : 'topic_archive',\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleHideForwardDialog(keepForwardedMessage) {\n    this.setState({\n      forwardDialogVisible: false,\n      forwardMessage: keepForwardedMessage ? this.state.forwardMessage : null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    } else if (action == 'menu_item_forward') {\n      this.handleShowForwardDialog(params);\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', 'info'));\n    this.setState({infoPanel: 'info'});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    return this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\" ref={this.selfRef}>\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        {this.state.forwardDialogVisible ?\n          <ForwardDialog\n            tinode={this.tinode}\n            contacts={this.state.chatList}\n            topicSelected={this.state.topicSelected}\n            myUserId={this.state.myUserId}\n\n            hide={this.handleHideForwardDialog}\n            onInitFind={this.tnInitFind}\n            searchResults={this.state.searchResults}\n            onSearchContacts={this.handleSearchContacts}\n            onTopicSelected={this.handleStartTopicRequest}\n          />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          trustedBadges={this.state.myTrustedBadges}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccountDesc={this.handleTopicUpdateRequest}\n          onUpdatePassword={this.handleUpdatePasswordRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.infoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          // User public.fn.\n          myUserName={this.state.sidePanelTitle}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          forwardMessage={this.state.forwardMessage}\n          onCancelForwardMessage={this.handleHideForwardDialog}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.infoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n            panel={this.state.infoPanel}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onNavigate={this.infoNavigator}\n            onTopicDescUpdateRequest={this.handleTopicUpdateRequest}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteTopic={this.handleDeleteTopicRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdateRequest={this.handleTagsUpdateRequest}\n            onTopicUnArchive={this.handleUnarchive}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst htmlLang = allMessages[language] ? langauge : allMessages[baseLanguage] ? baseLanguage : 'en';\nconst messages = allMessages[htmlLang];\n\n// Set lang attribute of the HTML element: <html lang=\"XX\">\ndocument.getElementsByTagName('html')[0].setAttribute('lang', htmlLang);\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n      <TinodeWeb />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[141](0, __webpack_exports__, __webpack_require__);\n"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","IMAGE_THUMBNAIL_DIM","MAX_TITLE_LENGTH","MAX_TOPIC_DESCRIPTION_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","reply","forward","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","selfRef","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","replyToMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","current","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","error","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","pickReply","forwarded","userFrom","userName","menu","count","map","push","key","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","ref","injectIntl","icon_mapping","ContactBadges","badges","b","color","icon","name","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","shortenFileName","filename","maxLength","slice","idToColorClass","light","fg","userId","abs","value","hash","i","charCodeAt","stringToColorHash","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","createElement","type","rel","href","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","note","card","trim","mimeType","matches","exec","photo","data","substring","indexOf","arrayEqual","a","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","sanitizeImageUrl","sanitizedUrl","deliveryMarker","received","LetterTile","avatar","isGroup","iconColor","letter","charAt","authorizeURL","alt","src","onerror","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","LazyImage","state","Object","assign","padding","whenDone","promise","setState","cancel","componentDidUpdate","prevProps","FileProgress","width","progress","onCancel","UploadingImage","onCancelUpload","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","startsWith","fitImageSize","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","fileNameForMime","fname","mime","idx","ext","at","lastIndexOf","imageScaled","fileOrBlob","maxSize","Promise","resolve","img","Image","crossOrigin","Error","onload","async","URL","revokeObjectURL","dim","canvas","ctx","getContext","imageSmoothingEnabled","drawImage","includes","blob","toBlob","clearRect","createObjectURL","blobToBase64","reader","FileReader","evt","bits","split","readAsDataURL","drafty_form","drafty_attachment","drafty_image","handleImageData","el","attr","viewportWidth","minWidth","minHeight","Drafty","max","onImagePreview","loading","fullFormatter","values","call","onFormButtonClick","inner","child","undefined","val","onQuoteClick","concat","previewFormatter","inlineImageAttr","quoteFormatter","quoteImage","str","bin","atob","buf","ArrayBuffer","arr","Uint8Array","Blob","base64ToBlob","fetch","ok","status","statusText","scaled","b64","replyFormatter","hasCanceled","isCanceled","cancelablePromise","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","icon_badges","isVerified","isStaff","isDangerous","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","comment","showCheckmark","selected","showOnline","isChannel","unread","small","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","substr","showUnread","connected","onTopicSelected","trusted","verified","staff","danger","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","SearchContacts","edited","search","handleSearchChange","handleSearch","handleClear","handleKeyDown","onSearchContacts","query","placeholder","onChange","onKeyDown","required","autoFocus","ForwardDialog","handleClose","handleSearchContacts","handleContactSelected","onInitFind","uid","searchResults","isWriter","desription","search_placeholder","not_found_placeholder","LoadSpinner","large","clear","centered","show","AvatarUpload","source","handleFileReceived","image","files","onImageUpdated","randId","random","readOnly","accept","htmlFor","uploading","badge_verified","badge_staff","badge_danger","BadgeList","trustedBadges","CheckBox","handleChange","checked","MenuCancel","ErrorPanel","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","avatarDisabled","tabIndex","onFocus","onBlur","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","splice","instance","added","keys","k","onSubmit","doContactFiltering","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","Cropper","panX","panY","originX","originY","zoom","minZoom","maxZoom","overlay","cutout","boundingBox","imageWidth","imageHeight","mouseX","mouseY","prevDistance","cutoutRect","bBoxRect","initScaling","onZoom","handleZoom","mouseDown","mouseUp","mouseMove","mouseTouch","positionAll","translate","passive","getBoundingClientRect","currPan","nextDiff","imgRect","imgLeft","imgRight","coLeft","coRight","imgTop","imgBottom","coTop","coBottom","touches","body","dX","dY","checkBound","touch0","touch1","distance","sqrt","t3d","orig","transform","transformOrigin","onLoad","step","AvatarCrop","objURL","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","spanText","spanClass","multiline","element","rows","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","TopicDescEdit","getAccessMode","isMe","fullName","description","newAvatar","newAvatarMime","previousOnTags","tnNewTags","handleFullNameUpdate","handleImageUpdated","handleAvatarCropped","handlePrivateUpdate","handleDescriptionUpdate","uploadAvatar","handleAvatarCropCancel","handleTagsUpdated","onTagsUpdated","onUpdateTopicDesc","desc","readyToUpload","uploader","getLargeFileHelper","upload","finally","du","onUpdateTags","editable","full_name_placeholder","group_name_placeholder","private_placeholder","title_tag_manager","TopicCommon","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousTagsUpdated","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","getType","creds","method","asPhone","asEmail","onCredAdd","onTopicTagsUpdateRequest","cred","meth","done","onCredConfirm","onCredDelete","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","other_user","TopicSecurity","handleDeleteTopic","handleDeleteMessages","handleLeave","handleBlock","handleReport","onDeleteTopic","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","channel","groupTopic","onLaunchPermissionsEditor","access","auth","anon","modeGiven2","general","security","crop","perm_want","perm_given","perm_auth","perm_anon","perm_user","_clip","InfoView","admin","muted","address","selectedContact","modeGiven","modeWant","modeWant2","contactList","previousMetaDesc","previousSubsUpdated","resetSubs","resetDesc","resetTags","onMetaDesc","onSubsUpdated","handleImageChanged","handleMuted","handleUnarchive","handlePermissionsChanged","handleLaunchPermissionsEditor","handleShowAddMembers","handleMemberUpdateRequest","handleMemberSelected","handleContextMenu","handleBackNavigate","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","entries","isAdmin","isSharer","isDeleter","archived","isArchived","isGroupType","isChannelType","chan","getMeta","startMetaQuery","withTags","build","subs","onTopicDescUpdate","ignored","onChangePermissions","ignored2","onTopicUnArchive","which","perm","onTopicDescUpdateRequest","userPermissionsEdited","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onNavigate","onMemberUpdateRequest","args","panel","menuItems","view","shift","panelTitle","displayMobile","errorLevel","errorText","searchableContacts","no_members","Attachment","downloader","downloadFile","mimetype","download","loaded","helperFunc","isUrlRelative","downloadUrl","downloadWidget","BaseChatMessage","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","handleQuoteClick","formatterContext","getFormatter","tp","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","userIsWriter","MESSAGE_STATUS_DEL_RANGE","ratio","replyToSeq","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","attachments","att","tree","innerRef","IntlChatMessage","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","formatReply","messageEditArea","quote","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","file","getAsFile","filePasted","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","onCancelReply","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","maxlength","Invitation","handleButtonAction","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","infopanel","SHOW_GO_TO_LAST_DIST","online_now","last_seen","not_found","invalid_content","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendMessage","retrySend","sendImageAttachment","sendFileAttachment","sendKeyPress","subscribe","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleMessageUpdate","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowMessageContextMenu","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","goToLatestMessage","handlePickReply","handleCancelReply","chatMessageRefs","getOrCreateMessageRef","readNotificationQueue","readNotificationTimer","seqId","messagesScroller","messageCount","scrollPosition","scrollTop","scrollHeight","offsetHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","ready","nextState","forwardMessage","docPreview","imagePreview","imagePostview","typingIndicator","fetchingMessages","showGoToLastButton","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","latestClearId","maxClearId","isReader","readingBlocked","unconformed","unconfirmed","isSubscribed","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","withLaterData","withLaterDel","setQuery","code","onNewTopicCreated","queuedMessages","pub","_sending","navigateTo","setUrlTopic","blankState","oldTopicName","isTopicCached","oldTopic","pos","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","sendAt","noteRead","setMilliseconds","getMilliseconds","clearTimeout","keyPressTimer","isNewMessage","from","what","forceUpdate","attachJSON","parse","searchParams","set","open","messageSpecificMenuItems","onNewChat","noteKeyPress","uploadCompletionPromise","append","maxInbandAttachmentSize","urlPromise","fileToBase64","maxExternAttachmentSize","limit","insertImage","_tempPreview","appendLineBreak","found","findMessage","_cancelled","senderId","senderName","forwardedContent","init","isValid","wrapInto","onCancelForwardMessage","scrollIntoView","behavior","classList","add","remove","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","prev","next","nextFrom","thisFrom","isReply","userDesc","parseInt","isNaN","hi","ts","isChan","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","AccountSettingsView","me","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","onImageChanged","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","showPermissionEditorFor","handlePasswordUpdate","handleHidePermissionsEditor","handleDeleteAccount","pwd","onUpdatePassword","onUpdateAccountDesc","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handleFieldEdit","handleTagsChanged","handleChannelToggle","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","dataUrl","priv","no_contacts_placeholder","PasswordResetView","sent","token","scheme","onReset","onRequest","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","notif","support","newtpk","reset","SidepanelView","handleNewTopic","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdatePasswordRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleTagsUpdateRequest","handleLogout","handleDeleteTopicRequest","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","handleShowForwardDialog","handleHideForwardDialog","sendMessageToTopic","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","myTrustedBadges","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","infoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","forwardDialogVisible","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","viewportHeight","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","play","unused","foundContacts","merged","updated","past","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","on","enabled","updateObject","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","infoNavigator","setUrlInfoPanel","newGroupTopicName","oldName","newName","updateAccountBasic","getCurrentLogin","updateGiven","delCurrentUser","publish","header","msgPreview","self_blocked","subscribed","keepForwardedMessage","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","btoa","base64ReEncode","myUserName","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","htmlLang","allMessages","langauge","setAttribute","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","__webpack_modules__"],"sourceRoot":""}