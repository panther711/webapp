{"version":3,"sources":["webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/badge-list.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/more-button.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/edit-account-view.jsx","webpack://tinode-webapp/./src/widgets/cropper.jsx","webpack://tinode-webapp/./src/views/avatar-crop-view.jsx","webpack://tinode-webapp/./src/views/acc-general-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","MAX_TITLE_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","count","menu","map","push","key","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","LetterTile","avatar","isGroup","iconColor","abs","value","hash","i","charCodeAt","stringHash","trim","letter","charAt","alt","src","onerror","LoadSpinner","large","clear","centered","show","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","createElement","type","rel","href","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","card","mimeType","matches","exec","photo","data","substring","indexOf","ref","arrayEqual","a","b","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","sanitizeImageUrl","sanitizedUrl","deliveryMarker","received","name","color","AvatarUpload","state","source","handleFileReceived","componentDidUpdate","prevProps","setState","image","files","onImageUpdated","URL","createObjectURL","randId","random","substr","readOnly","authorizeURL","uid","accept","onChange","htmlFor","uploading","icon_mapping","badge_verified","badge_staff","badge_danger","BadgeList","badges","trustedBadges","comment","CheckBox","handleChange","checked","ContactBadges","icon","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","drafty_image","drafty_form","drafty_attachment","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","isVerified","isStaff","isDangerous","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","Drafty","draftyFormatter","showCheckmark","selected","showOnline","isChannel","unread","values","el","attr","concat","mime","ContactAction","action","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","startsWith","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","revokeObjectURL","dim","canvas","ctx","getContext","imageSmoothingEnabled","drawImage","includes","blob","Promise","resolve","toBlob","clearRect","fname","idx","ext","at","lastIndexOf","fileNameForMime","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","showUnread","connected","onTopicSelected","trusted","verified","staff","danger","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","undefined","avatarDisabled","onFocus","onBlur","onKeyDown","autoFocus","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","userId","status","splice","val","query","instance","added","Object","keys","k","onSubmit","doContactFiltering","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","tabIndex","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","fieldType","spanText","spanClass","MoreButton","open","handleToggle","onToggle","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","requested","granted","other_user","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","InfoView","admin","muted","address","groupTopic","channel","fullName","selectedContact","access","modeGiven","modeWant","modeGiven2","modeWant2","auth","anon","contactList","showMemberPanel","showPermissionEditorFor","moreInfoExpanded","previousMetaDesc","previousSubsUpdated","previousTagsUpdated","resetSubs","resetDesc","onMetaDesc","onSubsUpdated","onTagsUpdated","handleFullNameUpdate","handlePrivateUpdate","handleImageChanged","handleMuted","handlePermissionsChanged","handleLaunchPermissionsEditor","handleHidePermissionsEditor","handleShowAddMembers","handleHideAddMembers","handleMemberUpdateRequest","handleDeleteMessages","handleLeave","handleBlock","handleReport","handleMemberSelected","handleMoreInfo","handleTagsUpdated","handleContextMenu","getType","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","getAccessMode","entries","isAdmin","isSharer","isDeleter","isGroupType","isChannelType","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","ignored","onChangePermissions","perm","userPermissionsEdited","which","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","onMemberUpdateRequest","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","onTopicTagsUpdate","menuItems","displayMobile","errorLevel","errorText","searchableContacts","private_placeholder","more","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","getLargeFileHelper","download","loaded","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","UploadingImage","ChatMessage","uploader","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","onImagePreview","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","ratio","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","att","userName","notFound","viewportWidth","minWidth","minHeight","loading","inner","child","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","error","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","getBoundingClientRect","maxlength","max","Invitation","handleButtonAction","evt","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","args","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","online_now","last_seen","not_found","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleNewMessage","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","readNotificationQueue","readNotificationTimer","messagesScroller","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","setUrlTopic","blankState","nextState","docPreview","imagePreview","imagePostview","typingIndicator","msgs","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","isTopicCached","oldTopic","finally","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","shift","sendAt","noteRead","setMilliseconds","getMilliseconds","isNewMessage","from","what","clearTimeout","keyPressTimer","forceUpdate","sendMessage","attachJSON","parse","searchParams","set","search","messageSpecificMenuItems","onNewChat","noteKeyPress","maxInbandAttachmentSize","uploadCompletionPromise","upload","urlPromise","maxExternAttachmentSize","limit","tinyMine","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","init","bits64","found","find","_cancelled","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","nextFrom","thisFrom","isReply","userDesc","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","onImageChanged","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","me","onBasicNavigate","Cropper","panX","panY","originX","originY","zoom","minZoom","maxZoom","overlay","cutout","boundingBox","imageWidth","imageHeight","mouseX","mouseY","prevDistance","cutoutRect","bBoxRect","initScaling","onZoom","handleZoom","mouseDown","mouseUp","mouseMove","mouseTouch","positionAll","translate","current","passive","currPan","nextDiff","imgRect","imgLeft","imgRight","coLeft","coRight","imgTop","imgBottom","coTop","coBottom","touches","body","dX","dY","checkBound","touch0","touch1","distance","sqrt","t3d","orig","transform","transformOrigin","onLoad","step","AvatarCropView","objURL","imageCrop","AccGeneralView","credentials","getCredentials","addCredActive","addCredInvalid","newCred","newAvatar","newAvatarMime","previousOnTags","tnNewTags","tnCredsUpdated","handleImageUpdated","handleAvatarCropped","uploadAvatar","handleAvatarCropCancel","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","creds","onUpdateAccount","readyToUpload","unused","base64bits","du","method","asPhone","asEmail","onCredAdd","onUpdateTags","cred","meth","done","onCredConfirm","onCredDelete","full_name_placeholder","title_tag_manager","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","handlePasswordUpdate","handleDeleteAccount","pwd","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handlePrivateChange","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","dataUrl","priv","no_contacts_placeholder","searchResults","PasswordResetView","token","scheme","onReset","onRequest","reset","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","general","security","crop","notif","support","newtpk","SidepanelView","handleNewTopic","view","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdateAccountRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleLogout","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleHideInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","myTrustedBadges","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","showInfoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","archived","isArchived","play","foundContacts","merged","updated","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","updateAccountBasic","getCurrentLogin","on","enabled","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","newGroupTopicName","oldName","newName","permissions","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","str","btoa","atob","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","call","__webpack_modules__"],"mappings":"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","file":"index.prod.js","sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.18.0-alpha1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: when image dimensions are greater or the image is not square, it's resized to\n// a square of this size or less.\nexport const AVATAR_SIZE = 384;\n\n// Maximum size of an avatar in bytes for sending in-band. Bigger avatars will be sent out of band (as uploads).\nexport const MAX_AVATAR_BYTES = 4096;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\nimport HashNavigation from '../lib/navigation.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation?',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  unarchive: {\n    id: 'menu_item_restore_topic',\n    defaultMessage: 'Restore',\n    description: 'Restore topic from archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'topic_restore': {\n        id: 'topic_restore',\n        title: formatMessage(messages.unarchive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(false).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (ReactDOM.findDOMNode(this).contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"../img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    const className = 'load-spinner-box' + (this.props.large ? ' large' : '')\n      + (this.props.clear ? ' clear' : '') + (this.props.centered ? ' centered' : '');\n    return (this.props.show ?\n      <div className={className}><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType) {\n  let card = null;\n  fn = fn && fn.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1),\n        ref: Tinode.DEL_CHAR\n      };\n    } else {\n      card.photo = {\n        data: Tinode.DEL_CHAR,\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (typeof url != 'string') {\n    return url;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'danger-color' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport LoadSpinner from './load-spinner.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nimport { AVATAR_SIZE } from '../config.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      source: props.avatar\n    };\n\n    this.handleFileReceived = this.handleFileReceived.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({source: this.props.avatar});\n    }\n  }\n\n  handleFileReceived(e) {\n    const image = e.target.files[0];\n    this.props.onImageUpdated(image.type, URL.createObjectURL(image), image.name);\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.source ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageUpdated();}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.source ?\n          <img src={this.props.tinode.authorizeURL(sanitizeImageUrl(this.state.source))} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileReceived} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n        <LoadSpinner show={this.props.uploading} large={true} clear={true} centered={true} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst icon_mapping = {'staff': 'verified_user'};\n\nconst messages = defineMessages({\n  badge_verified: {\n    id: 'badge_verified',\n    defaultMessage: 'Verified/official',\n    description: 'Explanation of a verified account or topic badge'\n  },\n  badge_staff: {\n    id: 'badge_staff',\n    defaultMessage: 'Staff-managed',\n    description: 'Explanation of a staff-managed account or topic badge'\n  },\n  badge_danger: {\n    id: 'badge_danger',\n    defaultMessage: 'Untrustworthy',\n    description: 'Suspicious or untrustworthy account or topic badge'\n  },\n});\n\n\n/* Trusted badges with labels: verified, staff, danger */\nclass BadgeList extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let badges = null;\n    if (this.props.trustedBadges && this.props.trustedBadges.length > 0) {\n      badges = [];\n      this.props.trustedBadges.map((b) => {\n        const comment = formatMessage(messages['badge_' + b]);\n        const style = 'material-icons ' + b + '-color';\n        badges.push(<div className=\"trusted-badge\" key={b}><i className={style}>{icon_mapping[b] || b}</i> {comment}</div>);\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n\nexport default injectIntl(BadgeList);\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block', 'staff': 'verified_user'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n  render() {\n    let badges = null;\n    if (this.props.badges && this.props.badges.length > 0) {\n      badges = [];\n      this.props.badges.map((b) => {\n        const color = (b.color ? ' ' + b.color : '');\n        if (b.icon) {\n          badges.push(<i className={'material-icons as-badge' + color} key={b.key || b.icon}>{icon_mapping[b.icon] || b.icon}</i>);\n        } else {\n          badges.push(<span className={'badge' + color} key={b.key || b.name}>{b.name}</span>);\n        }\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  },\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n});\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.isVerified) {\n      icon_badges.push({icon: 'verified', color: 'verified-color'});\n    }\n    if (this.props.isStaff) {\n      icon_badges.push({icon: 'staff', color: 'staff-color'});\n    }\n    if (this.props.isDangerous) {\n      icon_badges.push({icon: 'dangerous', color: 'danger-color'});\n    }\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, draftyFormatter, this))) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <ContactBadges badges={icon_badges} /><UnreadBadge count={this.props.unread} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            <div className=\"contact-comment\">{marker}{subtitle || '\\u00A0'}</div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\n\n// Converts Drafty object into a one-line preview.\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  if (el) {\n    const { formatMessage } = this.props.intl;\n    switch (style) {\n      case 'BR':\n        // Replace new line with a space.\n        el = React.Fragment;\n        values = [' '];\n        break;\n      case 'HL':\n        // Make highlight less prominent in preview.\n        attr.className = 'highlight preview';\n        break;\n      case 'LN':\n        // Disable links in previews.\n        el = 'span';\n        break;\n      case 'IM':\n        // Replace image with '[icon] Image'.\n        el = React.Fragment;\n        values = [<i key=\"im\" className=\"material-icons\">photo</i>, formatMessage(messages.drafty_image)];\n        break;\n      case 'BN':\n        el = 'span';\n        attr.className = 'flat-button faux';\n        break;\n      case 'FM':\n        el = React.Fragment;\n        values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n          formatMessage(messages.drafty_form)].concat(values || []);\n        break;\n      case 'RW':\n        el = React.Fragment;\n        break;\n      case 'EX':\n        if (data && data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, formatMessage(messages.drafty_attachment)];\n        break;\n      default:\n        if (el == '_UNKN') {\n          el = React.Fragment;\n          values = [<i key=\"unkn\" className=\"material-icons\">extension</i>];\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Get an URL from a theCard photo: either create a data: URL or return reference URL.\nexport function makeImageUrl(photo) {\n  if (photo) {\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n    return photo.ref;\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(mime, blob, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Scale and crop image according to specified dimensions.\n// The coordinates are in unscaled image pixels, i.e. cut the rectangle first then scale it.\nexport function imageCrop(mime, objURL, left, top, width, height, scale, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    let canvas = document.createElement('canvas');\n    canvas.width = width * scale;\n    canvas.height = height * scale;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, left, top, width, height, 0, 0, canvas.width, canvas.height);\n\n    mime = SUPPORTED_IMAGE_FORMATS.includes(mime) ? mime : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n    // Allow GC.\n    canvas = null;\n    onSuccess(mime, blob, width, height);\n  };\n  img.src = objURL;\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.error(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.error(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              isVerified={c.trusted && c.trusted.verified}\n              isStaff={c.trusted && c.trusted.staff}\n              isDangerous={c.trusted && c.trusted.danger}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          autoFocus />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n  handleStartEditing() {\n    if (!this.props.readOnly) {\n      ReactDOM.findDOMNode(this).focus();\n      this.setState({active: true});\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    let value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (this.state.active) {\n      var fieldType = this.props.type || 'text';\n    } else {\n      var spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      var spanClass = 'in-place-edit' +\n        (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (spanText.length > 20) {\n        // FIXME: this is wrong for RTL languages.\n        spanText = spanText.substring(0, 19) + '...';\n      }\n    }\n    return (\n      this.state.active ?\n        (fieldType == 'password' ?\n          <VisiblePassword\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus={true}\n            onFinished={this.handlePasswordFinished}/>\n          :\n          <input type={fieldType}\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus\n            onChange={this.handeTextChange}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleEditingFinished} />\n        )\n        :\n        <span className={spanClass} onClick={this.handleStartEditing}>\n          <span className=\"content\">{spanText}</span>\n        </span>\n    );\n  }\n};\n","// Toggle [Title text >] -> [Title text v]\n\nimport React from 'react';\n\nexport default class MoreButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    const open = !this.state.open;\n    this.setState({open: open});\n    if (this.props.onToggle) {\n      this.props.onToggle(open);\n    }\n  }\n\n  render() {\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\n        <i className=\"material-icons\">chevron_right</i>}\n      </label>);\n  }\n}\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    let idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    var mode = (this.state.mode || 'N').split('').sort().join('');\n    var before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box\"><Contact\n            item={this.props.item}\n            title={this.props.userTitle}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags,\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\n      return {tags: nextProps.tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport MoreButton from '../widgets/more-button.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  requested: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  granted: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n});\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      tags: [],\n      trustedBadges: [],\n      showMemberPanel: false,\n      showPermissionEditorFor: undefined,\n      moreInfoExpanded: false,\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n      previousTagsUpdated: undefined\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    const badges = [];\n    if (topic.trusted) {\n      for (const [key, val] of Object.entries(topic.trusted)) {\n        if (val) {\n          badges.push(key);\n        }\n      }\n    }\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: topic.public ? topic.public.fn : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      trustedBadges: badges,\n      private: topic.private ? topic.private.comment : null,\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType(),\n      showMemberPanel: false,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onTopicDescUpdate(this.props.topic, theCard(fn, null), null);\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(perm) {\n    switch (this.state.showPermissionEditorFor) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.requested);\n        titleCompare = formatMessage(messages.granted);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        break;\n    }\n    this.setState({\n      showPermissionEditorFor: which,\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.setState({showMemberPanel: true});\n  }\n\n  handleHideAddMembers() {\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.setState({showMemberPanel: false});\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleMoreInfo(open) {\n    this.setState({moreInfoExpanded: open});\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const instance = this;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: function() {\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\n      }},\n      'member_delete',\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\n    ];\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\n          </div>\n          <div>\n            <MenuCancel onCancel={this.props.onCancel} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {this.state.showMemberPanel ?\n          <GroupManager\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleHideAddMembers}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        this.state.showPermissionEditorFor ?\n          <PermissionsEditor\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={this.handlePermissionsChanged}\n            onCancel={this.handleHidePermissionsEditor}\n            />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-row\">\n              <div className=\"panel-form-column\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div><InPlaceEdit\n                    placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                    readOnly={!this.state.owner}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} /></div>\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label>\n                </div>\n                <div>\n                  <FormattedMessage id=\"private_editing_placeholder\"\n                    defaultMessage=\"Visible to you only\"\n                    description=\"Placeholder for editing 'private'\">{\n                    (private_placeholder) => <InPlaceEdit\n                      placeholder={private_placeholder}\n                      value={this.state.private}\n                      onFinished={this.handlePrivateUpdate} />\n                  }</FormattedMessage>\n                </div>\n                <BadgeList trustedBadges={this.state.trustedBadges} />\n              </div>\n              <AvatarUpload\n                tinode={this.props.tinode}\n                avatar={this.state.avatar}\n                readOnly={!this.state.owner}\n                uid={this.props.topic}\n                title={this.state.fullName}\n                onImageUpdated={this.handleImageChanged}\n                onError={this.props.onError} />\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted}\n                  onChange={this.handleMuted} />\n              </div>\n              <FormattedMessage id=\"action_more\" defaultMessage=\"More\"\n                description=\"Action for showing more content\">{\n                (more) => <MoreButton\n                  title={more}\n                  open={this.state.moreInfoExpanded}\n                  onToggle={this.handleMoreInfo} />\n              }</FormattedMessage>\n              {this.state.moreInfoExpanded ?\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                      description=\"Label for user address (ID)\" /></label>\n                    <tt>{this.state.address}</tt>\n                  </div>\n                  {this.state.groupTopic ?\n                    <div className=\"panel-form-row\">\n                      <label>\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                          description=\"Label for current user permissions\" />\n                      </label>\n                      <tt className=\"clickable\"\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                        {this.state.access}\n                      </tt>\n                    </div>\n                    :\n                    <div>\n                      <div>\n                        <label className=\"small\">\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                            description=\"Section title\" />\n                        </label>\n                      </div>\n                      <div className=\"quoted\">\n                        <div>\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                          {this.state.access}\n                        </tt></div>\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\n                          {this.state.modeGiven2}\n                          </tt>\n                        </div>\n                      </div>\n                    </div>\n                  }\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\n                  <div>\n                    <div>\n                      <label className=\"small\">\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\n                          description=\"Section title\" />\n                      </label>\n                    </div>\n                    <div className=\"quoted\">\n                      <div>Auth: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\n                          {this.state.auth}\n                        </tt>\n                        :\n                        <tt>{this.state.auth}</tt>\n                      }\n                      </div>\n                      <div>Anon: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\n                          {this.state.anon}\n                        </tt>\n                        :\n                        <tt>{this.state.anon}</tt>\n                      }\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  null\n                }\n                </div>\n              :\n              null\n              }\n            </div>\n            <div className=\"hr\" />\n            {this.state.owner ?\n              <>\n                <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n                  description=\"Section title for TagManager\">{\n                  (tags) => <TagManager\n                    title={tags}\n                    tags={this.state.tags}\n                    activated={false}\n                    tinode={this.props.tinode}\n                    onSubmit={this.handleTagsUpdated} />\n                }</FormattedMessage>\n                <div className=\"hr\" />\n              </>\n              :\n              null\n            }\n            <div className=\"panel-form-column\">\n              {!this.state.channel ?\n                <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n                  <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                    formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n                  }\n                </a>\n                :\n                null\n              }\n              <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n                <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n              </a>\n              {!this.state.groupTopic ?\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n                  <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n                </a>\n                :\n                null\n              }\n              {!this.state.owner ?\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n                  <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n                </a>\n                :\n                null\n              }\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                        description=\"Section title or label\" />\n                    </label>\n                  </div>\n                  <div className=\"panel-form-row\">\n                    <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                      <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                        defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                    </a>\n                  </div>\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                    description=\"Shown in place of group members\">{\n                    (no_members) => <ContactList\n                      contacts={this.state.contactList}\n                      myUserId={this.props.myUserId}\n                      emptyListMessage={no_members}\n                      topicSelected={this.state.selectedContact}\n                      showOnline={false}\n                      showUnread={false}\n                      showMode={true}\n                      noScroll={true}\n                      onTopicSelected={this.handleMemberSelected}\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                    />\n                  }</FormattedMessage>\n                </div>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name} uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime} size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement(React.Fragment, null, Drafty.format(content, draftyFormatter, this));\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\n// Converts Drafty elements into React classes.\n// 'this' is set by the caller.\nfunction draftyFormatter(style, data, values, key) {\n  if (style == 'EX') {\n    // attachments are handled elsewhere.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'HL':\n        // Highlighted text. Assign class name.\n        attr.className = 'highlight';\n        break;\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = {\n            width: dim.dstWidth + 'px',\n            height: dim.dstHeight + 'px',\n            // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n            minWidth: dim.dstWidth + 'px',\n            minHeight: dim.dstHeight + 'px'\n          };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              attr.onClick = this.handleImagePreview;\n              attr.className += ' image-clickable';\n              attr.loading = 'lazy';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'RW':\n        // Form element formatting is dependent on element content.\n        break;\n      default:\n        if (el == '_UNKN') {\n          // Unknown element.\n          // TODO: make it prettier.\n          el = <><span className=\"material-icons\">extension</span></>;\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n    return (\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].substr(1).split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        let item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport ContactBadges from '../widgets/contact-badges.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messages.length != this.state.messages.length) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleNewMessage;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n      if (this.state.isReader || newTopic) {\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (ctrl.code == 303) {\n            // Redirect to another topic requested.\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n            return;\n          }\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messages: [],\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        isVerified: false,\n        isStaff: false,\n        isDangerous: false,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const msgs = [];\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        topic.messages(function(msg) {\n          if (!msg.deleted) {\n            msgs.push(msg);\n          }\n        });\n\n        Object.assign(nextState, {\n          messages: msgs,\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messages: [],\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE).catch((err) => {\n              this.setState({fetchingMessages: false});\n              this.props.onError(err.message, 'err');\n            });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  handleNewMessage(msg) {\n    // Regenerate messages list\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const newState = {messages: []};\n    topic.messages((m) => {\n      if (!m.deleted) {\n        newState.messages.push(m);\n      }\n    });\n\n    // msg could be null if one or more messages were deleted.\n    if (msg && !msg.deleted) {\n      // If the message is added to the end of the message list,\n      // scroll to the bottom.\n      if (topic.isNewMessage(msg.seq)) {\n        newState.scrollPosition = 0;\n      }\n\n      // Aknowledge messages except own messages. They are\n      // automatically assumed to be read and recived.\n      const status = topic.msgStatus(msg, true);\n      if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n        this.postReadNotification(msg.seq);\n      }\n      this.props.onData(msg);\n    }\n    this.setState(newState);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyMine, tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.init(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      this.props.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (mime, blob, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const found = this.state.messages.find(msg => msg.seq == seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        const icon_badges = [];\n        if (topic.trusted) {\n          if (topic.trusted.verified) {\n            icon_badges.push({icon: 'verified', color: 'badge-inv'});\n          }\n          if (topic.trusted.staff) {\n            icon_badges.push({icon: 'staff', color: 'badge-inv'});\n          }\n          if (topic.trusted.danger) {\n            icon_badges.push({icon: 'dangerous', color: 'badge-inv'});\n          }\n        }\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        for (let i=0; i<this.state.messages.length; i++) {\n          let msg = this.state.messages[i];\n          let nextFrom = null;\n\n          if (i + 1 < this.state.messages.length) {\n            nextFrom = this.state.messages[i+1].from || 'chan';\n          }\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              key={msg.seq} />\n          );\n        }\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }<ContactBadges badges={icon_badges} /></div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    const icon_badges = [];\n    if (this.props.trustedBadges) {\n      this.props.trustedBadges.map((b) => {\n        icon_badges.push({icon: b, color: 'badge-inv'});\n      });\n    }\n    let avatar = null;\n    if (this.props.tinode) {\n      avatar = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n    }\n    return (\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\n          {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n          {avatar ?\n            <div id=\"self-avatar\" className=\"avatar-box\">\n              <LetterTile\n                avatar={avatar}\n                topic={this.props.myUserId}\n                title={this.props.title} />\n            </div>\n            :\n            null}\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}<ContactBadges badges={icon_badges}/></div>\n          {this.props.state === 'login' ?\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n            this.props.state === 'contacts' ?\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n            null}\n        </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class EditAccountView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large\">{this.state.fullName}</div>\n            <div>\n              <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                description=\"Label for user address (ID)\" /></label>&nbsp;\n              <tt>{this.props.myUserId}</tt>\n            </div>\n            <BadgeList trustedBadges={this.props.trustedBadges} />\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            readOnly={!this.state.owner}\n            uid={this.props.myUserId}\n            title={this.state.fullName} />\n        </div>\n        <div className=\"panel-form-row\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_security\"\n              defaultMessage=\"Security\" description=\"Sidepanel title for AccSecurityView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Image zoom and crop widget.\n\nimport React from 'react';\n\nconst DEFAULT_MAX_ZOOM = 2.5;\n\nexport default class Cropper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Coordinates of the top left corner of the image in container coordinates.\n      panX: 0,\n      panY: 0,\n      // Origin of the zoom in image coordinates.\n      originX: 0,\n      originY: 0,\n      // Zoom scale.\n      zoom: 1,\n      // Zoom min and max.\n      minZoom: 0,\n      maxZoom: DEFAULT_MAX_ZOOM,\n    };\n\n    // References to DOM elements for hooking up events and getting screen dimensions.\n    // The transparent element which captures mouse moves (moves with the image).\n    this.overlay = React.createRef();\n    // The image cutout window or view port (static).\n    this.cutout = React.createRef();\n    // Scaled and translated image preview.\n    this.preview = React.createRef();\n    // The main container (static).\n    this.boundingBox = React.createRef();\n\n    // The original image width and height before any scaling.\n    this.imageWidth = 0;\n    this.imageHeight = 0;\n\n    // Mouse position when dragging.\n    this.mouseX = 0\n    this.mouseY = 0;\n    // Length of the previous mouse move when dragging.\n    this.prevDistance = 0;\n\n    // Bounding rectangles of static elements.\n    this.cutoutRect = {};\n    this.bBoxRect = {};\n    // Center of the bounding box.\n    this.originX = 0;\n    this.originY = 0;\n\n    this.initScaling = this.initScaling.bind(this);\n    this.onZoom = this.onZoom.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseTouch = this.mouseTouch.bind(this);\n    this.positionAll = this.positionAll.bind(this);\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.overlay.current.addEventListener('mousedown', this.mouseDown, { passive: true });\n    this.overlay.current.addEventListener('touchstart', this.mouseDown, { passive: true });\n\n    // The rectangle position is in viewport coordinates.\n    this.bBoxRect = this.boundingBox.current.getBoundingClientRect();\n    // Center of the bounding box in container coordinates.\n    this.originX = this.bBoxRect.width / 2;\n    this.originY = this.bBoxRect.height / 2;\n\n    // The rectangle position is in viewport coordinates.\n    this.cutoutRect = this.cutout.current.getBoundingClientRect();\n  }\n\n  componentWillUnmount() {\n    this.overlay.current.removeEventListener('mousedown', this.mouseDown);\n    this.overlay.current.removeEventListener('touchstart', this.mouseDown);\n  }\n\n  // Position all elements.\n  positionAll(panX, panY, zoom) {\n    // Zoom origin in image preview coordinates.\n    this.setState({\n      panX: panX,\n      panY: panY,\n      zoom: zoom,\n      originX: this.originX - panX,\n      originY: this.originY - panY,\n    });\n\n    // Pass cut out coordinates to caller.\n    const left = (this.originX - panX) * zoom - this.originX;\n    const top = (this.originY - panY) * zoom - this.originY;\n    this.props.onChange(\n      (left + this.cutoutRect.left - this.bBoxRect.left) / zoom,\n      (top + this.cutoutRect.top - this.bBoxRect.top) / zoom,\n      this.cutoutRect.width / zoom,\n      this.cutoutRect.height / zoom,\n      zoom);\n  }\n\n  // Check if new location is within the limits.\n  static checkBound(currPan, img, cutout, delta) {\n    let nextDiff = Math.min(0, cutout[0] - img[0] - delta, img[1] - cutout[1] + delta);\n    if (nextDiff == 0) {\n      // Cutout is completely within the image.\n      currPan += delta;\n    } else if (Math.min(0, cutout[0] - img[0], img[1] - cutout[1]) < nextDiff) {\n      // Cutout is outside of the range but closer to the bound.\n      currPan += delta;\n    }\n    return currPan;\n  }\n\n  initScaling() {\n    // Initialize components.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    this.imageWidth = imgRect.width;\n    this.imageHeight = imgRect.height;\n\n    // Set zoom slider's min and max values. Make sure the scaled image cannot be smaller than the cutout.\n    const minZoom = Math.max(this.cutoutRect.width / imgRect.width, this.cutoutRect.height / imgRect.height);\n    this.setState({\n      minZoom: minZoom,\n      maxZoom: Math.max(DEFAULT_MAX_ZOOM, minZoom + 1)\n    });\n\n    // Initial zoom level fills the bounding box at the smallest image dimension and overflows the largest, i.e. \"fill\" not \"fit\".\n    const zoom = Math.max(this.bBoxRect.width / imgRect.width, this.bBoxRect.height / imgRect.height);\n    // Converting from viewport coordinates to container, then panning.\n    const panX = this.cutoutRect.left - this.bBoxRect.left -\n      (imgRect.width - this.cutoutRect.width) / 2;\n    const panY = this.cutoutRect.top - this.bBoxRect.top -\n      (imgRect.height - this.cutoutRect.height) / 2;\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  onZoom(e) {\n    this.handleZoom(e.target.value);\n  }\n\n  handleZoom(zoom) {\n    let panX = this.state.panX;\n    let panY = this.state.panY;\n\n    // Ensure that the image at the new zoom is not outside of the cutout boundaries.\n    // Calculate image coordinates at the new zoom.\n    const imgLeft = this.originX - (this.originX - panX) * zoom;\n    const imgRight = imgLeft + this.imageWidth * zoom;\n    // Cutout in the same coordinates as the image.\n    const coLeft = this.cutoutRect.left - this.bBoxRect.left;\n    const coRight = coLeft + this.cutoutRect.width;\n    if (coLeft < imgLeft) {\n      panX -= imgLeft - coLeft;\n    } else if (coRight > imgRight) {\n      panX += coRight - imgRight;\n    }\n    const imgTop = this.originY - (this.originY - panY) * zoom;\n    const imgBottom = imgTop + this.imageHeight * zoom;\n    const coTop = this.cutoutRect.top - this.bBoxRect.top;\n    const coBottom = coTop + this.cutoutRect.height;\n    if (coTop < imgTop) {\n      panY -= imgTop - coTop;\n    } else if (coBottom > imgBottom) {\n      panY += coBottom - imgBottom;\n    }\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  mouseDown(e) {\n    if (e.touches) {\n      this.mouseX = e.touches[0].pageX;\n      this.mouseY = e.touches[0].pageY;\n    } else {\n      this.mouseX = e.pageX;\n      this.mouseY = e.pageY;\n    }\n\n    window.addEventListener('mousemove', this.mouseMove, { passive: false });\n    window.addEventListener('touchmove', this.mouseTouch, { passive: false });\n    window.addEventListener('mouseup', this.mouseUp, { passive: true });\n    window.addEventListener('touchend', this.mouseUp, { passive: true });\n    // Disable text selection in the entire document.\n    document.body.style['userSelect'] = 'none';\n  }\n\n  // Perform image panning.\n  translate(pageX, pageY) {\n    const dX = pageX - this.mouseX;\n    const dY = pageY - this.mouseY;\n\n    this.mouseX = pageX;\n    this.mouseY = pageY;\n\n    // Make sure the image is within the cutout window.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    // Check if the new position is within the boundaries, and if not if it's closer to them.\n    let panX = Cropper.checkBound(this.state.panX, [imgRect.left, imgRect.right],\n      [this.cutoutRect.left, this.cutoutRect.right], dX);\n    let panY = Cropper.checkBound(this.state.panY, [imgRect.top, imgRect.bottom],\n      [this.cutoutRect.top, this.cutoutRect.bottom], dY);\n\n    this.positionAll(panX, panY, this.state.zoom);\n  }\n\n  // Image panning.\n  mouseMove(e) {\n    e.preventDefault();\n    this.translate(e.pageX, e.pageY);\n  }\n\n  mouseTouch(e) {\n    e.preventDefault();\n\n    if (e.touches.length == 1) {\n      this.translate(e.touches[0].pageX, e.touches[0].pageY);\n      return;\n    }\n\n    // Image zooming by pinching.\n    const [touch0, touch1] = e.touches;\n    const distance = Math.sqrt((touch0.pageX - touch1.pageX) * (touch0.pageX - touch1.pageX) +\n      (touch0.pageY - touch1.pageY) * (touch0.pageY - touch1.pageY));\n\n    if (!this.prevDistance) {\n        this.prevDistance = distance / this.state.zoom;\n    }\n\n    let scale = (distance / this.prevDistance);\n    this.handleZoom(Math.max(this.minZoom, Math.min(this.maxZoom, scale)));\n  }\n\n  mouseUp(e) {\n    window.removeEventListener('mousemove', this.mouseMove);\n    window.removeEventListener('touchmove', this.mouseTouch);\n    window.removeEventListener('mouseup', this.mouseUp);\n    window.removeEventListener('touchend', this.mouseUp);\n    // Re-enable text selection.\n    document.body.style['userSelect'] = '';\n\n    this.positionAll(this.state.panX, this.state.panY, this.state.zoom);\n  }\n\n  render() {\n    // transform3d: position and scale.\n    const t3d = `translate3d(${this.state.panX}px, ${this.state.panY}px, 0) scale(${this.state.zoom})`;\n    // transformOrigin: zoom origin.\n    const orig = `${this.state.originX}px ${this.state.originY}px`;\n\n    // Overlay position and size are exactly equal to the position and size of the transformed image\n    // except it uses different coordinates.\n    const overlay = {\n      top: `${this.originY - this.state.originY * this.state.zoom}px`,\n      left: `${this.originX - this.state.originX * this.state.zoom}px`,\n      width: `${this.imageWidth * this.state.zoom}px`,\n      height: `${this.imageHeight * this.state.zoom}px`\n    };\n    return (\n      <div className=\"cropper\">\n        <div className=\"bounding-box\" ref={this.boundingBox}>\n          <img src={this.props.source} className=\"preview\" alt=\"\"\n            style={{transform: t3d, transformOrigin: orig}} ref={this.preview} onLoad={this.initScaling} />\n          <div className=\"cutout circle\" ref={this.cutout} />\n          <div className=\"overlay\" style={overlay} ref={this.overlay} />\n        </div>\n        <div className=\"zoom-wrapper\">\n          <input type=\"range\" className=\"zoomer\"\n            step=\"0.001\" min={this.state.minZoom} max={this.state.maxZoom} value={this.state.zoom} onChange={this.onZoom} />\n        </div>\n      </div>\n    );\n  }\n}\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Cropper from '../widgets/cropper.jsx';\nimport { imageCrop } from '../lib/blob-helpers.js';\n\nexport default class AvatarCropView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n      scale: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Cut out in image coordinates and desired scale factor.\n  handleChange(left, top, width, height, scale) {\n    this.setState({\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      scale: scale\n    });\n  }\n\n  handleSubmit() {\n    imageCrop(this.props.mime, this.props.avatar,\n      this.state.left, this.state.top,\n      this.state.width, this.state.height,\n      this.state.scale,\n      (mime, blob, width, height) => {\n        this.props.onSubmit(mime, blob, width, height);\n      },\n      (err) => {\n        this.props.onError(err);\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <Cropper\n            source={this.props.avatar}\n            onChange={this.handleChange} />\n        </div>\n        <div className=\"dialog-buttons\">\n          {this.props.onCancel ?\n            <button className=\"secondary\" onClick={this.props.onCancel}>\n              <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n            </button>\n            : null}\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarCropView from './avatar-crop-view.jsx';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { AVATAR_SIZE, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE,\n  MAX_INBAND_ATTACHMENT_SIZE, MAX_TITLE_LENGTH } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, asEmail, asPhone, theCard } from '../lib/utils.js';\n\nexport default class AccGeneralView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null),\n      tags: me.tags(),\n      credentials: me.getCredentials() || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      newAvatar: null,\n      newAvatarMime: null,\n      previousOnTags: me.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageUpdated = this.handleImageUpdated.bind(this);\n    this.handleAvatarCropped = this.handleAvatarCropped.bind(this);\n    this.uploadAvatar = this.uploadAvatar.bind(this);\n    this.handleAvatarCropCancel = this.handleAvatarCropCancel.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onCredsUpdated = this.tnCredsUpdated;\n    me.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onTagsUpdated = this.state.previousOnTags;\n    me.onCredsUpdated = undefined;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateAccount(undefined, theCard(fn, null));\n    }\n  }\n\n  // AvatarUpload widget has changed the avatar: received a new file or deleted the avatar.\n  handleImageUpdated(mime, img) {\n    // This will show the AvatarCropView is img is not null.\n    this.setState({newAvatar: img, newAvatarMime: mime});\n    if (!img) {\n      // Deleting the avatar.\n      this.props.onUpdateAccount(undefined, theCard(null, Tinode.DEL_CHAR));\n    }\n  }\n\n  // AvatarCropView calls this method when the user has cropped the image.\n  handleAvatarCropped(mime, blob, width, height) {\n    const url = blob ? URL.createObjectURL(blob) : null;\n    this.setState({avatar: url, newAvatar: null, newAvatarMime: null});\n    if (blob) {\n      this.uploadAvatar(mime, blob, width, height);\n    }\n  }\n\n  // Utility method for converting cropped avatar blob to bytes for sending inband or\n  // for uploading it to the server out of band.\n  uploadAvatar(mime, blob, width, height) {\n    const readyToUpload = (mime, blob, width, height) => {\n      if (blob.size > MAX_AVATAR_BYTES) {\n        // Too large to send inband - uploading out of band and sending as a link.\n        const uploader = this.props.tinode.getLargeFileHelper();\n\n        this.setState({uploading: true});\n        uploader.upload(blob)\n          .then((url) => {\n            this.props.onUpdateAccount(undefined, theCard(null, url));\n          })\n          .catch((err) => {\n            this.props.onError(err, 'err');\n          })\n          .finally(() => {\n            this.setState({uploading: false});\n          });\n      } else {\n        this.setState({uploading: true});\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageUrl({data: base64bits, type: mime});\n          this.setState({source: du});\n          this.props.onUpdateAccount(undefined, theCard(null, du));\n          this.setState({uploading: false});\n        });\n      }\n    };\n\n    if (width > AVATAR_SIZE || height > AVATAR_SIZE || width != height) {\n      // Avatar is not square or too large even after cropping. Shrink it and make square.\n      imageScaled(blob, AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n        readyToUpload,\n        (err) => {\n          this.props.onError(err, 'err');\n        });\n    } else {\n      readyToUpload(mime, blob, width, height);\n    }\n  }\n\n  handleAvatarCropCancel(img) {\n    this.setState({newAvatar: null, newAvatarMime: null});\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    let value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    if (this.state.newAvatar) {\n      return (\n        <AvatarCropView\n          avatar={this.state.newAvatar}\n          mime={this.state.newAvatarMime}\n          onSubmit={this.handleAvatarCropped}\n          onCancel={this.handleAvatarCropCancel}\n          onError={this.props.onError} />\n      );\n    }\n\n    const credentials = [];\n    this.state.credentials.map((cred) => {\n      credentials.push(<div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n        <span > {!cred.done ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n              <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                description=\"Validate credentail call to action\" />\n            </a>\n          : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n            className=\"material-icons gray\">delete_outline</i></a></span></div>);\n    });\n\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\"><FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" /></label>\n            <div><FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n              description=\"Input placeholder for person's full name\">{\n              (full_name_placeholder) => <InPlaceEdit\n                placeholder={full_name_placeholder}\n                value={this.state.fullName}\n                onFinished={this.handleFullNameUpdate} />\n            }</FormattedMessage></div>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            uid={this.props.myUserId}\n            title={this.state.fullName}\n            onImageUpdated={this.handleImageUpdated}\n            onError={this.props.onError} />\n        </div>\n        <div className=\"hr\" />\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title_tag_manager) => <TagManager\n            title={title_tag_manager}\n            activated={false}\n            tags={this.state.tags}\n            tinode={this.props.tinode}\n            onSubmit={this.handleTagsUpdated} />\n        }</FormattedMessage>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n            description=\"Label for user contacts\" />\n          </label>\n          <div className=\"quoted\">\n            {credentials}\n            {this.state.addCredActive ?\n              <input type=\"text\" value={this.state.value}\n                className={this.state.addCredInvalid ? 'invalid' : null}\n                placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n              : null}\n            <div>\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                <i className=\"material-icons\">add</i>\n                <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n              </a></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_warning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdateAccount(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccount(undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fn: '', // full/formatted name\n      private: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handlePrivateChange(e) {\n    this.setState({private: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\n            }</FormattedMessage>\n            <br />\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handlePrivateChange} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onError={this.props.onError}\n            onImageChanged={this.handleImageChanged} />\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} onChange={this.handleChannelToggle}/>&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tinode={this.props.tinode}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel);\n    }\n  }\n\n  handleNewGroupSubmit(name, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, theCard(name, dataUrl), priv, tags, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else {\n      this.props.onRequest('email', this.state.email.trim());\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    let reset = (this.state.token && this.state.scheme);\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {reset ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n          :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{reset ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" /> :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['def', 'ws', 'lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\n\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport EditAccountView from './edit-account-view.jsx';\nimport AccGeneralView from './acc-general-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for EditAccountView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'sidepanel_title_acc_general',\n    description: 'Sidepanel title for AccGeneralView.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'sidepanel_title_acc_security',\n    description: 'Sidepanel title for AccSecurityView.',\n    defaultMessage: 'Security'\n  },\n  crop: {\n    id: 'sidepanel_title_crop',\n    description: 'Sidepanel title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onBasicNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar, badges;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n      badges = this.props.trustedBadges;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n      badges = null;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          tinode={this.props.tinode}\n          trustedBadges={badges}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            tinode={this.props.tinode}\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <EditAccountView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            trustedBadges={this.props.trustedBadges}\n            onBasicNavigate={this.props.onBasicNavigate} /> :\n\n          (view === 'general' || view === 'crop') ?\n          <AccGeneralView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onBasicNavigate={this.props.onBasicNavigate}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdateAccountRequest = this.handleUpdateAccountRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      myTrustedBadges: [],\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      showInfoPanel: false,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n    // Process background notifications from the service worker.\n    const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n    serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n      }\n\n      // Save possible topic name and navigate to blank state.\n      this.setState({requestedTopic: parsedNav.path[1]});\n      HashNavigation.navigateTo('');\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(data) {\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.error(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n\n        // Google could not be bothered to mention that onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // Handhe FCM pushes\n        // (a) for channels always,\n        // (b) pushes when the app is in foreground but has not focus.\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general','crop',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.info(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      const topicName = hash.path[1];\n      if (Tinode.topicType(topicName) && topicName != this.state.topicSelected) {\n          const newState = {\n            topicSelected: topicName\n          };\n          const acs = this.tinode.getTopicAccessMode(topicName);\n          if (acs) {\n            newState.topicSelectedAcs = acs;\n          }\n          this.setState(newState);\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: ''});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      showInfoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    const token = this.tinode.getAuthToken();\n    if (login && password) {\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        localStorage.removeItem('auth-token');\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.trusted) {\n        const badges = [];\n        for (const [key, val] of Object.entries(desc.trusted)) {\n          if (val) {\n            badges.push(key);\n          }\n        }\n        this.setState({\n          myTrustedBadges: badges,\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.info(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        showInfoPanel: false\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        showInfoPanel: false\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.info(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleUpdateAccountRequest(password, pub, defacs) {\n    this.handleError();\n\n    if (pub || defacs) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      this.tinode.getMeTopic().setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          Promise.resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.error(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.error(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.error(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('crop' == parsed.path[0]) {\n      path = 'general';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Basic nagigator by hash value. No need to bind to this.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, permissions) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (permissions) {\n        params.defacs = permissions;\n      }\n      topic.setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    clearInterval(this.reconnectCountdown);\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: ReactDOM.findDOMNode(this).getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      !archived ? 'topic_restore' : 'topic_archive',\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', true));\n    this.setState({showInfoPanel: true});\n  }\n\n  handleHideInfoView() {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\n    this.setState({showInfoPanel: false});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\">\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          trustedBadges={this.state.myTrustedBadges}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onBasicNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccount={this.handleUpdateAccountRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.showInfoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.showInfoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onCancel={this.handleHideInfoView}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n      <TinodeWeb />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[163](0, __webpack_exports__, __webpack_require__);\n"],"sourceRoot":""}